{
	"id": "21a6fe2476f7da531d8fb926c38eeb19",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\nabstract contract Context20 {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context20, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC20.sol": {
				"Context20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"Context20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"keccak256\":\"0xba71dc3094972d4cfaa4419d2a1d0e89e809ed53cf0d93bc625841dcbe9f49cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f389154466a857ca750d6848bc77e3facf81db994fadddf47092e54d1d8f750\",\"dweb:/ipfs/QmSMEU1xseo34hd68zkogEBTT8rftskvT3hMZPPHJ87aYH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20.sol\":4688:16002  contract ERC20 is Context20, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC20.sol\":5138:5251  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC20.sol\":5204:5209  _name */\n  0x03\n    /* \"contracts/ERC20.sol\":5204:5217  _name = name_ */\n  tag_6\n    /* \"contracts/ERC20.sol\":5212:5217  name_ */\n  dup4\n    /* \"contracts/ERC20.sol\":5204:5209  _name */\n  dup3\n    /* \"contracts/ERC20.sol\":5204:5217  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/ERC20.sol\":5227:5234  _symbol */\n  0x04\n    /* \"contracts/ERC20.sol\":5227:5244  _symbol = symbol_ */\n  tag_8\n    /* \"contracts/ERC20.sol\":5237:5244  symbol_ */\n  dup3\n    /* \"contracts/ERC20.sol\":5227:5234  _symbol */\n  dup3\n    /* \"contracts/ERC20.sol\":5227:5244  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/ERC20.sol\":5138:5251  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/ERC20.sol\":4688:16002  contract ERC20 is Context20, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:990   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":732:735   */\n  dup7\n    /* \"#utility.yul\":725:729   */\n  0x20\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:730   */\n  add\n    /* \"#utility.yul\":701:736   */\n  gt\n    /* \"#utility.yul\":698:753   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":749:750   */\n  0x00\n    /* \"#utility.yul\":746:747   */\n  dup1\n    /* \"#utility.yul\":739:751   */\n  revert\n    /* \"#utility.yul\":698:753   */\ntag_24:\n    /* \"#utility.yul\":771:772   */\n  0x00\n    /* \"#utility.yul\":762:772   */\n  swap2\n  pop\n    /* \"#utility.yul\":781:914   */\ntag_25:\n    /* \"#utility.yul\":795:797   */\n  dup4\n    /* \"#utility.yul\":792:793   */\n  dup3\n    /* \"#utility.yul\":789:798   */\n  lt\n    /* \"#utility.yul\":781:914   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":883:897   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":879:902   */\n  dup4\n  add\n    /* \"#utility.yul\":873:903   */\n  mload\n    /* \"#utility.yul\":852:866   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":848:871   */\n  dup5\n  add\n    /* \"#utility.yul\":841:904   */\n  mstore\n    /* \"#utility.yul\":806:816   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":781:914   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":958:959   */\n  0x00\n    /* \"#utility.yul\":951:955   */\n  0x20\n    /* \"#utility.yul\":946:948   */\n  dup6\n    /* \"#utility.yul\":938:944   */\n  dup4\n    /* \"#utility.yul\":934:949   */\n  add\n    /* \"#utility.yul\":930:956   */\n  add\n    /* \"#utility.yul\":923:960   */\n  mstore\n    /* \"#utility.yul\":978:984   */\n  dup1\n    /* \"#utility.yul\":969:984   */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:990   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":995:1557   */\ntag_3:\n    /* \"#utility.yul\":1094:1100   */\n  0x00\n    /* \"#utility.yul\":1102:1108   */\n  dup1\n    /* \"#utility.yul\":1155:1157   */\n  0x40\n    /* \"#utility.yul\":1143:1152   */\n  dup4\n    /* \"#utility.yul\":1134:1141   */\n  dup6\n    /* \"#utility.yul\":1130:1153   */\n  sub\n    /* \"#utility.yul\":1126:1158   */\n  slt\n    /* \"#utility.yul\":1123:1175   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1171:1172   */\n  0x00\n    /* \"#utility.yul\":1168:1169   */\n  dup1\n    /* \"#utility.yul\":1161:1173   */\n  revert\n    /* \"#utility.yul\":1123:1175   */\ntag_29:\n    /* \"#utility.yul\":1198:1214   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1263:1277   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1260:1294   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1290:1291   */\n  0x00\n    /* \"#utility.yul\":1287:1288   */\n  dup1\n    /* \"#utility.yul\":1280:1292   */\n  revert\n    /* \"#utility.yul\":1260:1294   */\ntag_30:\n    /* \"#utility.yul\":1313:1374   */\n  tag_31\n    /* \"#utility.yul\":1366:1373   */\n  dup7\n    /* \"#utility.yul\":1357:1363   */\n  dup4\n    /* \"#utility.yul\":1346:1355   */\n  dup8\n    /* \"#utility.yul\":1342:1364   */\n  add\n    /* \"#utility.yul\":1313:1374   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1303:1374   */\n  swap4\n  pop\n    /* \"#utility.yul\":1420:1422   */\n  0x20\n    /* \"#utility.yul\":1409:1418   */\n  dup6\n    /* \"#utility.yul\":1405:1423   */\n  add\n    /* \"#utility.yul\":1399:1424   */\n  mload\n    /* \"#utility.yul\":1383:1424   */\n  swap2\n  pop\n    /* \"#utility.yul\":1449:1451   */\n  dup1\n    /* \"#utility.yul\":1439:1447   */\n  dup3\n    /* \"#utility.yul\":1436:1452   */\n  gt\n    /* \"#utility.yul\":1433:1469   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1465:1466   */\n  0x00\n    /* \"#utility.yul\":1462:1463   */\n  dup1\n    /* \"#utility.yul\":1455:1467   */\n  revert\n    /* \"#utility.yul\":1433:1469   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1488:1551   */\n  tag_33\n    /* \"#utility.yul\":1543:1550   */\n  dup6\n    /* \"#utility.yul\":1532:1540   */\n  dup3\n    /* \"#utility.yul\":1521:1530   */\n  dup7\n    /* \"#utility.yul\":1517:1541   */\n  add\n    /* \"#utility.yul\":1488:1551   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1478:1551   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":995:1557   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1562:1942   */\ntag_12:\n    /* \"#utility.yul\":1641:1642   */\n  0x01\n    /* \"#utility.yul\":1637:1649   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1684:1696   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1705:1766   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1759:1763   */\n  0x7f\n    /* \"#utility.yul\":1751:1757   */\n  dup3\n    /* \"#utility.yul\":1747:1764   */\n  and\n    /* \"#utility.yul\":1737:1764   */\n  swap2\n  pop\n    /* \"#utility.yul\":1705:1766   */\ntag_35:\n    /* \"#utility.yul\":1812:1814   */\n  0x20\n    /* \"#utility.yul\":1804:1810   */\n  dup3\n    /* \"#utility.yul\":1801:1815   */\n  lt\n    /* \"#utility.yul\":1781:1799   */\n  dup2\n    /* \"#utility.yul\":1778:1816   */\n  sub\n    /* \"#utility.yul\":1775:1936   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1858:1868   */\n  0x4e487b71\n    /* \"#utility.yul\":1853:1856   */\n  0xe0\n    /* \"#utility.yul\":1849:1869   */\n  shl\n    /* \"#utility.yul\":1846:1847   */\n  0x00\n    /* \"#utility.yul\":1839:1870   */\n  mstore\n    /* \"#utility.yul\":1893:1897   */\n  0x22\n    /* \"#utility.yul\":1890:1891   */\n  0x04\n    /* \"#utility.yul\":1883:1898   */\n  mstore\n    /* \"#utility.yul\":1921:1925   */\n  0x24\n    /* \"#utility.yul\":1918:1919   */\n  0x00\n    /* \"#utility.yul\":1911:1926   */\n  revert\n    /* \"#utility.yul\":1775:1936   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1562:1942   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2073:2591   */\ntag_14:\n    /* \"#utility.yul\":2175:2177   */\n  0x1f\n    /* \"#utility.yul\":2170:2173   */\n  dup3\n    /* \"#utility.yul\":2167:2178   */\n  gt\n    /* \"#utility.yul\":2164:2585   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2211:2216   */\n  dup1\n    /* \"#utility.yul\":2208:2209   */\n  0x00\n    /* \"#utility.yul\":2201:2217   */\n  mstore\n    /* \"#utility.yul\":2255:2259   */\n  0x20\n    /* \"#utility.yul\":2252:2253   */\n  0x00\n    /* \"#utility.yul\":2242:2260   */\n  keccak256\n    /* \"#utility.yul\":2325:2327   */\n  0x1f\n    /* \"#utility.yul\":2313:2323   */\n  dup5\n    /* \"#utility.yul\":2309:2328   */\n  add\n    /* \"#utility.yul\":2306:2307   */\n  0x05\n    /* \"#utility.yul\":2302:2329   */\n  shr\n    /* \"#utility.yul\":2296:2300   */\n  dup2\n    /* \"#utility.yul\":2292:2330   */\n  add\n    /* \"#utility.yul\":2361:2365   */\n  0x20\n    /* \"#utility.yul\":2349:2359   */\n  dup6\n    /* \"#utility.yul\":2346:2366   */\n  lt\n    /* \"#utility.yul\":2343:2390   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2384:2388   */\n  dup1\n    /* \"#utility.yul\":2343:2390   */\ntag_40:\n    /* \"#utility.yul\":2439:2441   */\n  0x1f\n    /* \"#utility.yul\":2434:2437   */\n  dup5\n    /* \"#utility.yul\":2430:2442   */\n  add\n    /* \"#utility.yul\":2427:2428   */\n  0x05\n    /* \"#utility.yul\":2423:2443   */\n  shr\n    /* \"#utility.yul\":2417:2421   */\n  dup3\n    /* \"#utility.yul\":2413:2444   */\n  add\n    /* \"#utility.yul\":2403:2444   */\n  swap2\n  pop\n    /* \"#utility.yul\":2494:2575   */\ntag_41:\n    /* \"#utility.yul\":2512:2514   */\n  dup2\n    /* \"#utility.yul\":2505:2510   */\n  dup2\n    /* \"#utility.yul\":2502:2515   */\n  lt\n    /* \"#utility.yul\":2494:2575   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2571:2572   */\n  0x00\n    /* \"#utility.yul\":2557:2573   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2538:2539   */\n  0x01\n    /* \"#utility.yul\":2527:2540   */\n  add\n    /* \"#utility.yul\":2494:2575   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2498:2501   */\n  pop\n  pop\n    /* \"#utility.yul\":2164:2585   */\ntag_39:\n    /* \"#utility.yul\":2073:2591   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2767:4112   */\ntag_7:\n    /* \"#utility.yul\":2887:2897   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2909:2939   */\n  dup2\n  gt\n    /* \"#utility.yul\":2906:2962   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2942:2960   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2971:3068   */\n  tag_48\n    /* \"#utility.yul\":3061:3067   */\n  dup2\n    /* \"#utility.yul\":3021:3059   */\n  tag_49\n    /* \"#utility.yul\":3053:3057   */\n  dup5\n    /* \"#utility.yul\":3047:3058   */\n  sload\n    /* \"#utility.yul\":3021:3059   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3015:3019   */\n  dup5\n    /* \"#utility.yul\":2971:3068   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3123:3127   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3180:3182   */\n  0x1f\n    /* \"#utility.yul\":3169:3183   */\n  dup4\n  gt\n    /* \"#utility.yul\":3197:3198   */\n  0x01\n    /* \"#utility.yul\":3192:3855   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3899:3900   */\n  0x00\n    /* \"#utility.yul\":3916:3922   */\n  dup5\n    /* \"#utility.yul\":3913:4002   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3968:3987   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3962:3988   */\n  mload\n    /* \"#utility.yul\":3913:4002   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2724:2725   */\n  0x03\n    /* \"#utility.yul\":2720:2731   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2716:2740   */\n  shr\n    /* \"#utility.yul\":2712:2741   */\n  not\n    /* \"#utility.yul\":2702:2742   */\n  and\n    /* \"#utility.yul\":2748:2749   */\n  0x01\n    /* \"#utility.yul\":2744:2755   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2699:2756   */\n  or\n    /* \"#utility.yul\":4015:4096   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3162:4106   */\n  jump(tag_50)\n    /* \"#utility.yul\":3192:3855   */\ntag_51:\n    /* \"#utility.yul\":2020:2021   */\n  0x00\n    /* \"#utility.yul\":2013:2027   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2057:2061   */\n  0x20\n    /* \"#utility.yul\":2044:2062   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3228:3248   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3346:3582   */\ntag_55:\n    /* \"#utility.yul\":3360:3367   */\n  dup3\n    /* \"#utility.yul\":3357:3358   */\n  dup2\n    /* \"#utility.yul\":3354:3368   */\n  lt\n    /* \"#utility.yul\":3346:3582   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3449:3468   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3443:3469   */\n  mload\n    /* \"#utility.yul\":3428:3470   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3541:3568   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3509:3510   */\n  0x01\n    /* \"#utility.yul\":3497:3511   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3376:3395   */\n  dup5\n  add\n    /* \"#utility.yul\":3346:3582   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3350:3353   */\n  pop\n    /* \"#utility.yul\":3610:3616   */\n  dup6\n    /* \"#utility.yul\":3601:3608   */\n  dup3\n    /* \"#utility.yul\":3598:3617   */\n  lt\n    /* \"#utility.yul\":3595:3796   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3671:3690   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3665:3691   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3754:3755   */\n  0x03\n    /* \"#utility.yul\":3750:3764   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3766:3769   */\n  0xf8\n    /* \"#utility.yul\":3746:3770   */\n  and\n    /* \"#utility.yul\":3742:3779   */\n  shr\n    /* \"#utility.yul\":3738:3780   */\n  not\n    /* \"#utility.yul\":3723:3781   */\n  and\n    /* \"#utility.yul\":3708:3782   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3595:3796   */\ntag_58:\n  pop\n  pop\n    /* \"#utility.yul\":3842:3843   */\n  0x01\n    /* \"#utility.yul\":3833:3839   */\n  dup5\n    /* \"#utility.yul\":3830:3831   */\n  0x01\n    /* \"#utility.yul\":3826:3840   */\n  shl\n    /* \"#utility.yul\":3822:3844   */\n  add\n    /* \"#utility.yul\":3816:3820   */\n  dup6\n    /* \"#utility.yul\":3809:3845   */\n  sstore\n    /* \"#utility.yul\":3162:4106   */\ntag_50:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2767:4112   */\n  pop\n  pop\n  jump\t// out\ntag_16:\n    /* \"contracts/ERC20.sol\":4688:16002  contract ERC20 is Context20, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20.sol\":4688:16002  contract ERC20 is Context20, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC20.sol\":5316:5414  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20.sol\":7602:7799  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"contracts/ERC20.sol\":7602:7799  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"contracts/ERC20.sol\":6413:6519  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"contracts/ERC20.sol\":6500:6512  _totalSupply */\n      sload(0x02)\n        /* \"contracts/ERC20.sol\":6413:6519  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/ERC20.sol\":6413:6519  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"contracts/ERC20.sol\":8361:8617  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"contracts/ERC20.sol\":6262:6353  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"contracts/ERC20.sol\":6344:6346  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"contracts/ERC20.sol\":6262:6353  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"contracts/ERC20.sol\":9012:9246  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"contracts/ERC20.sol\":6577:6702  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":6677:6695  _balances[account] */\n      and\n        /* \"contracts/ERC20.sol\":6651:6658  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":6677:6695  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/ERC20.sol\":6577:6702  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/ERC20.sol\":5527:5629  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"contracts/ERC20.sol\":9733:10160  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"contracts/ERC20.sol\":6898:7087  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/ERC20.sol\":7145:7294  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"contracts/ERC20.sol\":5316:5414  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"contracts/ERC20.sol\":5370:5383  string memory */\n      0x60\n        /* \"contracts/ERC20.sol\":5402:5407  _name */\n      0x03\n        /* \"contracts/ERC20.sol\":5395:5407  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":5316:5414  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20.sol\":7602:7799  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"contracts/ERC20.sol\":7685:7689  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":3259:3269  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":7739:7771  _approve(owner, spender, amount) */\n      tag_73\n        /* \"contracts/ERC20.sol\":3259:3269  msg.sender */\n      dup2\n        /* \"contracts/ERC20.sol\":7755:7762  spender */\n      dup6\n        /* \"contracts/ERC20.sol\":7764:7770  amount */\n      dup6\n        /* \"contracts/ERC20.sol\":7739:7747  _approve */\n      tag_74\n        /* \"contracts/ERC20.sol\":7739:7771  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"contracts/ERC20.sol\":7788:7792  true */\n      0x01\n        /* \"contracts/ERC20.sol\":7781:7792  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/ERC20.sol\":7602:7799  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":8361:8617  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"contracts/ERC20.sol\":8458:8462  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":3259:3269  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":8514:8552  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"contracts/ERC20.sol\":8530:8534  from */\n      dup6\n        /* \"contracts/ERC20.sol\":3259:3269  msg.sender */\n      dup3\n        /* \"contracts/ERC20.sol\":8545:8551  amount */\n      dup6\n        /* \"contracts/ERC20.sol\":8514:8529  _spendAllowance */\n      tag_79\n        /* \"contracts/ERC20.sol\":8514:8552  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/ERC20.sol\":8562:8589  _transfer(from, to, amount) */\n      tag_80\n        /* \"contracts/ERC20.sol\":8572:8576  from */\n      dup6\n        /* \"contracts/ERC20.sol\":8578:8580  to */\n      dup6\n        /* \"contracts/ERC20.sol\":8582:8588  amount */\n      dup6\n        /* \"contracts/ERC20.sol\":8562:8571  _transfer */\n      tag_81\n        /* \"contracts/ERC20.sol\":8562:8589  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"contracts/ERC20.sol\":8606:8610  true */\n      0x01\n      swap5\n        /* \"contracts/ERC20.sol\":8361:8617  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":9012:9246  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"contracts/ERC20.sol\":9100:9104  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":3259:3269  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":9154:9218  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"contracts/ERC20.sol\":3259:3269  msg.sender */\n      dup2\n        /* \"contracts/ERC20.sol\":9170:9177  spender */\n      dup6\n        /* \"contracts/ERC20.sol\":9207:9217  addedValue */\n      dup6\n        /* \"contracts/ERC20.sol\":9179:9204  allowance(owner, spender) */\n      tag_86\n        /* \"contracts/ERC20.sol\":3259:3269  msg.sender */\n      dup4\n        /* \"contracts/ERC20.sol\":9170:9177  spender */\n      dup4\n        /* \"contracts/ERC20.sol\":9179:9188  allowance */\n      tag_61\n        /* \"contracts/ERC20.sol\":9179:9204  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/ERC20.sol\":9179:9217  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"contracts/ERC20.sol\":9154:9162  _approve */\n      tag_74\n        /* \"contracts/ERC20.sol\":9154:9218  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"contracts/ERC20.sol\":5527:5629  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"contracts/ERC20.sol\":5583:5596  string memory */\n      0x60\n        /* \"contracts/ERC20.sol\":5615:5622  _symbol */\n      0x04\n        /* \"contracts/ERC20.sol\":5608:5622  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"contracts/ERC20.sol\":9733:10160  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"contracts/ERC20.sol\":9826:9830  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":3259:3269  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":9826:9830  bool */\n      dup2\n        /* \"contracts/ERC20.sol\":9907:9932  allowance(owner, spender) */\n      tag_98\n        /* \"contracts/ERC20.sol\":3259:3269  msg.sender */\n      dup3\n        /* \"contracts/ERC20.sol\":9924:9931  spender */\n      dup7\n        /* \"contracts/ERC20.sol\":9907:9916  allowance */\n      tag_61\n        /* \"contracts/ERC20.sol\":9907:9932  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/ERC20.sol\":9880:9932  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/ERC20.sol\":9970:9985  subtractedValue */\n      dup4\n        /* \"contracts/ERC20.sol\":9950:9966  currentAllowance */\n      dup2\n        /* \"contracts/ERC20.sol\":9950:9985  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"contracts/ERC20.sol\":9942:10027  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"contracts/ERC20.sol\":9942:10027  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3152:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3211   */\n      0x25\n        /* \"#utility.yul\":3189:3207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3182:3212   */\n      mstore\n        /* \"#utility.yul\":3248:3282   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3228:3246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3221:3283   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3292:3327   */\n      mstore\n        /* \"#utility.yul\":3344:3363   */\n      0x84\n      add\n        /* \"contracts/ERC20.sol\":9942:10027  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/ERC20.sol\":10061:10121  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"contracts/ERC20.sol\":10070:10075  owner */\n      dup3\n        /* \"contracts/ERC20.sol\":10077:10084  spender */\n      dup7\n        /* \"contracts/ERC20.sol\":10105:10120  subtractedValue */\n      dup7\n        /* \"contracts/ERC20.sol\":10086:10102  currentAllowance */\n      dup5\n        /* \"contracts/ERC20.sol\":10086:10120  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/ERC20.sol\":10061:10069  _approve */\n      tag_74\n        /* \"contracts/ERC20.sol\":10061:10121  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"contracts/ERC20.sol\":6898:7087  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"contracts/ERC20.sol\":6977:6981  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":3259:3269  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":7031:7059  _transfer(owner, to, amount) */\n      tag_73\n        /* \"contracts/ERC20.sol\":3259:3269  msg.sender */\n      dup2\n        /* \"contracts/ERC20.sol\":7048:7050  to */\n      dup6\n        /* \"contracts/ERC20.sol\":7052:7058  amount */\n      dup6\n        /* \"contracts/ERC20.sol\":7031:7040  _transfer */\n      tag_81\n        /* \"contracts/ERC20.sol\":7031:7059  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"contracts/ERC20.sol\":7145:7294  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":7260:7278  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/ERC20.sol\":7234:7241  uint256 */\n      0x00\n        /* \"contracts/ERC20.sol\":7260:7278  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":7260:7271  _allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":7260:7278  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC20.sol\":7260:7287  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/ERC20.sol\":7145:7294  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/ERC20.sol\":13615:13955  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":13716:13735  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/ERC20.sol\":13708:13776  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"contracts/ERC20.sol\":13708:13776  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3558:3579   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x24\n        /* \"#utility.yul\":3595:3613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3588:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3688   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3634:3652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3627:3689   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3705:3723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3698:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3768   */\n      0x84\n      add\n        /* \"contracts/ERC20.sol\":13708:13776  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3374:3774   */\n      jump\n        /* \"contracts/ERC20.sol\":13708:13776  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":13794:13815  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/ERC20.sol\":13786:13854  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"contracts/ERC20.sol\":13786:13854  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3963:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4022   */\n      0x22\n        /* \"#utility.yul\":4000:4018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3993:4023   */\n      mstore\n        /* \"#utility.yul\":4059:4093   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4032:4094   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4110:4128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4103:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"contracts/ERC20.sol\":13786:13854  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3779:4177   */\n      jump\n        /* \"contracts/ERC20.sol\":13786:13854  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":13865:13883  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":13865:13876  _allowances */\n      0x01\n        /* \"contracts/ERC20.sol\":13865:13883  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC20.sol\":13865:13892  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ERC20.sol\":13865:13901  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/ERC20.sol\":13916:13948  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":13916:13948  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/ERC20.sol\":13916:13948  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":13615:13955  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":14236:14647  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"contracts/ERC20.sol\":14336:14360  uint256 currentAllowance */\n      0x00\n        /* \"contracts/ERC20.sol\":14363:14388  allowance(owner, spender) */\n      tag_117\n        /* \"contracts/ERC20.sol\":14373:14378  owner */\n      dup5\n        /* \"contracts/ERC20.sol\":14380:14387  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":14363:14372  allowance */\n      tag_61\n        /* \"contracts/ERC20.sol\":14363:14388  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/ERC20.sol\":14336:14388  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"contracts/ERC20.sol\":14402:14418  currentAllowance */\n      dup2\n        /* \"contracts/ERC20.sol\":14402:14439  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/ERC20.sol\":14398:14641  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"contracts/ERC20.sol\":14483:14489  amount */\n      dup2\n        /* \"contracts/ERC20.sol\":14463:14479  currentAllowance */\n      dup2\n        /* \"contracts/ERC20.sol\":14463:14489  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/ERC20.sol\":14455:14523  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"contracts/ERC20.sol\":14455:14523  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x1d\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4493   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      0x64\n      add\n        /* \"contracts/ERC20.sol\":14455:14523  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4182:4535   */\n      jump\n        /* \"contracts/ERC20.sol\":14455:14523  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"contracts/ERC20.sol\":14565:14616  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"contracts/ERC20.sol\":14574:14579  owner */\n      dup5\n        /* \"contracts/ERC20.sol\":14581:14588  spender */\n      dup5\n        /* \"contracts/ERC20.sol\":14609:14615  amount */\n      dup5\n        /* \"contracts/ERC20.sol\":14590:14606  currentAllowance */\n      dup5\n        /* \"contracts/ERC20.sol\":14590:14615  currentAllowance - amount */\n      sub\n        /* \"contracts/ERC20.sol\":14565:14573  _approve */\n      tag_74\n        /* \"contracts/ERC20.sol\":14565:14616  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/ERC20.sol\":14326:14647  {... */\n      pop\n        /* \"contracts/ERC20.sol\":14236:14647  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":10614:11402  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":10710:10728  from != address(0) */\n      dup4\n      and\n        /* \"contracts/ERC20.sol\":10702:10770  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"contracts/ERC20.sol\":10702:10770  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4724:4745   */\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x25\n        /* \"#utility.yul\":4761:4779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4754:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4800:4818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4793:4855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4871:4889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4864:4899   */\n      mstore\n        /* \"#utility.yul\":4916:4935   */\n      0x84\n      add\n        /* \"contracts/ERC20.sol\":10702:10770  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4540:4941   */\n      jump\n        /* \"contracts/ERC20.sol\":10702:10770  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":10788:10804  to != address(0) */\n      dup3\n      and\n        /* \"contracts/ERC20.sol\":10780:10844  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"contracts/ERC20.sol\":10780:10844  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x23\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5303   */\n      mstore\n        /* \"#utility.yul\":5320:5339   */\n      0x84\n      add\n        /* \"contracts/ERC20.sol\":10780:10844  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4946:5345   */\n      jump\n        /* \"contracts/ERC20.sol\":10780:10844  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":10926:10941  _balances[from] */\n      dup4\n      and\n        /* \"contracts/ERC20.sol\":10904:10923  uint256 fromBalance */\n      0x00\n        /* \"contracts/ERC20.sol\":10926:10941  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":10959:10980  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/ERC20.sol\":10951:11023  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"contracts/ERC20.sol\":10951:11023  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x26\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5681:5699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5674:5710   */\n      mstore\n        /* \"#utility.yul\":5727:5746   */\n      0x84\n      add\n        /* \"contracts/ERC20.sol\":10951:11023  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5350:5752   */\n      jump\n        /* \"contracts/ERC20.sol\":10951:11023  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":11057:11072  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"contracts/ERC20.sol\":11057:11066  _balances */\n      0x00\n        /* \"contracts/ERC20.sol\":11057:11072  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC20.sol\":11075:11095  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"contracts/ERC20.sol\":11057:11095  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/ERC20.sol\":11272:11285  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"contracts/ERC20.sol\":11272:11295  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"contracts/ERC20.sol\":11321:11347  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":11272:11285  _balances[to] */\n      swap1\n      swap3\n        /* \"contracts/ERC20.sol\":11321:11347  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/ERC20.sol\":11321:11347  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20.sol\":11358:11395  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"contracts/ERC20.sol\":15231:15322  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_140:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_147:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_149:\n        /* \"#utility.yul\":913:942   */\n      tag_150\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_140\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_154:\n        /* \"#utility.yul\":1563:1592   */\n      tag_155\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_140\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_156\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_159:\n        /* \"#utility.yul\":2051:2080   */\n      tag_160\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_162:\n        /* \"#utility.yul\":2259:2288   */\n      tag_163\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_140\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_164\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_166:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2963   */\n    tag_88:\n        /* \"#utility.yul\":2806:2815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2827:2837   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2824:2957   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2879:2889   */\n      0x4e487b71\n        /* \"#utility.yul\":2874:2877   */\n      0xe0\n        /* \"#utility.yul\":2870:2890   */\n      shl\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2860:2891   */\n      mstore\n        /* \"#utility.yul\":2914:2918   */\n      0x11\n        /* \"#utility.yul\":2911:2912   */\n      0x04\n        /* \"#utility.yul\":2904:2919   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x24\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2947   */\n      revert\n\n    auxdata: 0xa264697066735822122082d3b7452a95f5a356056f149c6076f88d0720773af9c5b69b3f77c8aa01427564736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_157": {
									"entryPoint": null,
									"id": 157,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 89,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4114:1",
										"nodeType": "YulBlock",
										"src": "0:4114:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:1",
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:1",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:1",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:1",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nativeSrc": "66:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nativeSrc": "56:31:1",
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nativeSrc": "56:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:1",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:1",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nativeSrc": "96:15:1",
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nativeSrc": "96:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:1",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:1",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nativeSrc": "120:15:1",
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nativeSrc": "120:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nativeSrc": "210:780:1",
													"nodeType": "YulBlock",
													"src": "210:780:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:1",
																"nodeType": "YulBlock",
																"src": "259:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:1",
																					"nodeType": "YulLiteral",
																					"src": "268:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:1",
																					"nodeType": "YulLiteral",
																					"src": "271:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:1"
																			},
																			"nativeSrc": "261:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:1"
																		},
																		"nativeSrc": "261:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:1",
																						"nodeType": "YulLiteral",
																						"src": "246:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nativeSrc": "234:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:1"
																		},
																		"nativeSrc": "230:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:1"
																},
																"nativeSrc": "223:35:1",
																"nodeType": "YulFunctionCall",
																"src": "223:35:1"
															},
															"nativeSrc": "220:55:1",
															"nodeType": "YulIf",
															"src": "220:55:1"
														},
														{
															"nativeSrc": "284:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:1"
																},
																"nativeSrc": "294:13:1",
																"nodeType": "YulFunctionCall",
																"src": "294:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:1",
																				"nodeType": "YulLiteral",
																				"src": "334:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:1",
																				"nodeType": "YulLiteral",
																				"src": "338:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:1"
																		},
																		"nativeSrc": "330:10:1",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:1",
																		"nodeType": "YulLiteral",
																		"src": "342:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nativeSrc": "326:18:1",
																"nodeType": "YulFunctionCall",
																"src": "326:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:1",
																	"nodeType": "YulTypedName",
																	"src": "320:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:1",
																"nodeType": "YulBlock",
																"src": "367:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:1"
																			},
																			"nativeSrc": "369:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:1"
																		},
																		"nativeSrc": "369:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:1"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:1"
																},
																"nativeSrc": "356:10:1",
																"nodeType": "YulFunctionCall",
																"src": "356:10:1"
															},
															"nativeSrc": "353:36:1",
															"nodeType": "YulIf",
															"src": "353:36:1"
														},
														{
															"nativeSrc": "398:17:1",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:1",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:1"
																},
																"nativeSrc": "408:7:1",
																"nodeType": "YulFunctionCall",
																"src": "408:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:1",
																	"nodeType": "YulTypedName",
																	"src": "402:2:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:1",
																		"nodeType": "YulLiteral",
																		"src": "444:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:1"
																},
																"nativeSrc": "438:9:1",
																"nodeType": "YulFunctionCall",
																"src": "438:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:1",
																	"nodeType": "YulTypedName",
																	"src": "428:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:1",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:1",
																										"nodeType": "YulLiteral",
																										"src": "506:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:1"
																								},
																								"nativeSrc": "498:13:1",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:1"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:1",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:1"
																						},
																						"nativeSrc": "494:22:1",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:1",
																						"nodeType": "YulLiteral",
																						"src": "518:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:1"
																				},
																				"nativeSrc": "490:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:1"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:1"
																		},
																		"nativeSrc": "486:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:1"
																},
																"nativeSrc": "474:53:1",
																"nodeType": "YulFunctionCall",
																"src": "474:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:1",
																	"nodeType": "YulTypedName",
																	"src": "460:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:1",
																"nodeType": "YulBlock",
																"src": "586:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:1"
																			},
																			"nativeSrc": "588:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:1"
																		},
																		"nativeSrc": "588:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:1"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:1"
																		},
																		"nativeSrc": "542:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:1"
																		},
																		"nativeSrc": "562:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:1"
																},
																"nativeSrc": "539:46:1",
																"nodeType": "YulFunctionCall",
																"src": "539:46:1"
															},
															"nativeSrc": "536:72:1",
															"nodeType": "YulIf",
															"src": "536:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:1",
																		"nodeType": "YulLiteral",
																		"src": "624:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:1"
																},
																"nativeSrc": "617:22:1",
																"nodeType": "YulFunctionCall",
																"src": "617:22:1"
															},
															"nativeSrc": "617:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:1"
																},
																"nativeSrc": "648:18:1",
																"nodeType": "YulFunctionCall",
																"src": "648:18:1"
															},
															"nativeSrc": "648:18:1",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:1"
														},
														{
															"nativeSrc": "675:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "685:4:1",
																"nodeType": "YulLiteral",
																"src": "685:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "679:2:1",
																	"nodeType": "YulTypedName",
																	"src": "679:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "737:16:1",
																"nodeType": "YulBlock",
																"src": "737:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "746:1:1",
																					"nodeType": "YulLiteral",
																					"src": "746:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "749:1:1",
																					"nodeType": "YulLiteral",
																					"src": "749:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "739:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "739:6:1"
																			},
																			"nativeSrc": "739:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "739:12:1"
																		},
																		"nativeSrc": "739:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "739:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "712:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:1"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "720:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "708:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				"nativeSrc": "708:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "725:4:1",
																				"nodeType": "YulLiteral",
																				"src": "725:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "704:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:1"
																		},
																		"nativeSrc": "704:26:1",
																		"nodeType": "YulFunctionCall",
																		"src": "704:26:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "732:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "732:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "701:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:1"
																},
																"nativeSrc": "701:35:1",
																"nodeType": "YulFunctionCall",
																"src": "701:35:1"
															},
															"nativeSrc": "698:55:1",
															"nodeType": "YulIf",
															"src": "698:55:1"
														},
														{
															"nativeSrc": "762:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "762:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "771:1:1",
																"nodeType": "YulLiteral",
																"src": "771:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "766:1:1",
																	"nodeType": "YulTypedName",
																	"src": "766:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "827:87:1",
																"nodeType": "YulBlock",
																"src": "827:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "856:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "856:6:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "864:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "864:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "852:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "852:3:1"
																							},
																							"nativeSrc": "852:14:1",
																							"nodeType": "YulFunctionCall",
																							"src": "852:14:1"
																						},
																						{
																							"name": "_4",
																							"nativeSrc": "868:2:1",
																							"nodeType": "YulIdentifier",
																							"src": "868:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "848:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "848:3:1"
																					},
																					"nativeSrc": "848:23:1",
																					"nodeType": "YulFunctionCall",
																					"src": "848:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "887:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "887:6:1"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "895:1:1",
																											"nodeType": "YulIdentifier",
																											"src": "895:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "883:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "883:3:1"
																									},
																									"nativeSrc": "883:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "883:14:1"
																								},
																								{
																									"name": "_4",
																									"nativeSrc": "899:2:1",
																									"nodeType": "YulIdentifier",
																									"src": "899:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "879:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "879:3:1"
																							},
																							"nativeSrc": "879:23:1",
																							"nodeType": "YulFunctionCall",
																							"src": "879:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "873:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "873:5:1"
																					},
																					"nativeSrc": "873:30:1",
																					"nodeType": "YulFunctionCall",
																					"src": "873:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "841:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:1"
																			},
																			"nativeSrc": "841:63:1",
																			"nodeType": "YulFunctionCall",
																			"src": "841:63:1"
																		},
																		"nativeSrc": "841:63:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "841:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "792:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "792:1:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "795:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "795:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "789:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "789:2:1"
																},
																"nativeSrc": "789:9:1",
																"nodeType": "YulFunctionCall",
																"src": "789:9:1"
															},
															"nativeSrc": "781:133:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "799:19:1",
																"nodeType": "YulBlock",
																"src": "799:19:1",
																"statements": [
																	{
																		"nativeSrc": "801:15:1",
																		"nodeType": "YulAssignment",
																		"src": "801:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "810:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "810:1:1"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "813:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "813:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "806:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "806:3:1"
																			},
																			"nativeSrc": "806:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "806:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "801:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "801:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "785:3:1",
																"nodeType": "YulBlock",
																"src": "785:3:1",
																"statements": []
															},
															"src": "781:133:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "938:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:1"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "946:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "946:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "934:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "934:3:1"
																				},
																				"nativeSrc": "934:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "934:15:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "951:4:1",
																				"nodeType": "YulLiteral",
																				"src": "951:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "930:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:1"
																		},
																		"nativeSrc": "930:26:1",
																		"nodeType": "YulFunctionCall",
																		"src": "930:26:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "958:1:1",
																		"nodeType": "YulLiteral",
																		"src": "958:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "923:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "923:6:1"
																},
																"nativeSrc": "923:37:1",
																"nodeType": "YulFunctionCall",
																"src": "923:37:1"
															},
															"nativeSrc": "923:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "923:37:1"
														},
														{
															"nativeSrc": "969:15:1",
															"nodeType": "YulAssignment",
															"src": "969:15:1",
															"value": {
																"name": "memPtr",
																"nativeSrc": "978:6:1",
																"nodeType": "YulIdentifier",
																"src": "978:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "969:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "969:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:844:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:1",
														"nodeType": "YulTypedName",
														"src": "184:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:1",
														"nodeType": "YulTypedName",
														"src": "192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:1",
														"nodeType": "YulTypedName",
														"src": "200:5:1",
														"type": ""
													}
												],
												"src": "146:844:1"
											},
											{
												"body": {
													"nativeSrc": "1113:444:1",
													"nodeType": "YulBlock",
													"src": "1113:444:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1159:16:1",
																"nodeType": "YulBlock",
																"src": "1159:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1168:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1168:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1171:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1171:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1161:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1161:6:1"
																			},
																			"nativeSrc": "1161:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1161:12:1"
																		},
																		"nativeSrc": "1161:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1161:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1134:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1134:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1143:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1143:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1130:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1130:3:1"
																		},
																		"nativeSrc": "1130:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1130:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1155:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1155:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1126:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1126:3:1"
																},
																"nativeSrc": "1126:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1126:32:1"
															},
															"nativeSrc": "1123:52:1",
															"nodeType": "YulIf",
															"src": "1123:52:1"
														},
														{
															"nativeSrc": "1184:30:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1184:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1204:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1204:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1198:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1198:5:1"
																},
																"nativeSrc": "1198:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1198:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1188:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1188:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1223:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1223:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1241:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1241:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1245:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1245:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1237:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1237:3:1"
																		},
																		"nativeSrc": "1237:10:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1237:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1249:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1249:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1233:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1233:3:1"
																},
																"nativeSrc": "1233:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1233:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1227:2:1",
																	"nodeType": "YulTypedName",
																	"src": "1227:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1278:16:1",
																"nodeType": "YulBlock",
																"src": "1278:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1287:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1287:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1290:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1290:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1280:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1280:6:1"
																			},
																			"nativeSrc": "1280:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1280:12:1"
																		},
																		"nativeSrc": "1280:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1280:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1266:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1266:6:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1274:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "1274:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1263:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1263:2:1"
																},
																"nativeSrc": "1263:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1263:14:1"
															},
															"nativeSrc": "1260:34:1",
															"nodeType": "YulIf",
															"src": "1260:34:1"
														},
														{
															"nativeSrc": "1303:71:1",
															"nodeType": "YulAssignment",
															"src": "1303:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1357:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1342:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1342:3:1"
																		},
																		"nativeSrc": "1342:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1342:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1366:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "1366:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1313:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "1313:28:1"
																},
																"nativeSrc": "1313:61:1",
																"nodeType": "YulFunctionCall",
																"src": "1313:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1303:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:1"
																}
															]
														},
														{
															"nativeSrc": "1383:41:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1383:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1409:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1409:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1420:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1420:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1405:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1405:3:1"
																		},
																		"nativeSrc": "1405:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1405:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1399:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1399:5:1"
																},
																"nativeSrc": "1399:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1399:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1387:8:1",
																	"nodeType": "YulTypedName",
																	"src": "1387:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1453:16:1",
																"nodeType": "YulBlock",
																"src": "1453:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1462:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1465:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1465:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1455:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:1"
																			},
																			"nativeSrc": "1455:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1455:12:1"
																		},
																		"nativeSrc": "1455:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1439:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1439:8:1"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1449:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "1449:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1436:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1436:2:1"
																},
																"nativeSrc": "1436:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1436:16:1"
															},
															"nativeSrc": "1433:36:1",
															"nodeType": "YulIf",
															"src": "1433:36:1"
														},
														{
															"nativeSrc": "1478:73:1",
															"nodeType": "YulAssignment",
															"src": "1478:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1521:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1521:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1532:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1532:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1517:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1517:3:1"
																		},
																		"nativeSrc": "1517:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1517:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1543:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "1543:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1488:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "1488:28:1"
																},
																"nativeSrc": "1488:63:1",
																"nodeType": "YulFunctionCall",
																"src": "1488:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1478:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1478:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "995:562:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1071:9:1",
														"nodeType": "YulTypedName",
														"src": "1071:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1082:7:1",
														"nodeType": "YulTypedName",
														"src": "1082:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1094:6:1",
														"nodeType": "YulTypedName",
														"src": "1094:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1102:6:1",
														"nodeType": "YulTypedName",
														"src": "1102:6:1",
														"type": ""
													}
												],
												"src": "995:562:1"
											},
											{
												"body": {
													"nativeSrc": "1617:325:1",
													"nodeType": "YulBlock",
													"src": "1617:325:1",
													"statements": [
														{
															"nativeSrc": "1627:22:1",
															"nodeType": "YulAssignment",
															"src": "1627:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1641:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1641:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1644:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1644:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1637:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1637:3:1"
																},
																"nativeSrc": "1637:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1637:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1627:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1627:6:1"
																}
															]
														},
														{
															"nativeSrc": "1658:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1658:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1688:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1688:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1684:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1684:3:1"
																},
																"nativeSrc": "1684:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1684:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1662:18:1",
																	"nodeType": "YulTypedName",
																	"src": "1662:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1735:31:1",
																"nodeType": "YulBlock",
																"src": "1735:31:1",
																"statements": [
																	{
																		"nativeSrc": "1737:27:1",
																		"nodeType": "YulAssignment",
																		"src": "1737:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1751:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1751:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1759:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1759:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1747:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1747:3:1"
																			},
																			"nativeSrc": "1747:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1747:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1737:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1737:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1715:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1715:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1708:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:1"
																},
																"nativeSrc": "1708:26:1",
																"nodeType": "YulFunctionCall",
																"src": "1708:26:1"
															},
															"nativeSrc": "1705:61:1",
															"nodeType": "YulIf",
															"src": "1705:61:1"
														},
														{
															"body": {
																"nativeSrc": "1825:111:1",
																"nodeType": "YulBlock",
																"src": "1825:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1846:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1846:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1853:3:1",
																							"nodeType": "YulLiteral",
																							"src": "1853:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1858:10:1",
																							"nodeType": "YulLiteral",
																							"src": "1858:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1849:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1849:3:1"
																					},
																					"nativeSrc": "1849:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1849:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1839:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:1"
																			},
																			"nativeSrc": "1839:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1839:31:1"
																		},
																		"nativeSrc": "1839:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1839:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1890:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1890:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1893:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1893:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1883:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1883:6:1"
																			},
																			"nativeSrc": "1883:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1883:15:1"
																		},
																		"nativeSrc": "1883:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1883:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1918:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1918:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1921:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1921:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1911:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1911:6:1"
																			},
																			"nativeSrc": "1911:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1911:15:1"
																		},
																		"nativeSrc": "1911:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1911:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1781:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1781:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1804:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1804:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1812:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1812:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1801:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1801:2:1"
																		},
																		"nativeSrc": "1801:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1801:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1778:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1778:2:1"
																},
																"nativeSrc": "1778:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1778:38:1"
															},
															"nativeSrc": "1775:161:1",
															"nodeType": "YulIf",
															"src": "1775:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1562:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1597:4:1",
														"nodeType": "YulTypedName",
														"src": "1597:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1606:6:1",
														"nodeType": "YulTypedName",
														"src": "1606:6:1",
														"type": ""
													}
												],
												"src": "1562:380:1"
											},
											{
												"body": {
													"nativeSrc": "2003:65:1",
													"nodeType": "YulBlock",
													"src": "2003:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2020:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2020:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2023:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2023:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2013:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2013:6:1"
																},
																"nativeSrc": "2013:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2013:14:1"
															},
															"nativeSrc": "2013:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "2013:14:1"
														},
														{
															"nativeSrc": "2036:26:1",
															"nodeType": "YulAssignment",
															"src": "2036:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2054:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2054:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2057:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2057:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2044:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2044:9:1"
																},
																"nativeSrc": "2044:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2044:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2036:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2036:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1947:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1986:3:1",
														"nodeType": "YulTypedName",
														"src": "1986:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1994:4:1",
														"nodeType": "YulTypedName",
														"src": "1994:4:1",
														"type": ""
													}
												],
												"src": "1947:121:1"
											},
											{
												"body": {
													"nativeSrc": "2154:437:1",
													"nodeType": "YulBlock",
													"src": "2154:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2187:398:1",
																"nodeType": "YulBlock",
																"src": "2187:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2208:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2208:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2211:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2211:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2201:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2201:6:1"
																			},
																			"nativeSrc": "2201:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2201:16:1"
																		},
																		"nativeSrc": "2201:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2201:16:1"
																	},
																	{
																		"nativeSrc": "2230:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2230:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2252:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2252:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2255:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2255:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2242:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2242:9:1"
																			},
																			"nativeSrc": "2242:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2242:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2234:4:1",
																				"nodeType": "YulTypedName",
																				"src": "2234:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2273:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2273:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2296:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "2296:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2306:1:1",
																							"nodeType": "YulLiteral",
																							"src": "2306:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2313:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "2313:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2325:2:1",
																									"nodeType": "YulLiteral",
																									"src": "2325:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2309:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2309:3:1"
																							},
																							"nativeSrc": "2309:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2309:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2302:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2302:3:1"
																					},
																					"nativeSrc": "2302:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2302:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2292:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2292:3:1"
																			},
																			"nativeSrc": "2292:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2292:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2277:11:1",
																				"nodeType": "YulTypedName",
																				"src": "2277:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2367:23:1",
																			"nodeType": "YulBlock",
																			"src": "2367:23:1",
																			"statements": [
																				{
																					"nativeSrc": "2369:19:1",
																					"nodeType": "YulAssignment",
																					"src": "2369:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2384:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2384:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2369:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "2369:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2349:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "2349:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2361:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2361:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2346:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "2346:2:1"
																			},
																			"nativeSrc": "2346:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2346:20:1"
																		},
																		"nativeSrc": "2343:47:1",
																		"nodeType": "YulIf",
																		"src": "2343:47:1"
																	},
																	{
																		"nativeSrc": "2403:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2403:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2417:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "2417:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2427:1:1",
																							"nodeType": "YulLiteral",
																							"src": "2427:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2434:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2434:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2439:2:1",
																									"nodeType": "YulLiteral",
																									"src": "2439:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2430:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2430:3:1"
																							},
																							"nativeSrc": "2430:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2430:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2423:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2423:3:1"
																					},
																					"nativeSrc": "2423:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2423:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2413:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2413:3:1"
																			},
																			"nativeSrc": "2413:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2413:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2407:2:1",
																				"nodeType": "YulTypedName",
																				"src": "2407:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2457:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2457:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2470:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "2470:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2461:5:1",
																				"nodeType": "YulTypedName",
																				"src": "2461:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2555:20:1",
																			"nodeType": "YulBlock",
																			"src": "2555:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2564:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "2564:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2571:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2571:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2557:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2557:6:1"
																						},
																						"nativeSrc": "2557:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2557:16:1"
																					},
																					"nativeSrc": "2557:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "2557:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2505:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2505:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2512:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "2512:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2502:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "2502:2:1"
																			},
																			"nativeSrc": "2502:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2502:13:1"
																		},
																		"nativeSrc": "2494:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2516:26:1",
																			"nodeType": "YulBlock",
																			"src": "2516:26:1",
																			"statements": [
																				{
																					"nativeSrc": "2518:22:1",
																					"nodeType": "YulAssignment",
																					"src": "2518:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2531:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "2531:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2538:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2538:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2527:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2527:3:1"
																						},
																						"nativeSrc": "2527:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2527:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2518:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "2518:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2498:3:1",
																			"nodeType": "YulBlock",
																			"src": "2498:3:1",
																			"statements": []
																		},
																		"src": "2494:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2170:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2170:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2175:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2175:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2167:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2167:2:1"
																},
																"nativeSrc": "2167:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2167:11:1"
															},
															"nativeSrc": "2164:421:1",
															"nodeType": "YulIf",
															"src": "2164:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2073:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2126:5:1",
														"nodeType": "YulTypedName",
														"src": "2126:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2133:3:1",
														"nodeType": "YulTypedName",
														"src": "2133:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2138:10:1",
														"nodeType": "YulTypedName",
														"src": "2138:10:1",
														"type": ""
													}
												],
												"src": "2073:518:1"
											},
											{
												"body": {
													"nativeSrc": "2681:81:1",
													"nodeType": "YulBlock",
													"src": "2681:81:1",
													"statements": [
														{
															"nativeSrc": "2691:65:1",
															"nodeType": "YulAssignment",
															"src": "2691:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2706:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2706:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2724:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2724:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2727:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2727:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2720:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2720:3:1"
																								},
																								"nativeSrc": "2720:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2720:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2737:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2737:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2733:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2733:3:1"
																								},
																								"nativeSrc": "2733:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2733:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2716:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2716:3:1"
																						},
																						"nativeSrc": "2716:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2716:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2712:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2712:3:1"
																				},
																				"nativeSrc": "2712:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2712:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2702:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2702:3:1"
																		},
																		"nativeSrc": "2702:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2702:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2748:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2748:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2751:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2751:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2744:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2744:3:1"
																		},
																		"nativeSrc": "2744:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2744:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2699:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2699:2:1"
																},
																"nativeSrc": "2699:57:1",
																"nodeType": "YulFunctionCall",
																"src": "2699:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2691:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2691:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2596:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2658:4:1",
														"nodeType": "YulTypedName",
														"src": "2658:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2664:3:1",
														"nodeType": "YulTypedName",
														"src": "2664:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2672:4:1",
														"nodeType": "YulTypedName",
														"src": "2672:4:1",
														"type": ""
													}
												],
												"src": "2596:166:1"
											},
											{
												"body": {
													"nativeSrc": "2863:1249:1",
													"nodeType": "YulBlock",
													"src": "2863:1249:1",
													"statements": [
														{
															"nativeSrc": "2873:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2873:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2893:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2893:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2887:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2887:5:1"
																},
																"nativeSrc": "2887:10:1",
																"nodeType": "YulFunctionCall",
																"src": "2887:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2877:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2877:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2940:22:1",
																"nodeType": "YulBlock",
																"src": "2940:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2942:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2942:16:1"
																			},
																			"nativeSrc": "2942:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2942:18:1"
																		},
																		"nativeSrc": "2942:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2942:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2912:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2928:2:1",
																						"nodeType": "YulLiteral",
																						"src": "2928:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2932:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2932:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2924:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2924:3:1"
																				},
																				"nativeSrc": "2924:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2924:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2936:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2936:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2920:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2920:3:1"
																		},
																		"nativeSrc": "2920:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2920:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2909:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2909:2:1"
																},
																"nativeSrc": "2909:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2909:30:1"
															},
															"nativeSrc": "2906:56:1",
															"nodeType": "YulIf",
															"src": "2906:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3015:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3015:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3053:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3053:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3047:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3047:5:1"
																				},
																				"nativeSrc": "3047:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3047:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3021:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "3021:25:1"
																		},
																		"nativeSrc": "3021:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3021:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3061:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3061:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2971:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2971:43:1"
																},
																"nativeSrc": "2971:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2971:97:1"
															},
															"nativeSrc": "2971:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "2971:97:1"
														},
														{
															"nativeSrc": "3077:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3077:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3094:1:1",
																"nodeType": "YulLiteral",
																"src": "3094:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3081:9:1",
																	"nodeType": "YulTypedName",
																	"src": "3081:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3104:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3104:23:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3123:4:1",
																"nodeType": "YulLiteral",
																"src": "3123:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3108:11:1",
																	"nodeType": "YulTypedName",
																	"src": "3108:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3136:17:1",
															"nodeType": "YulAssignment",
															"src": "3136:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3149:4:1",
																"nodeType": "YulLiteral",
																"src": "3149:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3136:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "3136:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3199:656:1",
																		"nodeType": "YulBlock",
																		"src": "3199:656:1",
																		"statements": [
																			{
																				"nativeSrc": "3213:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3213:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3232:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "3232:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3244:2:1",
																									"nodeType": "YulLiteral",
																									"src": "3244:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3240:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3240:3:1"
																							},
																							"nativeSrc": "3240:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3240:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3228:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3228:3:1"
																					},
																					"nativeSrc": "3228:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3228:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3217:7:1",
																						"nodeType": "YulTypedName",
																						"src": "3217:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3261:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3261:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3305:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3305:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3275:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "3275:29:1"
																					},
																					"nativeSrc": "3275:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3275:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3265:6:1",
																						"nodeType": "YulTypedName",
																						"src": "3265:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3323:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3323:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3332:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3332:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3327:1:1",
																						"nodeType": "YulTypedName",
																						"src": "3327:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3410:172:1",
																					"nodeType": "YulBlock",
																					"src": "3410:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3435:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "3435:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3453:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "3453:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3458:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "3458:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3449:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "3449:3:1"
																												},
																												"nativeSrc": "3449:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "3449:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3443:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "3443:5:1"
																										},
																										"nativeSrc": "3443:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3443:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3428:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3428:6:1"
																								},
																								"nativeSrc": "3428:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3428:42:1"
																							},
																							"nativeSrc": "3428:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "3428:42:1"
																						},
																						{
																							"nativeSrc": "3487:24:1",
																							"nodeType": "YulAssignment",
																							"src": "3487:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3501:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "3501:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3509:1:1",
																										"nodeType": "YulLiteral",
																										"src": "3509:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3497:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3497:3:1"
																								},
																								"nativeSrc": "3497:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3497:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3487:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3487:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3528:40:1",
																							"nodeType": "YulAssignment",
																							"src": "3528:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3545:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "3545:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3556:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "3556:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3541:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3541:3:1"
																								},
																								"nativeSrc": "3541:27:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3541:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3528:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "3528:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3357:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "3357:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3360:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "3360:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3354:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "3354:2:1"
																					},
																					"nativeSrc": "3354:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3354:14:1"
																				},
																				"nativeSrc": "3346:236:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3369:28:1",
																					"nodeType": "YulBlock",
																					"src": "3369:28:1",
																					"statements": [
																						{
																							"nativeSrc": "3371:24:1",
																							"nodeType": "YulAssignment",
																							"src": "3371:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3380:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "3380:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3383:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "3383:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3376:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3376:3:1"
																								},
																								"nativeSrc": "3376:19:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3376:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3371:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "3371:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3350:3:1",
																					"nodeType": "YulBlock",
																					"src": "3350:3:1",
																					"statements": []
																				},
																				"src": "3346:236:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "3630:166:1",
																					"nodeType": "YulBlock",
																					"src": "3630:166:1",
																					"statements": [
																						{
																							"nativeSrc": "3648:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3648:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3675:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3675:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3680:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3680:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3671:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "3671:3:1"
																										},
																										"nativeSrc": "3671:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3671:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3665:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3665:5:1"
																								},
																								"nativeSrc": "3665:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3665:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3652:9:1",
																									"nodeType": "YulTypedName",
																									"src": "3652:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3715:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "3715:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3727:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3727:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3754:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "3754:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3757:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "3757:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3750:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "3750:3:1"
																																		},
																																		"nativeSrc": "3750:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3750:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3766:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "3766:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3746:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "3746:3:1"
																																},
																																"nativeSrc": "3746:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "3746:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3776:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "3776:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3772:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "3772:3:1"
																																},
																																"nativeSrc": "3772:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "3772:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3742:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "3742:3:1"
																														},
																														"nativeSrc": "3742:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "3742:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3738:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "3738:3:1"
																												},
																												"nativeSrc": "3738:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "3738:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3723:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "3723:3:1"
																										},
																										"nativeSrc": "3723:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3723:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3708:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "3708:6:1"
																								},
																								"nativeSrc": "3708:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3708:74:1"
																							},
																							"nativeSrc": "3708:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "3708:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3601:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "3601:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3610:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "3610:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3598:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "3598:2:1"
																					},
																					"nativeSrc": "3598:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3598:19:1"
																				},
																				"nativeSrc": "3595:201:1",
																				"nodeType": "YulIf",
																				"src": "3595:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3816:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3816:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3830:1:1",
																											"nodeType": "YulLiteral",
																											"src": "3830:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3833:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "3833:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3826:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "3826:3:1"
																									},
																									"nativeSrc": "3826:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "3826:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3842:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3842:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3822:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3822:3:1"
																							},
																							"nativeSrc": "3822:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3822:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3809:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3809:6:1"
																					},
																					"nativeSrc": "3809:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3809:36:1"
																				},
																				"nativeSrc": "3809:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3809:36:1"
																			}
																		]
																	},
																	"nativeSrc": "3192:663:1",
																	"nodeType": "YulCase",
																	"src": "3192:663:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3197:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3872:234:1",
																		"nodeType": "YulBlock",
																		"src": "3872:234:1",
																		"statements": [
																			{
																				"nativeSrc": "3886:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3886:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3899:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3899:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3890:5:1",
																						"nodeType": "YulTypedName",
																						"src": "3890:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3935:67:1",
																					"nodeType": "YulBlock",
																					"src": "3935:67:1",
																					"statements": [
																						{
																							"nativeSrc": "3953:35:1",
																							"nodeType": "YulAssignment",
																							"src": "3953:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3972:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3972:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3977:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "3977:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3968:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "3968:3:1"
																										},
																										"nativeSrc": "3968:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "3968:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3962:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3962:5:1"
																								},
																								"nativeSrc": "3962:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3962:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3953:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "3953:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3916:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3916:6:1"
																				},
																				"nativeSrc": "3913:89:1",
																				"nodeType": "YulIf",
																				"src": "3913:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4022:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4022:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4081:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "4081:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4088:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4088:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4028:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "4028:52:1"
																							},
																							"nativeSrc": "4028:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4028:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4015:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4015:6:1"
																					},
																					"nativeSrc": "4015:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4015:81:1"
																				},
																				"nativeSrc": "4015:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "4015:81:1"
																			}
																		]
																	},
																	"nativeSrc": "3864:242:1",
																	"nodeType": "YulCase",
																	"src": "3864:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3172:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3172:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3180:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3180:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3169:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3169:2:1"
																},
																"nativeSrc": "3169:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3169:14:1"
															},
															"nativeSrc": "3162:944:1",
															"nodeType": "YulSwitch",
															"src": "3162:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2767:1345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2848:4:1",
														"nodeType": "YulTypedName",
														"src": "2848:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2854:3:1",
														"nodeType": "YulTypedName",
														"src": "2854:3:1",
														"type": ""
													}
												],
												"src": "2767:1345:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162000b1438038062000b1483398101604081905262000033916200011a565b60036200004183826200020a565b5060046200005082826200020a565b505050620002d6565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126200007d575f80fd5b81516001600160401b03808211156200009a576200009a62000059565b604051601f8301601f19908116603f01168101908282118183101715620000c557620000c562000059565b8160405283815260209250866020858801011115620000e2575f80fd5b5f91505b83821015620001055785820183015181830184015290820190620000e6565b5f602085830101528094505050505092915050565b5f80604083850312156200012c575f80fd5b82516001600160401b038082111562000143575f80fd5b62000151868387016200006d565b9350602085015191508082111562000167575f80fd5b5062000176858286016200006d565b9150509250929050565b600181811c908216806200019557607f821691505b602082108103620001b457634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200020557805f5260205f20601f840160051c81016020851015620001e15750805b601f840160051c820191505b8181101562000202575f8155600101620001ed565b50505b505050565b81516001600160401b0381111562000226576200022662000059565b6200023e8162000237845462000180565b84620001ba565b602080601f83116001811462000274575f84156200025c5750858301515b5f19600386901b1c1916600185901b178555620002ce565b5f85815260208120601f198616915b82811015620002a45788860151825594840194600190910190840162000283565b5085821015620002c257878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b61083080620002e45f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106f1565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610719565b610244565b604051601281526020016100bf565b6100db61012d3660046106f1565b610267565b6100ef610140366004610752565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106f1565b610297565b6100db6101833660046106f1565b610316565b6100ef610196366004610772565b610323565b6060600380546101aa906107a3565b80601f01602080910402602001604051908101604052809291908181526020018280546101d6906107a3565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107db565b61034d565b6060600480546101aa906107a3565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b5f602080835283518060208501525f5b818110156106b65785810183015185820160400152820161069a565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106ec575f80fd5b919050565b5f8060408385031215610702575f80fd5b61070b836106d6565b946020939093013593505050565b5f805f6060848603121561072b575f80fd5b610734846106d6565b9250610742602085016106d6565b9150604084013590509250925092565b5f60208284031215610762575f80fd5b61076b826106d6565b9392505050565b5f8060408385031215610783575f80fd5b61078c836106d6565b915061079a602084016106d6565b90509250929050565b600181811c908216806107b757607f821691505b6020821081036107d557634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea264697066735822122082d3b7452a95f5a356056f149c6076f88d0720773af9c5b69b3f77c8aa01427564736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB14 CODESIZE SUB DUP1 PUSH3 0xB14 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x11A JUMP JUMPDEST PUSH1 0x3 PUSH3 0x41 DUP4 DUP3 PUSH3 0x20A JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x50 DUP3 DUP3 PUSH3 0x20A JUMP JUMPDEST POP POP POP PUSH3 0x2D6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9A JUMPI PUSH3 0x9A PUSH3 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xC5 JUMPI PUSH3 0xC5 PUSH3 0x59 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x105 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xE6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x12C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x143 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x151 DUP7 DUP4 DUP8 ADD PUSH3 0x6D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x176 DUP6 DUP3 DUP7 ADD PUSH3 0x6D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x195 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x205 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x1E1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x202 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1ED JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x226 JUMPI PUSH3 0x226 PUSH3 0x59 JUMP JUMPDEST PUSH3 0x23E DUP2 PUSH3 0x237 DUP5 SLOAD PUSH3 0x180 JUMP JUMPDEST DUP5 PUSH3 0x1BA JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x274 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x25C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2CE JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2A4 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x283 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2C2 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x830 DUP1 PUSH3 0x2E4 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x752 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x7A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A3 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B6 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x69A JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6EC JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x702 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x70B DUP4 PUSH2 0x6D6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x72B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x734 DUP5 PUSH2 0x6D6 JUMP JUMPDEST SWAP3 POP PUSH2 0x742 PUSH1 0x20 DUP6 ADD PUSH2 0x6D6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x762 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x76B DUP3 PUSH2 0x6D6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x783 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x78C DUP4 PUSH2 0x6D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x79A PUSH1 0x20 DUP5 ADD PUSH2 0x6D6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xD3 0xB7 GASLIMIT 0x2A SWAP6 CREATE2 LOG3 JUMP SDIV PUSH16 0x149C6076F88D0720773AF9C5B69B3F77 0xC8 0xAA ADD TIMESTAMP PUSH22 0x64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "4688:11314:0:-:0;;;5138:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5204:5;:13;5212:5;5204;:13;:::i;:::-;-1:-1:-1;5227:7:0;:17;5237:7;5227;:17;:::i;:::-;;5138:113;;4688:11314;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:844;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;732:3;725:4;720:2;712:6;708:15;704:26;701:35;698:55;;;749:1;746;739:12;698:55;771:1;762:10;;781:133;795:2;792:1;789:9;781:133;;;883:14;;;879:23;;873:30;852:14;;;848:23;;841:63;806:10;;;;781:133;;;958:1;951:4;946:2;938:6;934:15;930:26;923:37;978:6;969:15;;;;;;146:844;;;;:::o;995:562::-;1094:6;1102;1155:2;1143:9;1134:7;1130:23;1126:32;1123:52;;;1171:1;1168;1161:12;1123:52;1198:16;;-1:-1:-1;;;;;1263:14:1;;;1260:34;;;1290:1;1287;1280:12;1260:34;1313:61;1366:7;1357:6;1346:9;1342:22;1313:61;:::i;:::-;1303:71;;1420:2;1409:9;1405:18;1399:25;1383:41;;1449:2;1439:8;1436:16;1433:36;;;1465:1;1462;1455:12;1433:36;;1488:63;1543:7;1532:8;1521:9;1517:24;1488:63;:::i;:::-;1478:73;;;995:562;;;;;:::o;1562:380::-;1641:1;1637:12;;;;1684;;;1705:61;;1759:4;1751:6;1747:17;1737:27;;1705:61;1812:2;1804:6;1801:14;1781:18;1778:38;1775:161;;1858:10;1853:3;1849:20;1846:1;1839:31;1893:4;1890:1;1883:15;1921:4;1918:1;1911:15;1775:161;;1562:380;;;:::o;2073:518::-;2175:2;2170:3;2167:11;2164:421;;;2211:5;2208:1;2201:16;2255:4;2252:1;2242:18;2325:2;2313:10;2309:19;2306:1;2302:27;2296:4;2292:38;2361:4;2349:10;2346:20;2343:47;;;-1:-1:-1;2384:4:1;2343:47;2439:2;2434:3;2430:12;2427:1;2423:20;2417:4;2413:31;2403:41;;2494:81;2512:2;2505:5;2502:13;2494:81;;;2571:1;2557:16;;2538:1;2527:13;2494:81;;;2498:3;;2164:421;2073:518;;;:::o;2767:1345::-;2887:10;;-1:-1:-1;;;;;2909:30:1;;2906:56;;;2942:18;;:::i;:::-;2971:97;3061:6;3021:38;3053:4;3047:11;3021:38;:::i;:::-;3015:4;2971:97;:::i;:::-;3123:4;;3180:2;3169:14;;3197:1;3192:663;;;;3899:1;3916:6;3913:89;;;-1:-1:-1;3968:19:1;;;3962:26;3913:89;-1:-1:-1;;2724:1:1;2720:11;;;2716:24;2712:29;2702:40;2748:1;2744:11;;;2699:57;4015:81;;3162:944;;3192:663;2020:1;2013:14;;;2057:4;2044:18;;-1:-1:-1;;3228:20:1;;;3346:236;3360:7;3357:1;3354:14;3346:236;;;3449:19;;;3443:26;3428:42;;3541:27;;;;3509:1;3497:14;;;;3376:19;;3346:236;;;3350:3;3610:6;3601:7;3598:19;3595:201;;;3671:19;;;3665:26;-1:-1:-1;;3754:1:1;3750:14;;;3766:3;3746:24;3742:37;3738:42;3723:58;3708:74;;3595:201;;;3842:1;3833:6;3830:1;3826:14;3822:22;3816:4;3809:36;3162:944;;;;;2767:1345;;:::o;:::-;4688:11314:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_698": {
									"entryPoint": null,
									"id": 698,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_633": {
									"entryPoint": 845,
									"id": 633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_687": {
									"entryPoint": null,
									"id": 687,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_107": {
									"entryPoint": null,
									"id": 107,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_676": {
									"entryPoint": 1136,
									"id": 676,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_459": {
									"entryPoint": 1256,
									"id": 459,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_254": {
									"entryPoint": 803,
									"id": 254,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_279": {
									"entryPoint": 555,
									"id": 279,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_211": {
									"entryPoint": null,
									"id": 211,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_187": {
									"entryPoint": null,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_382": {
									"entryPoint": 663,
									"id": 382,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_341": {
									"entryPoint": 615,
									"id": 341,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_167": {
									"entryPoint": 411,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_177": {
									"entryPoint": 648,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_312": {
									"entryPoint": 580,
									"id": 312,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_236": {
									"entryPoint": 790,
									"id": 236,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5754:1",
										"nodeType": "YulBlock",
										"src": "0:5754:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:1",
													"nodeType": "YulBlock",
													"src": "135:427:1",
													"statements": [
														{
															"nativeSrc": "145:12:1",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:1",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:1",
																		"nodeType": "YulLiteral",
																		"src": "184:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nativeSrc": "166:21:1",
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nativeSrc": "166:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nativeSrc": "196:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nativeSrc": "210:13:1",
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:1",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:1",
																				"nodeType": "YulLiteral",
																				"src": "254:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nativeSrc": "239:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nativeSrc": "232:34:1",
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nativeSrc": "232:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nativeSrc": "275:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:1",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:1",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:1",
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nativeSrc": "369:17:1",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:1",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nativeSrc": "365:26:1",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:1",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nativeSrc": "403:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nativeSrc": "399:23:1",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nativeSrc": "393:30:1",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nativeSrc": "358:66:1",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nativeSrc": "358:66:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nativeSrc": "302:13:1",
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nativeSrc": "294:140:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:1",
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nativeSrc": "318:15:1",
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nativeSrc": "323:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:1",
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:1"
																				},
																				"nativeSrc": "454:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:1",
																				"nodeType": "YulLiteral",
																				"src": "478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:1"
																		},
																		"nativeSrc": "450:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:1",
																		"nodeType": "YulLiteral",
																		"src": "483:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																},
																"nativeSrc": "443:42:1",
																"nodeType": "YulFunctionCall",
																"src": "443:42:1"
															},
															"nativeSrc": "443:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:1"
														},
														{
															"nativeSrc": "494:62:1",
															"nodeType": "YulAssignment",
															"src": "494:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:1",
																								"nodeType": "YulLiteral",
																								"src": "537:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:1"
																						},
																						"nativeSrc": "525:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:1",
																								"nodeType": "YulLiteral",
																								"src": "546:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:1"
																						},
																						"nativeSrc": "542:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:1"
																				},
																				"nativeSrc": "521:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:1"
																		},
																		"nativeSrc": "506:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:1",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nativeSrc": "502:54:1",
																"nodeType": "YulFunctionCall",
																"src": "502:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:1",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:1",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:1",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:548:1"
											},
											{
												"body": {
													"nativeSrc": "616:124:1",
													"nodeType": "YulBlock",
													"src": "616:124:1",
													"statements": [
														{
															"nativeSrc": "626:29:1",
															"nodeType": "YulAssignment",
															"src": "626:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:1"
																},
																"nativeSrc": "635:20:1",
																"nodeType": "YulFunctionCall",
																"src": "635:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:1",
																"nodeType": "YulBlock",
																"src": "718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:1",
																					"nodeType": "YulLiteral",
																					"src": "727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:1",
																					"nodeType": "YulLiteral",
																					"src": "730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:1"
																			},
																			"nativeSrc": "720:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:1"
																		},
																		"nativeSrc": "720:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:1",
																										"nodeType": "YulLiteral",
																										"src": "703:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:1",
																										"nodeType": "YulLiteral",
																										"src": "708:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:1"
																								},
																								"nativeSrc": "699:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:1",
																								"nodeType": "YulLiteral",
																								"src": "712:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:1"
																						},
																						"nativeSrc": "695:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:1"
																				},
																				"nativeSrc": "684:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:1"
																		},
																		"nativeSrc": "674:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:1"
																},
																"nativeSrc": "667:50:1",
																"nodeType": "YulFunctionCall",
																"src": "667:50:1"
															},
															"nativeSrc": "664:70:1",
															"nodeType": "YulIf",
															"src": "664:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:1",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:1",
														"nodeType": "YulTypedName",
														"src": "606:5:1",
														"type": ""
													}
												],
												"src": "567:173:1"
											},
											{
												"body": {
													"nativeSrc": "832:167:1",
													"nodeType": "YulBlock",
													"src": "832:167:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:1",
																"nodeType": "YulBlock",
																"src": "878:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:1",
																					"nodeType": "YulLiteral",
																					"src": "887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:1",
																					"nodeType": "YulLiteral",
																					"src": "890:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:1"
																			},
																			"nativeSrc": "880:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:1"
																		},
																		"nativeSrc": "880:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:1"
																		},
																		"nativeSrc": "849:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:1",
																		"nodeType": "YulLiteral",
																		"src": "874:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nativeSrc": "845:32:1",
																"nodeType": "YulFunctionCall",
																"src": "845:32:1"
															},
															"nativeSrc": "842:52:1",
															"nodeType": "YulIf",
															"src": "842:52:1"
														},
														{
															"nativeSrc": "903:39:1",
															"nodeType": "YulAssignment",
															"src": "903:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:1"
																},
																"nativeSrc": "913:29:1",
																"nodeType": "YulFunctionCall",
																"src": "913:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																}
															]
														},
														{
															"nativeSrc": "951:42:1",
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:1",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nativeSrc": "974:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nativeSrc": "961:32:1",
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:1",
														"nodeType": "YulTypedName",
														"src": "790:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:1",
														"nodeType": "YulTypedName",
														"src": "801:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:1",
														"nodeType": "YulTypedName",
														"src": "813:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:1",
														"nodeType": "YulTypedName",
														"src": "821:6:1",
														"type": ""
													}
												],
												"src": "745:254:1"
											},
											{
												"body": {
													"nativeSrc": "1099:92:1",
													"nodeType": "YulBlock",
													"src": "1099:92:1",
													"statements": [
														{
															"nativeSrc": "1109:26:1",
															"nodeType": "YulAssignment",
															"src": "1109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:1"
																},
																"nativeSrc": "1117:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:1"
																				},
																				"nativeSrc": "1169:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:1"
																		},
																		"nativeSrc": "1162:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:1"
																},
																"nativeSrc": "1144:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:1"
															},
															"nativeSrc": "1144:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:1",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:1",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:1",
														"nodeType": "YulTypedName",
														"src": "1090:4:1",
														"type": ""
													}
												],
												"src": "1004:187:1"
											},
											{
												"body": {
													"nativeSrc": "1297:76:1",
													"nodeType": "YulBlock",
													"src": "1297:76:1",
													"statements": [
														{
															"nativeSrc": "1307:26:1",
															"nodeType": "YulAssignment",
															"src": "1307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nativeSrc": "1315:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																},
																"nativeSrc": "1342:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:1"
															},
															"nativeSrc": "1342:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:1",
														"nodeType": "YulTypedName",
														"src": "1266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:1",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:1",
														"nodeType": "YulTypedName",
														"src": "1288:4:1",
														"type": ""
													}
												],
												"src": "1196:177:1"
											},
											{
												"body": {
													"nativeSrc": "1482:224:1",
													"nodeType": "YulBlock",
													"src": "1482:224:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:1",
																"nodeType": "YulBlock",
																"src": "1528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:1"
																			},
																			"nativeSrc": "1530:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:1"
																		},
																		"nativeSrc": "1530:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:1"
																		},
																		"nativeSrc": "1499:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:1"
																},
																"nativeSrc": "1495:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:1"
															},
															"nativeSrc": "1492:52:1",
															"nodeType": "YulIf",
															"src": "1492:52:1"
														},
														{
															"nativeSrc": "1553:39:1",
															"nodeType": "YulAssignment",
															"src": "1553:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:1"
																},
																"nativeSrc": "1563:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:1"
																}
															]
														},
														{
															"nativeSrc": "1601:48:1",
															"nodeType": "YulAssignment",
															"src": "1601:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:1"
																		},
																		"nativeSrc": "1630:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:1"
																},
																"nativeSrc": "1611:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:1"
																}
															]
														},
														{
															"nativeSrc": "1658:42:1",
															"nodeType": "YulAssignment",
															"src": "1658:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:1"
																		},
																		"nativeSrc": "1681:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:1"
																},
																"nativeSrc": "1668:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:1",
														"nodeType": "YulTypedName",
														"src": "1432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:1",
														"nodeType": "YulTypedName",
														"src": "1443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:1",
														"nodeType": "YulTypedName",
														"src": "1455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:1",
														"nodeType": "YulTypedName",
														"src": "1471:6:1",
														"type": ""
													}
												],
												"src": "1378:328:1"
											},
											{
												"body": {
													"nativeSrc": "1808:87:1",
													"nodeType": "YulBlock",
													"src": "1808:87:1",
													"statements": [
														{
															"nativeSrc": "1818:26:1",
															"nodeType": "YulAssignment",
															"src": "1818:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:1"
																},
																"nativeSrc": "1826:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:1"
																		},
																		"nativeSrc": "1871:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nativeSrc": "1853:36:1",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:1"
															},
															"nativeSrc": "1853:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:1",
														"nodeType": "YulTypedName",
														"src": "1777:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:1",
														"nodeType": "YulTypedName",
														"src": "1788:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:1",
														"nodeType": "YulTypedName",
														"src": "1799:4:1",
														"type": ""
													}
												],
												"src": "1711:184:1"
											},
											{
												"body": {
													"nativeSrc": "1970:116:1",
													"nodeType": "YulBlock",
													"src": "1970:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:1",
																"nodeType": "YulBlock",
																"src": "2016:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:1"
																			},
																			"nativeSrc": "2018:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:1"
																		},
																		"nativeSrc": "2018:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:1"
																		},
																		"nativeSrc": "1987:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:1"
																},
																"nativeSrc": "1983:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:1"
															},
															"nativeSrc": "1980:52:1",
															"nodeType": "YulIf",
															"src": "1980:52:1"
														},
														{
															"nativeSrc": "2041:39:1",
															"nodeType": "YulAssignment",
															"src": "2041:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2070:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2051:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:1"
																},
																"nativeSrc": "2051:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2051:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1900:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:1",
														"nodeType": "YulTypedName",
														"src": "1936:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:1",
														"nodeType": "YulTypedName",
														"src": "1947:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:1",
														"nodeType": "YulTypedName",
														"src": "1959:6:1",
														"type": ""
													}
												],
												"src": "1900:186:1"
											},
											{
												"body": {
													"nativeSrc": "2178:173:1",
													"nodeType": "YulBlock",
													"src": "2178:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2224:16:1",
																"nodeType": "YulBlock",
																"src": "2224:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2233:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2236:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2226:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:1"
																			},
																			"nativeSrc": "2226:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:1"
																		},
																		"nativeSrc": "2226:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2199:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2208:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2195:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:1"
																		},
																		"nativeSrc": "2195:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2220:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2191:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:1"
																},
																"nativeSrc": "2191:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2191:32:1"
															},
															"nativeSrc": "2188:52:1",
															"nodeType": "YulIf",
															"src": "2188:52:1"
														},
														{
															"nativeSrc": "2249:39:1",
															"nodeType": "YulAssignment",
															"src": "2249:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2278:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2259:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:1"
																},
																"nativeSrc": "2259:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2259:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2249:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:1"
																}
															]
														},
														{
															"nativeSrc": "2297:48:1",
															"nodeType": "YulAssignment",
															"src": "2297:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2330:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2341:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2326:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:1"
																		},
																		"nativeSrc": "2326:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2307:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:1"
																},
																"nativeSrc": "2307:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2307:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2297:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2091:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2136:9:1",
														"nodeType": "YulTypedName",
														"src": "2136:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2147:7:1",
														"nodeType": "YulTypedName",
														"src": "2147:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2159:6:1",
														"nodeType": "YulTypedName",
														"src": "2159:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2167:6:1",
														"nodeType": "YulTypedName",
														"src": "2167:6:1",
														"type": ""
													}
												],
												"src": "2091:260:1"
											},
											{
												"body": {
													"nativeSrc": "2411:325:1",
													"nodeType": "YulBlock",
													"src": "2411:325:1",
													"statements": [
														{
															"nativeSrc": "2421:22:1",
															"nodeType": "YulAssignment",
															"src": "2421:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2435:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2438:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2431:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:1"
																},
																"nativeSrc": "2431:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2431:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2421:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:1"
																}
															]
														},
														{
															"nativeSrc": "2452:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2482:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2488:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2478:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:1"
																},
																"nativeSrc": "2478:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2478:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2456:18:1",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2529:31:1",
																"nodeType": "YulBlock",
																"src": "2529:31:1",
																"statements": [
																	{
																		"nativeSrc": "2531:27:1",
																		"nodeType": "YulAssignment",
																		"src": "2531:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2545:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2553:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2541:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:1"
																			},
																			"nativeSrc": "2541:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2531:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2509:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2502:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:1"
																},
																"nativeSrc": "2502:26:1",
																"nodeType": "YulFunctionCall",
																"src": "2502:26:1"
															},
															"nativeSrc": "2499:61:1",
															"nodeType": "YulIf",
															"src": "2499:61:1"
														},
														{
															"body": {
																"nativeSrc": "2619:111:1",
																"nodeType": "YulBlock",
																"src": "2619:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2640:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2647:3:1",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2652:10:1",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2643:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:1"
																					},
																					"nativeSrc": "2643:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2633:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:1"
																			},
																			"nativeSrc": "2633:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:1"
																		},
																		"nativeSrc": "2633:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2684:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2687:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2677:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:1"
																			},
																			"nativeSrc": "2677:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:1"
																		},
																		"nativeSrc": "2677:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2712:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2715:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2705:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:1"
																			},
																			"nativeSrc": "2705:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:1"
																		},
																		"nativeSrc": "2705:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2575:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2598:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2606:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2595:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:1"
																		},
																		"nativeSrc": "2595:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2572:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:1"
																},
																"nativeSrc": "2572:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2572:38:1"
															},
															"nativeSrc": "2569:161:1",
															"nodeType": "YulIf",
															"src": "2569:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2356:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2391:4:1",
														"nodeType": "YulTypedName",
														"src": "2391:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2400:6:1",
														"nodeType": "YulTypedName",
														"src": "2400:6:1",
														"type": ""
													}
												],
												"src": "2356:380:1"
											},
											{
												"body": {
													"nativeSrc": "2789:174:1",
													"nodeType": "YulBlock",
													"src": "2789:174:1",
													"statements": [
														{
															"nativeSrc": "2799:16:1",
															"nodeType": "YulAssignment",
															"src": "2799:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2810:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2810:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2813:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2806:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:1"
																},
																"nativeSrc": "2806:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2806:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2799:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2846:111:1",
																"nodeType": "YulBlock",
																"src": "2846:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2867:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2874:3:1",
																							"nodeType": "YulLiteral",
																							"src": "2874:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2879:10:1",
																							"nodeType": "YulLiteral",
																							"src": "2879:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2870:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2870:3:1"
																					},
																					"nativeSrc": "2870:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2870:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2860:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:1"
																			},
																			"nativeSrc": "2860:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2860:31:1"
																		},
																		"nativeSrc": "2860:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2911:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2914:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2914:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2904:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:1"
																			},
																			"nativeSrc": "2904:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2904:15:1"
																		},
																		"nativeSrc": "2904:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2939:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2942:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2942:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2932:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:1"
																			},
																			"nativeSrc": "2932:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2932:15:1"
																		},
																		"nativeSrc": "2932:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2830:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2830:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2833:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2827:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2827:2:1"
																},
																"nativeSrc": "2827:10:1",
																"nodeType": "YulFunctionCall",
																"src": "2827:10:1"
															},
															"nativeSrc": "2824:133:1",
															"nodeType": "YulIf",
															"src": "2824:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2741:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2772:1:1",
														"nodeType": "YulTypedName",
														"src": "2772:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2775:1:1",
														"nodeType": "YulTypedName",
														"src": "2775:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2781:3:1",
														"nodeType": "YulTypedName",
														"src": "2781:3:1",
														"type": ""
													}
												],
												"src": "2741:222:1"
											},
											{
												"body": {
													"nativeSrc": "3142:227:1",
													"nodeType": "YulBlock",
													"src": "3142:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3159:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3170:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3152:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:1"
																},
																"nativeSrc": "3152:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3152:21:1"
															},
															"nativeSrc": "3152:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3152:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3193:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3204:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3189:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:1"
																		},
																		"nativeSrc": "3189:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3209:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3182:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:1"
																},
																"nativeSrc": "3182:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3182:30:1"
															},
															"nativeSrc": "3182:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3182:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3232:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3243:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3243:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3228:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:1"
																		},
																		"nativeSrc": "3228:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3228:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3248:34:1",
																		"nodeType": "YulLiteral",
																		"src": "3248:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3221:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:1"
																},
																"nativeSrc": "3221:62:1",
																"nodeType": "YulFunctionCall",
																"src": "3221:62:1"
															},
															"nativeSrc": "3221:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "3221:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3303:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3314:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3299:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:1"
																		},
																		"nativeSrc": "3299:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3319:7:1",
																		"nodeType": "YulLiteral",
																		"src": "3319:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:1"
																},
																"nativeSrc": "3292:35:1",
																"nodeType": "YulFunctionCall",
																"src": "3292:35:1"
															},
															"nativeSrc": "3292:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "3292:35:1"
														},
														{
															"nativeSrc": "3336:27:1",
															"nodeType": "YulAssignment",
															"src": "3336:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3348:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3359:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3359:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3344:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:1"
																},
																"nativeSrc": "3344:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3344:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3336:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2968:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3119:9:1",
														"nodeType": "YulTypedName",
														"src": "3119:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3133:4:1",
														"nodeType": "YulTypedName",
														"src": "3133:4:1",
														"type": ""
													}
												],
												"src": "2968:401:1"
											},
											{
												"body": {
													"nativeSrc": "3548:226:1",
													"nodeType": "YulBlock",
													"src": "3548:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3565:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3576:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3558:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:1"
																},
																"nativeSrc": "3558:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3558:21:1"
															},
															"nativeSrc": "3558:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3558:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3599:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3610:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3610:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3595:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:1"
																		},
																		"nativeSrc": "3595:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3595:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3615:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3588:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:1"
																},
																"nativeSrc": "3588:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3588:30:1"
															},
															"nativeSrc": "3588:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3588:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3638:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3649:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3634:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:1"
																		},
																		"nativeSrc": "3634:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3654:34:1",
																		"nodeType": "YulLiteral",
																		"src": "3654:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3627:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:1"
																},
																"nativeSrc": "3627:62:1",
																"nodeType": "YulFunctionCall",
																"src": "3627:62:1"
															},
															"nativeSrc": "3627:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "3627:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3709:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3720:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3705:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:1"
																		},
																		"nativeSrc": "3705:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3725:6:1",
																		"nodeType": "YulLiteral",
																		"src": "3725:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3698:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:1"
																},
																"nativeSrc": "3698:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3698:34:1"
															},
															"nativeSrc": "3698:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3698:34:1"
														},
														{
															"nativeSrc": "3741:27:1",
															"nodeType": "YulAssignment",
															"src": "3741:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3753:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3764:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3764:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3749:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:1"
																},
																"nativeSrc": "3749:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3749:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3741:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3374:400:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3525:9:1",
														"nodeType": "YulTypedName",
														"src": "3525:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3539:4:1",
														"nodeType": "YulTypedName",
														"src": "3539:4:1",
														"type": ""
													}
												],
												"src": "3374:400:1"
											},
											{
												"body": {
													"nativeSrc": "3953:224:1",
													"nodeType": "YulBlock",
													"src": "3953:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3970:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3981:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3963:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:1"
																},
																"nativeSrc": "3963:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3963:21:1"
															},
															"nativeSrc": "3963:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3963:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4004:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4015:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4000:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:1"
																		},
																		"nativeSrc": "4000:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4020:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3993:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:1"
																},
																"nativeSrc": "3993:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3993:30:1"
															},
															"nativeSrc": "3993:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3993:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4043:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4054:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4039:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:1"
																		},
																		"nativeSrc": "4039:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4059:34:1",
																		"nodeType": "YulLiteral",
																		"src": "4059:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4032:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:1"
																},
																"nativeSrc": "4032:62:1",
																"nodeType": "YulFunctionCall",
																"src": "4032:62:1"
															},
															"nativeSrc": "4032:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "4032:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4114:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4125:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4110:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:1"
																		},
																		"nativeSrc": "4110:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4130:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4103:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:1"
																},
																"nativeSrc": "4103:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4103:32:1"
															},
															"nativeSrc": "4103:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "4103:32:1"
														},
														{
															"nativeSrc": "4144:27:1",
															"nodeType": "YulAssignment",
															"src": "4144:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4156:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4167:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4152:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:1"
																},
																"nativeSrc": "4152:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4152:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4144:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3779:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3930:9:1",
														"nodeType": "YulTypedName",
														"src": "3930:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3944:4:1",
														"nodeType": "YulTypedName",
														"src": "3944:4:1",
														"type": ""
													}
												],
												"src": "3779:398:1"
											},
											{
												"body": {
													"nativeSrc": "4356:179:1",
													"nodeType": "YulBlock",
													"src": "4356:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4373:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4384:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4366:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:1"
																},
																"nativeSrc": "4366:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4366:21:1"
															},
															"nativeSrc": "4366:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4407:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4418:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4403:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:1"
																		},
																		"nativeSrc": "4403:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4423:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4396:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:1"
																},
																"nativeSrc": "4396:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4396:30:1"
															},
															"nativeSrc": "4396:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4446:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4457:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4442:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:1"
																		},
																		"nativeSrc": "4442:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4462:31:1",
																		"nodeType": "YulLiteral",
																		"src": "4462:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4435:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:1"
																},
																"nativeSrc": "4435:59:1",
																"nodeType": "YulFunctionCall",
																"src": "4435:59:1"
															},
															"nativeSrc": "4435:59:1",
															"nodeType": "YulExpressionStatement",
															"src": "4435:59:1"
														},
														{
															"nativeSrc": "4503:26:1",
															"nodeType": "YulAssignment",
															"src": "4503:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4515:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4526:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4511:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:1"
																},
																"nativeSrc": "4511:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4511:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4503:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4182:353:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4333:9:1",
														"nodeType": "YulTypedName",
														"src": "4333:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4347:4:1",
														"nodeType": "YulTypedName",
														"src": "4347:4:1",
														"type": ""
													}
												],
												"src": "4182:353:1"
											},
											{
												"body": {
													"nativeSrc": "4714:227:1",
													"nodeType": "YulBlock",
													"src": "4714:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4731:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4742:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4724:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:1"
																},
																"nativeSrc": "4724:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4724:21:1"
															},
															"nativeSrc": "4724:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4724:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4765:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4776:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4761:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:1"
																		},
																		"nativeSrc": "4761:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4781:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4754:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:1"
																},
																"nativeSrc": "4754:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4754:30:1"
															},
															"nativeSrc": "4754:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4754:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4804:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4815:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4800:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:1"
																		},
																		"nativeSrc": "4800:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "4820:34:1",
																		"nodeType": "YulLiteral",
																		"src": "4820:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4793:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:1"
																},
																"nativeSrc": "4793:62:1",
																"nodeType": "YulFunctionCall",
																"src": "4793:62:1"
															},
															"nativeSrc": "4793:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "4793:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4875:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4886:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4871:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:1"
																		},
																		"nativeSrc": "4871:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4891:7:1",
																		"nodeType": "YulLiteral",
																		"src": "4891:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4864:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:1"
																},
																"nativeSrc": "4864:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4864:35:1"
															},
															"nativeSrc": "4864:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4864:35:1"
														},
														{
															"nativeSrc": "4908:27:1",
															"nodeType": "YulAssignment",
															"src": "4908:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4920:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4931:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4931:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4916:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:1"
																},
																"nativeSrc": "4916:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4916:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4908:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4540:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4691:9:1",
														"nodeType": "YulTypedName",
														"src": "4691:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4705:4:1",
														"nodeType": "YulTypedName",
														"src": "4705:4:1",
														"type": ""
													}
												],
												"src": "4540:401:1"
											},
											{
												"body": {
													"nativeSrc": "5120:225:1",
													"nodeType": "YulBlock",
													"src": "5120:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5137:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5148:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5130:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:1"
																},
																"nativeSrc": "5130:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5130:21:1"
															},
															"nativeSrc": "5130:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5171:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5182:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5167:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:1"
																		},
																		"nativeSrc": "5167:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5187:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:1"
																},
																"nativeSrc": "5160:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5160:30:1"
															},
															"nativeSrc": "5160:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5210:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5221:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5206:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:1"
																		},
																		"nativeSrc": "5206:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5226:34:1",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5199:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:1"
																},
																"nativeSrc": "5199:62:1",
																"nodeType": "YulFunctionCall",
																"src": "5199:62:1"
															},
															"nativeSrc": "5199:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5281:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5292:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5277:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:1"
																		},
																		"nativeSrc": "5277:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5297:5:1",
																		"nodeType": "YulLiteral",
																		"src": "5297:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5270:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:1"
																},
																"nativeSrc": "5270:33:1",
																"nodeType": "YulFunctionCall",
																"src": "5270:33:1"
															},
															"nativeSrc": "5270:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:1"
														},
														{
															"nativeSrc": "5312:27:1",
															"nodeType": "YulAssignment",
															"src": "5312:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5324:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5335:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5335:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5320:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:1"
																},
																"nativeSrc": "5320:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5320:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5312:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4946:399:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5097:9:1",
														"nodeType": "YulTypedName",
														"src": "5097:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5111:4:1",
														"nodeType": "YulTypedName",
														"src": "5111:4:1",
														"type": ""
													}
												],
												"src": "4946:399:1"
											},
											{
												"body": {
													"nativeSrc": "5524:228:1",
													"nodeType": "YulBlock",
													"src": "5524:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5541:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5552:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5534:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:1"
																},
																"nativeSrc": "5534:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5534:21:1"
															},
															"nativeSrc": "5534:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5575:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5586:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5571:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:1"
																		},
																		"nativeSrc": "5571:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5591:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5564:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:1"
																},
																"nativeSrc": "5564:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5564:30:1"
															},
															"nativeSrc": "5564:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5614:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5625:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5610:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:1"
																		},
																		"nativeSrc": "5610:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5630:34:1",
																		"nodeType": "YulLiteral",
																		"src": "5630:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5603:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:1"
																},
																"nativeSrc": "5603:62:1",
																"nodeType": "YulFunctionCall",
																"src": "5603:62:1"
															},
															"nativeSrc": "5603:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "5603:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5685:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5696:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5681:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:1"
																		},
																		"nativeSrc": "5681:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5701:8:1",
																		"nodeType": "YulLiteral",
																		"src": "5701:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5674:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:1"
																},
																"nativeSrc": "5674:36:1",
																"nodeType": "YulFunctionCall",
																"src": "5674:36:1"
															},
															"nativeSrc": "5674:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "5674:36:1"
														},
														{
															"nativeSrc": "5719:27:1",
															"nodeType": "YulAssignment",
															"src": "5719:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5731:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5742:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5742:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5727:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:1"
																},
																"nativeSrc": "5727:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5727:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5719:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5719:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5350:402:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5501:9:1",
														"nodeType": "YulTypedName",
														"src": "5501:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5515:4:1",
														"nodeType": "YulTypedName",
														"src": "5515:4:1",
														"type": ""
													}
												],
												"src": "5350:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106f1565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610719565b610244565b604051601281526020016100bf565b6100db61012d3660046106f1565b610267565b6100ef610140366004610752565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106f1565b610297565b6100db6101833660046106f1565b610316565b6100ef610196366004610772565b610323565b6060600380546101aa906107a3565b80601f01602080910402602001604051908101604052809291908181526020018280546101d6906107a3565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107db565b61034d565b6060600480546101aa906107a3565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b5f602080835283518060208501525f5b818110156106b65785810183015185820160400152820161069a565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106ec575f80fd5b919050565b5f8060408385031215610702575f80fd5b61070b836106d6565b946020939093013593505050565b5f805f6060848603121561072b575f80fd5b610734846106d6565b9250610742602085016106d6565b9150604084013590509250925092565b5f60208284031215610762575f80fd5b61076b826106d6565b9392505050565b5f8060408385031215610783575f80fd5b61078c836106d6565b915061079a602084016106d6565b90509250929050565b600181811c908216806107b757607f821691505b6020821081036107d557634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea264697066735822122082d3b7452a95f5a356056f149c6076f88d0720773af9c5b69b3f77c8aa01427564736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x752 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x7A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A3 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B6 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x69A JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6EC JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x702 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x70B DUP4 PUSH2 0x6D6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x72B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x734 DUP5 PUSH2 0x6D6 JUMP JUMPDEST SWAP3 POP PUSH2 0x742 PUSH1 0x20 DUP6 ADD PUSH2 0x6D6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x762 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x76B DUP3 PUSH2 0x6D6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x783 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x78C DUP4 PUSH2 0x6D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x79A PUSH1 0x20 DUP5 ADD PUSH2 0x6D6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7D5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xD3 0xB7 GASLIMIT 0x2A SWAP6 CREATE2 LOG3 JUMP SDIV PUSH16 0x149C6076F88D0720773AF9C5B69B3F77 0xC8 0xAA ADD TIMESTAMP PUSH22 0x64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "4688:11314:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5316:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7602:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:1;;1162:22;1144:41;;1132:2;1117:18;7602:197:0;1004:187:1;6413:106:0;6500:12;;6413:106;;;1342:25:1;;;1330:2;1315:18;6413:106:0;1196:177:1;8361:256:0;;;;;;:::i;:::-;;:::i;6262:91::-;;;6344:2;1853:36:1;;1841:2;1826:18;6262:91:0;1711:184:1;9012:234:0;;;;;;:::i;:::-;;:::i;6577:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;6677:18:0;6651:7;6677:18;;;;;;;;;;;;6577:125;5527:102;;;:::i;9733:427::-;;;;;;:::i;:::-;;:::i;6898:189::-;;;;;;:::i;:::-;;:::i;7145:149::-;;;;;;:::i;:::-;;:::i;5316:98::-;5370:13;5402:5;5395:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5316:98;:::o;7602:197::-;7685:4;3259:10;7739:32;3259:10;7755:7;7764:6;7739:8;:32::i;:::-;7788:4;7781:11;;;7602:197;;;;;:::o;8361:256::-;8458:4;3259:10;8514:38;8530:4;3259:10;8545:6;8514:15;:38::i;:::-;8562:27;8572:4;8578:2;8582:6;8562:9;:27::i;:::-;-1:-1:-1;8606:4:0;;8361:256;-1:-1:-1;;;;8361:256:0:o;9012:234::-;9100:4;3259:10;9154:64;3259:10;9170:7;9207:10;9179:25;3259:10;9170:7;9179:9;:25::i;:::-;:38;;;;:::i;:::-;9154:8;:64::i;5527:102::-;5583:13;5615:7;5608:14;;;;;:::i;9733:427::-;9826:4;3259:10;9826:4;9907:25;3259:10;9924:7;9907:9;:25::i;:::-;9880:52;;9970:15;9950:16;:35;;9942:85;;;;-1:-1:-1;;;9942:85:0;;3170:2:1;9942:85:0;;;3152:21:1;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:1;;;3292:35;3344:19;;9942:85:0;;;;;;;;;10061:60;10070:5;10077:7;10105:15;10086:16;:34;10061:8;:60::i;6898:189::-;6977:4;3259:10;7031:28;3259:10;7048:2;7052:6;7031:9;:28::i;7145:149::-;-1:-1:-1;;;;;7260:18:0;;;7234:7;7260:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;7145:149::o;13615:340::-;-1:-1:-1;;;;;13716:19:0;;13708:68;;;;-1:-1:-1;;;13708:68:0;;3576:2:1;13708:68:0;;;3558:21:1;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:1;;;3698:34;3749:19;;13708:68:0;3374:400:1;13708:68:0;-1:-1:-1;;;;;13794:21:0;;13786:68;;;;-1:-1:-1;;;13786:68:0;;3981:2:1;13786:68:0;;;3963:21:1;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:1;;;4103:32;4152:19;;13786:68:0;3779:398:1;13786:68:0;-1:-1:-1;;;;;13865:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;13916:32;;1342:25:1;;;13916:32:0;;1315:18:1;13916:32:0;;;;;;;13615:340;;;:::o;14236:411::-;14336:24;14363:25;14373:5;14380:7;14363:9;:25::i;:::-;14336:52;;-1:-1:-1;;14402:16:0;:37;14398:243;;14483:6;14463:16;:26;;14455:68;;;;-1:-1:-1;;;14455:68:0;;4384:2:1;14455:68:0;;;4366:21:1;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;14455:68:0;4182:353:1;14455:68:0;14565:51;14574:5;14581:7;14609:6;14590:16;:25;14565:8;:51::i;:::-;14326:321;14236:411;;;:::o;10614:788::-;-1:-1:-1;;;;;10710:18:0;;10702:68;;;;-1:-1:-1;;;10702:68:0;;4742:2:1;10702:68:0;;;4724:21:1;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:1;;;4864:35;4916:19;;10702:68:0;4540:401:1;10702:68:0;-1:-1:-1;;;;;10788:16:0;;10780:64;;;;-1:-1:-1;;;10780:64:0;;5148:2:1;10780:64:0;;;5130:21:1;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:1;;;5270:33;5320:19;;10780:64:0;4946:399:1;10780:64:0;-1:-1:-1;;;;;10926:15:0;;10904:19;10926:15;;;;;;;;;;;10959:21;;;;10951:72;;;;-1:-1:-1;;;10951:72:0;;5552:2:1;10951:72:0;;;5534:21:1;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:1;;;5674:36;5727:19;;10951:72:0;5350:402:1;10951:72:0;-1:-1:-1;;;;;11057:15:0;;;:9;:15;;;;;;;;;;;11075:20;;;11057:38;;11272:13;;;;;;;;;;:23;;;;;;11321:26;;1342:25:1;;;11272:13:0;;11321:26;;1315:18:1;11321:26:0;;;;;;;11358:37;15231:91;14:548:1;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:1;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:1:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:1:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "419200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2559",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27011",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51133",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4688,
									"end": 16002,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 4688,
									"end": 16002,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4688,
									"end": 16002,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 5138,
									"end": 5251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5204,
									"end": 5209,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 5204,
									"end": 5217,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 5212,
									"end": 5217,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5204,
									"end": 5209,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5204,
									"end": 5217,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5204,
									"end": 5217,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5204,
									"end": 5217,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 5204,
									"end": 5217,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5227,
									"end": 5234,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 5227,
									"end": 5244,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 5237,
									"end": 5244,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5227,
									"end": 5234,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5227,
									"end": 5244,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5227,
									"end": 5244,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5227,
									"end": 5244,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 5227,
									"end": 5244,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5227,
									"end": 5244,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5138,
									"end": 5251,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4688,
									"end": 16002,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 4688,
									"end": 16002,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 990,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 732,
									"end": 735,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 725,
									"end": 729,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 704,
									"end": 730,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 701,
									"end": 736,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 753,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 698,
									"end": 753,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 749,
									"end": 750,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 746,
									"end": 747,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 739,
									"end": 751,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 698,
									"end": 753,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 753,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 771,
									"end": 772,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 762,
									"end": 772,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 762,
									"end": 772,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 795,
									"end": 797,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 792,
									"end": 793,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 789,
									"end": 798,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 781,
									"end": 914,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 883,
									"end": 897,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 883,
									"end": 897,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 879,
									"end": 902,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 879,
									"end": 902,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 873,
									"end": 903,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 852,
									"end": 866,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 852,
									"end": 866,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 848,
									"end": 871,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 848,
									"end": 871,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 841,
									"end": 904,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 806,
									"end": 816,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 806,
									"end": 816,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 806,
									"end": 816,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 781,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 781,
									"end": 914,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 781,
									"end": 914,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 958,
									"end": 959,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 955,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 946,
									"end": 948,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 934,
									"end": 949,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 930,
									"end": 956,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 923,
									"end": 960,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 978,
									"end": 984,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 969,
									"end": 984,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 969,
									"end": 984,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 146,
									"end": 990,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 990,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1094,
									"end": 1100,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1102,
									"end": 1108,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1157,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1143,
									"end": 1152,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1130,
									"end": 1153,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1126,
									"end": 1158,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1171,
									"end": 1172,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1168,
									"end": 1169,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1173,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1123,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1198,
									"end": 1214,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1198,
									"end": 1214,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1263,
									"end": 1277,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1290,
									"end": 1291,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1287,
									"end": 1288,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1280,
									"end": 1292,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1260,
									"end": 1294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1366,
									"end": 1373,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1357,
									"end": 1363,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1364,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1313,
									"end": 1374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1313,
									"end": 1374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1374,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1420,
									"end": 1422,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1409,
									"end": 1418,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1405,
									"end": 1423,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1399,
									"end": 1424,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1383,
									"end": 1424,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1383,
									"end": 1424,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1449,
									"end": 1451,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1439,
									"end": 1447,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1465,
									"end": 1466,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1462,
									"end": 1463,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1467,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1433,
									"end": 1469,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1543,
									"end": 1550,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 1540,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1521,
									"end": 1530,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1541,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1488,
									"end": 1551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1488,
									"end": 1551,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1478,
									"end": 1551,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1557,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 995,
									"end": 1557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1641,
									"end": 1642,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1637,
									"end": 1649,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1696,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1759,
									"end": 1763,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1751,
									"end": 1757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1747,
									"end": 1764,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1737,
									"end": 1764,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1737,
									"end": 1764,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1705,
									"end": 1766,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1812,
									"end": 1814,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1804,
									"end": 1810,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1801,
									"end": 1815,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1781,
									"end": 1799,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1778,
									"end": 1816,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1858,
									"end": 1868,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1853,
									"end": 1856,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1849,
									"end": 1869,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1847,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1870,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1893,
									"end": 1897,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1890,
									"end": 1891,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1883,
									"end": 1898,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1921,
									"end": 1925,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1918,
									"end": 1919,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1911,
									"end": 1926,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1775,
									"end": 1936,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1562,
									"end": 1942,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1562,
									"end": 1942,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2175,
									"end": 2177,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2170,
									"end": 2173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2167,
									"end": 2178,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2211,
									"end": 2216,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2208,
									"end": 2209,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2201,
									"end": 2217,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2259,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2252,
									"end": 2253,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2242,
									"end": 2260,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2325,
									"end": 2327,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2313,
									"end": 2323,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2309,
									"end": 2328,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2306,
									"end": 2307,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2296,
									"end": 2300,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2292,
									"end": 2330,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2361,
									"end": 2365,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2349,
									"end": 2359,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2346,
									"end": 2366,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2384,
									"end": 2388,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2343,
									"end": 2390,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2439,
									"end": 2441,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2434,
									"end": 2437,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2430,
									"end": 2442,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2428,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2423,
									"end": 2443,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2417,
									"end": 2421,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2413,
									"end": 2444,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2403,
									"end": 2444,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2403,
									"end": 2444,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2512,
									"end": 2514,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2505,
									"end": 2510,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2502,
									"end": 2515,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2571,
									"end": 2572,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2557,
									"end": 2573,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2557,
									"end": 2573,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2538,
									"end": 2539,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2527,
									"end": 2540,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2494,
									"end": 2575,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2498,
									"end": 2501,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2498,
									"end": 2501,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 2164,
									"end": 2585,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2591,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2591,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2887,
									"end": 2897,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2887,
									"end": 2897,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2909,
									"end": 2939,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2909,
									"end": 2939,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2906,
									"end": 2962,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 2942,
									"end": 2960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 3061,
									"end": 3067,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3053,
									"end": 3057,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3047,
									"end": 3058,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3021,
									"end": 3059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3021,
									"end": 3059,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3015,
									"end": 3019,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2971,
									"end": 3068,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2971,
									"end": 3068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3123,
									"end": 3127,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3123,
									"end": 3127,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3180,
									"end": 3182,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3169,
									"end": 3183,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3169,
									"end": 3183,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3197,
									"end": 3198,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3899,
									"end": 3900,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3916,
									"end": 3922,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3968,
									"end": 3987,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3962,
									"end": 3988,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3913,
									"end": 4002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2724,
									"end": 2725,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2720,
									"end": 2731,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2716,
									"end": 2740,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2712,
									"end": 2741,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2702,
									"end": 2742,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2748,
									"end": 2749,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2744,
									"end": 2755,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2699,
									"end": 2756,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4015,
									"end": 4096,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3192,
									"end": 3855,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2020,
									"end": 2021,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2013,
									"end": 2027,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2057,
									"end": 2061,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2062,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2062,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3228,
									"end": 3248,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3360,
									"end": 3367,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3357,
									"end": 3358,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3354,
									"end": 3368,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3449,
									"end": 3468,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3443,
									"end": 3469,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3428,
									"end": 3470,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3428,
									"end": 3470,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3541,
									"end": 3568,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3509,
									"end": 3510,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3511,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3395,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3395,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3346,
									"end": 3582,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3350,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3610,
									"end": 3616,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3601,
									"end": 3608,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3598,
									"end": 3617,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3671,
									"end": 3690,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3665,
									"end": 3691,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3754,
									"end": 3755,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3764,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3766,
									"end": 3769,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3742,
									"end": 3779,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 3780,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3723,
									"end": 3781,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3708,
									"end": 3782,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3595,
									"end": 3796,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3842,
									"end": 3843,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3833,
									"end": 3839,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3830,
									"end": 3831,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3826,
									"end": 3840,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3822,
									"end": 3844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3816,
									"end": 3820,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3809,
									"end": 3845,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 4106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 4112,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2767,
									"end": 4112,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4688,
									"end": 16002,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4688,
									"end": 16002,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4688,
									"end": 16002,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4688,
									"end": 16002,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4688,
									"end": 16002,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4688,
									"end": 16002,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4688,
									"end": 16002,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122082d3b7452a95f5a356056f149c6076f88d0720773af9c5b69b3f77c8aa01427564736f6c63430008160033",
									".code": [
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4688,
											"end": 16002,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5316,
											"end": 5414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5316,
											"end": 5414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7602,
											"end": 7799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7602,
											"end": 7799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6519,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6413,
											"end": 6519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6500,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6500,
											"end": 6512,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6413,
											"end": 6519,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6413,
											"end": 6519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6413,
											"end": 6519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6413,
											"end": 6519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6413,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8617,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8361,
											"end": 8617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8361,
											"end": 8617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8361,
											"end": 8617,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8361,
											"end": 8617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8617,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8361,
											"end": 8617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8361,
											"end": 8617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6262,
											"end": 6353,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6262,
											"end": 6353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6262,
											"end": 6353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6262,
											"end": 6353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6344,
											"end": 6346,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9012,
											"end": 9246,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9012,
											"end": 9246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9012,
											"end": 9246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9012,
											"end": 9246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9012,
											"end": 9246,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9012,
											"end": 9246,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9012,
											"end": 9246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9012,
											"end": 9246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9012,
											"end": 9246,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9012,
											"end": 9246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9012,
											"end": 9246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9012,
											"end": 9246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6577,
											"end": 6702,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6577,
											"end": 6702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6577,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6577,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 6577,
											"end": 6702,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6577,
											"end": 6702,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6577,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6577,
											"end": 6702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6577,
											"end": 6702,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 6577,
											"end": 6702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6651,
											"end": 6658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6577,
											"end": 6702,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5629,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5527,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5527,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5527,
											"end": 5629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9733,
											"end": 10160,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9733,
											"end": 10160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9733,
											"end": 10160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9733,
											"end": 10160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 9733,
											"end": 10160,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9733,
											"end": 10160,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9733,
											"end": 10160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9733,
											"end": 10160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9733,
											"end": 10160,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 9733,
											"end": 10160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9733,
											"end": 10160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 9733,
											"end": 10160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 7087,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6898,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6898,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6898,
											"end": 7087,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 7087,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6898,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6898,
											"end": 7087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 7087,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6898,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6898,
											"end": 7087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7145,
											"end": 7294,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 7145,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7145,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7145,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7145,
											"end": 7294,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7145,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7145,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7145,
											"end": 7294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7145,
											"end": 7294,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7145,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7145,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7145,
											"end": 7294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5383,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5402,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5395,
											"end": 5407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5395,
											"end": 5407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5395,
											"end": 5407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5316,
											"end": 5414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7755,
											"end": 7762,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 7770,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 7739,
											"end": 7771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7771,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7739,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7792,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7781,
											"end": 7792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7781,
											"end": 7792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7781,
											"end": 7792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8617,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8361,
											"end": 8617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8458,
											"end": 8462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8514,
											"end": 8552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8530,
											"end": 8534,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8545,
											"end": 8551,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8514,
											"end": 8529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8514,
											"end": 8552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8514,
											"end": 8552,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8514,
											"end": 8552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8562,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8572,
											"end": 8576,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8580,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8582,
											"end": 8588,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8562,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8562,
											"end": 8589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8562,
											"end": 8589,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8562,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8617,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8361,
											"end": 8617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9012,
											"end": 9246,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9012,
											"end": 9246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9100,
											"end": 9104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9154,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9170,
											"end": 9177,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9207,
											"end": 9217,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9179,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9170,
											"end": 9177,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9179,
											"end": 9188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9179,
											"end": 9204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9179,
											"end": 9204,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 9179,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9179,
											"end": 9217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 9179,
											"end": 9217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9179,
											"end": 9217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9179,
											"end": 9217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 9179,
											"end": 9217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9179,
											"end": 9217,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 9179,
											"end": 9217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9154,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9154,
											"end": 9218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5527,
											"end": 5629,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5527,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5583,
											"end": 5596,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5615,
											"end": 5622,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5608,
											"end": 5622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5608,
											"end": 5622,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5608,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5608,
											"end": 5622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5608,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5608,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9733,
											"end": 10160,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 9733,
											"end": 10160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9826,
											"end": 9830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9826,
											"end": 9830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9907,
											"end": 9932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9924,
											"end": 9931,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9907,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9907,
											"end": 9932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9907,
											"end": 9932,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 9907,
											"end": 9932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9880,
											"end": 9932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9970,
											"end": 9985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9985,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9950,
											"end": 9985,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3152,
											"end": 3173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 9942,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10070,
											"end": 10075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10077,
											"end": 10084,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10105,
											"end": 10120,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10086,
											"end": 10102,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10086,
											"end": 10120,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10061,
											"end": 10121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 7087,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6898,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6977,
											"end": 6981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7031,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3259,
											"end": 3269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7048,
											"end": 7050,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7052,
											"end": 7058,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7031,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7031,
											"end": 7059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7145,
											"end": 7294,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7145,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7234,
											"end": 7241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7271,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7278,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7287,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7287,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7287,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7287,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7287,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7145,
											"end": 7294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13615,
											"end": 13955,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13615,
											"end": 13955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13716,
											"end": 13735,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13716,
											"end": 13735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13708,
											"end": 13776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 13708,
											"end": 13776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13708,
											"end": 13776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13708,
											"end": 13776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13708,
											"end": 13776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13708,
											"end": 13776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13708,
											"end": 13776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13708,
											"end": 13776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13708,
											"end": 13776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3627,
											"end": 3689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3732,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13708,
											"end": 13776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3774,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13708,
											"end": 13776,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 13708,
											"end": 13776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13794,
											"end": 13815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13794,
											"end": 13815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13786,
											"end": 13854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 13786,
											"end": 13854,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13786,
											"end": 13854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13786,
											"end": 13854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13786,
											"end": 13854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13786,
											"end": 13854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13786,
											"end": 13854,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13786,
											"end": 13854,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13786,
											"end": 13854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3963,
											"end": 3984,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4023,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4059,
											"end": 4093,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13786,
											"end": 13854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3779,
											"end": 4177,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13786,
											"end": 13854,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 13786,
											"end": 13854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13876,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13883,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13892,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13892,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13892,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13892,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13892,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13901,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13865,
											"end": 13901,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13916,
											"end": 13948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13916,
											"end": 13948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13916,
											"end": 13948,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 13916,
											"end": 13948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13916,
											"end": 13948,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13916,
											"end": 13948,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13916,
											"end": 13948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13916,
											"end": 13948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13916,
											"end": 13948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13916,
											"end": 13948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13916,
											"end": 13948,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13615,
											"end": 13955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13615,
											"end": 13955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13615,
											"end": 13955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13615,
											"end": 13955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14236,
											"end": 14647,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14236,
											"end": 14647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14336,
											"end": 14360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14363,
											"end": 14388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14373,
											"end": 14378,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14380,
											"end": 14387,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 14363,
											"end": 14388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14363,
											"end": 14388,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 14363,
											"end": 14388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14336,
											"end": 14388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14336,
											"end": 14388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14402,
											"end": 14418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14402,
											"end": 14439,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14398,
											"end": 14641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14398,
											"end": 14641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14483,
											"end": 14489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14463,
											"end": 14489,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14455,
											"end": 14523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14455,
											"end": 14523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14455,
											"end": 14523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14455,
											"end": 14523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14455,
											"end": 14523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14455,
											"end": 14523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14455,
											"end": 14523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14455,
											"end": 14523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14455,
											"end": 14523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4493,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14455,
											"end": 14523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4182,
											"end": 4535,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14455,
											"end": 14523,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 14455,
											"end": 14523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14565,
											"end": 14616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14574,
											"end": 14579,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14581,
											"end": 14588,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14609,
											"end": 14615,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14606,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14590,
											"end": 14615,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14565,
											"end": 14573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14565,
											"end": 14616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14565,
											"end": 14616,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 14565,
											"end": 14616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14326,
											"end": 14647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14236,
											"end": 14647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14236,
											"end": 14647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14236,
											"end": 14647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14236,
											"end": 14647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10614,
											"end": 11402,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10614,
											"end": 11402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10710,
											"end": 10728,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10710,
											"end": 10728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 10702,
											"end": 10770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10702,
											"end": 10770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10702,
											"end": 10770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10702,
											"end": 10770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10702,
											"end": 10770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10702,
											"end": 10770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4745,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4820,
											"end": 4854,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4793,
											"end": 4855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4864,
											"end": 4899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10702,
											"end": 10770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4941,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10702,
											"end": 10770,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 10702,
											"end": 10770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10788,
											"end": 10804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10788,
											"end": 10804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10780,
											"end": 10844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 10780,
											"end": 10844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10780,
											"end": 10844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10780,
											"end": 10844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10780,
											"end": 10844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10780,
											"end": 10844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10780,
											"end": 10844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10780,
											"end": 10844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10780,
											"end": 10844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10780,
											"end": 10844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4946,
											"end": 5345,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10780,
											"end": 10844,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 10780,
											"end": 10844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10926,
											"end": 10941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10926,
											"end": 10941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10904,
											"end": 10923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10926,
											"end": 10941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10926,
											"end": 10941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10926,
											"end": 10941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10926,
											"end": 10941,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10926,
											"end": 10941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10926,
											"end": 10941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10926,
											"end": 10941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10926,
											"end": 10941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10926,
											"end": 10941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10926,
											"end": 10941,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10926,
											"end": 10941,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10959,
											"end": 10980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10959,
											"end": 10980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10959,
											"end": 10980,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10959,
											"end": 10980,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10951,
											"end": 11023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 10951,
											"end": 11023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10951,
											"end": 11023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10951,
											"end": 11023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10951,
											"end": 11023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10951,
											"end": 11023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10951,
											"end": 11023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10951,
											"end": 11023,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10951,
											"end": 11023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5630,
											"end": 5664,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10951,
											"end": 11023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5350,
											"end": 5752,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10951,
											"end": 11023,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 10951,
											"end": 11023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11057,
											"end": 11072,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11057,
											"end": 11072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11057,
											"end": 11072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11057,
											"end": 11066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11057,
											"end": 11072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11057,
											"end": 11072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11057,
											"end": 11072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11057,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11057,
											"end": 11072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11057,
											"end": 11072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11057,
											"end": 11072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11057,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11057,
											"end": 11072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11057,
											"end": 11072,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11057,
											"end": 11072,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11075,
											"end": 11095,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11075,
											"end": 11095,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11075,
											"end": 11095,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11057,
											"end": 11095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11057,
											"end": 11095,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 11285,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 11285,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 11285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 11285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 11285,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 11285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 11285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 11285,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 11285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 11285,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 11295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 11295,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 11295,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 11295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 11295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 11295,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11321,
											"end": 11347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11321,
											"end": 11347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11272,
											"end": 11285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 11285,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11321,
											"end": 11347,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11321,
											"end": 11347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11321,
											"end": 11347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11321,
											"end": 11347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11321,
											"end": 11347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11321,
											"end": 11347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11321,
											"end": 11347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11321,
											"end": 11347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11321,
											"end": 11347,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11358,
											"end": 11395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 15231,
											"end": 15322,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2890,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/ERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"keccak256\":\"0xba71dc3094972d4cfaa4419d2a1d0e89e809ed53cf0d93bc625841dcbe9f49cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f389154466a857ca750d6848bc77e3facf81db994fadddf47092e54d1d8f750\",\"dweb:/ipfs/QmSMEU1xseo34hd68zkogEBTT8rftskvT3hMZPPHJ87aYH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 128,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 134,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 136,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 138,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "contracts/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"keccak256\":\"0xba71dc3094972d4cfaa4419d2a1d0e89e809ed53cf0d93bc625841dcbe9f49cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f389154466a857ca750d6848bc77e3facf81db994fadddf47092e54d1d8f750\",\"dweb:/ipfs/QmSMEU1xseo34hd68zkogEBTT8rftskvT3hMZPPHJ87aYH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"keccak256\":\"0xba71dc3094972d4cfaa4419d2a1d0e89e809ed53cf0d93bc625841dcbe9f49cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f389154466a857ca750d6848bc77e3facf81db994fadddf47092e54d1d8f750\",\"dweb:/ipfs/QmSMEU1xseo34hd68zkogEBTT8rftskvT3hMZPPHJ87aYH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20.sol",
					"exportedSymbols": {
						"Context20": [
							117
						],
						"ERC20": [
							699
						],
						"IERC20": [
							77
						],
						"IERC20Metadata": [
							98
						]
					},
					"id": 700,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:0"
									},
									"scope": 77,
									"src": "775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "836:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "932:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "972:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:0"
									},
									"scope": 77,
									"src": "913:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "987:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1203:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1220:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1212:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1232:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1224:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1258:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1258:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1257:6:0"
									},
									"scope": 77,
									"src": "1194:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1270:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1548:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1566:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1558:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1581:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1573:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1613:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:9:0"
									},
									"scope": 77,
									"src": "1539:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1628:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2284:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2300:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2292:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2317:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2309:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2291:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2343:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2342:6:0"
									},
									"scope": 77,
									"src": "2275:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2355:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2656:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2677:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2669:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2691:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2683:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2703:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2695:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2668:42:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2729:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2729:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:6:0"
									},
									"scope": 77,
									"src": "2647:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 700,
							"src": "203:2534:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 78,
										"name": "IERC20",
										"nameLocations": [
											"2767:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "2767:6:0"
									},
									"id": 79,
									"nodeType": "InheritanceSpecifier",
									"src": "2767:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 98,
							"linearizedBaseContracts": [
								98,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "2749:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "2780:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 85,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2848:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2852:2:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "2878:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 82,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2878:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2877:15:0"
									},
									"scope": 98,
									"src": "2839:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "2899:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2969:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3001:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 88,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3001:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3000:15:0"
									},
									"scope": 98,
									"src": "2960:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3022:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 97,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3101:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3109:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "3135:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 94,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3135:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:7:0"
									},
									"scope": 98,
									"src": "3092:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 700,
							"src": "2739:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "Context20",
							"nameLocation": "3164:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "3242:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 103,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3259:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3263:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3259:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 102,
												"id": 105,
												"nodeType": "Return",
												"src": "3252:17:0"
											}
										]
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "3189:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3199:2:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "3233:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:9:0"
									},
									"scope": 117,
									"src": "3180:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "3349:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3366:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3370:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "3366:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "3359:15:0"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "3291:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3299:2:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3333:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 109,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3333:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:16:0"
									},
									"scope": 117,
									"src": "3282:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 700,
							"src": "3146:237:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 119,
										"name": "Context20",
										"nameLocations": [
											"4706:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 117,
										"src": "4706:9:0"
									},
									"id": 120,
									"nodeType": "InheritanceSpecifier",
									"src": "4706:9:0"
								},
								{
									"baseName": {
										"id": 121,
										"name": "IERC20",
										"nameLocations": [
											"4717:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "4717:6:0"
									},
									"id": 122,
									"nodeType": "InheritanceSpecifier",
									"src": "4717:6:0"
								},
								{
									"baseName": {
										"id": 123,
										"name": "IERC20Metadata",
										"nameLocations": [
											"4725:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 98,
										"src": "4725:14:0"
									},
									"id": 124,
									"nodeType": "InheritanceSpecifier",
									"src": "4725:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "3386:1301:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 699,
							"linearizedBaseContracts": [
								699,
								98,
								77,
								117
							],
							"name": "ERC20",
							"nameLocation": "4697:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 128,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "4782:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "4746:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 127,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 125,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4754:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4746:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 126,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4765:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 134,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "4854:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "4798:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 133,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 129,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4806:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4798:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 132,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 130,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4825:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4817:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4836:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 136,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "4888:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "4872:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4872:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 138,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "4922:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "4907:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 137,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4907:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 140,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "4948:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "4933:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 139,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4933:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "5194:57:0",
										"statements": [
											{
												"expression": {
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 148,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "5204:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 149,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "5212:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5204:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "5204:13:0"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "5227:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "5237:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5227:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "5227:17:0"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "4962:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 157,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "5164:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5150:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5150:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "5185:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5171:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5171:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5149:44:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5194:0:0"
									},
									"scope": 699,
									"src": "5138:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										85
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "5385:29:0",
										"statements": [
											{
												"expression": {
													"id": 164,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "5402:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 163,
												"id": 165,
												"nodeType": "Return",
												"src": "5395:12:0"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "5257:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "5325:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 160,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5352:8:0"
									},
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5329:2:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5370:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 161,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5370:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5369:15:0"
									},
									"scope": 699,
									"src": "5316:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										91
									],
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5598:31:0",
										"statements": [
											{
												"expression": {
													"id": 174,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "5615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 173,
												"id": 175,
												"nodeType": "Return",
												"src": "5608:14:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "5420:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "5536:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 170,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5565:8:0"
									},
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5542:2:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5583:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5583:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5582:15:0"
									},
									"scope": 699,
									"src": "5527:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										97
									],
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "6327:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6344:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 183,
												"id": 185,
												"nodeType": "Return",
												"src": "6337:9:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5635:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "6271:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6302:8:0"
									},
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6279:2:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "6320:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 181,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6320:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6319:7:0"
									},
									"scope": 699,
									"src": "6262:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "6483:36:0",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 136,
													"src": "6500:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "6493:19:0"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "6359:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6422:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 190,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6456:8:0"
									},
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6433:2:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "6474:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6473:9:0"
									},
									"scope": 699,
									"src": "6413:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "6660:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 206,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "6677:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 208,
													"indexExpression": {
														"id": 207,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "6687:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6677:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "6670:25:0"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "6525:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "6586:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 202,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6633:8:0"
									},
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6604:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "6596:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6595:17:0"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "6651:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6650:9:0"
									},
									"scope": 699,
									"src": "6577:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "6983:104:0",
										"statements": [
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7001:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "6993:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 222,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6993:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 224,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "7009:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7009:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6993:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 228,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "7041:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 229,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "7048:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "7052:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 227,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "7031:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7031:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "7031:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7076:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 221,
												"id": 234,
												"nodeType": "Return",
												"src": "7069:11:0"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "6708:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "6907:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 218,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6959:8:0"
									},
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6916:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6936:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6928:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6915:28:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6977:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 219,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6977:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6976:6:0"
									},
									"scope": 699,
									"src": "6898:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "7243:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 247,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "7260:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 249,
														"indexExpression": {
															"id": 248,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "7272:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7260:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 251,
													"indexExpression": {
														"id": 250,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "7279:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7260:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 252,
												"nodeType": "Return",
												"src": "7253:34:0"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "7093:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "7154:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 243,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7216:8:0"
									},
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7172:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "7164:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7164:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7187:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "7179:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7163:32:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "7234:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7233:9:0"
									},
									"scope": 699,
									"src": "7145:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "7691:108:0",
										"statements": [
											{
												"assignments": [
													266
												],
												"declarations": [
													{
														"constant": false,
														"id": 266,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7709:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 278,
														"src": "7701:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 265,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7701:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 269,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 267,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "7717:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7717:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7701:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "7748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 272,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "7755:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 273,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "7764:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 270,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "7739:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7739:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "7739:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7788:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 264,
												"id": 277,
												"nodeType": "Return",
												"src": "7781:11:0"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "7300:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "7611:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7667:8:0"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7627:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "7619:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7644:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "7636:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7636:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7618:33:0"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "7685:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7685:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7684:6:0"
									},
									"scope": 699,
									"src": "7602:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "8464:153:0",
										"statements": [
											{
												"assignments": [
													293
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "8482:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "8474:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 292,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8474:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 296,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 294,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "8492:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8492:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8474:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 298,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "8530:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 299,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "8536:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 300,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "8545:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 297,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "8514:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8514:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "8514:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 304,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "8572:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 305,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "8578:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 306,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "8582:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 303,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "8562:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8562:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "8562:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8606:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 291,
												"id": 310,
												"nodeType": "Return",
												"src": "8599:11:0"
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "7805:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "8370:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8440:8:0"
									},
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8391:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "8383:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8405:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "8397:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "8409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8382:42:0"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "8458:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8458:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8457:6:0"
									},
									"scope": 699,
									"src": "8361:256:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "9106:140:0",
										"statements": [
											{
												"assignments": [
													323
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "9124:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "9116:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 322,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9116:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 326,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 324,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "9132:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9132:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9116:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 328,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "9163:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "9170:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 331,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 323,
																		"src": "9189:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 332,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "9196:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 330,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "9179:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9179:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 334,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "9207:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9179:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 327,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "9154:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9154:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "9154:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9235:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 321,
												"id": 339,
												"nodeType": "Return",
												"src": "9228:11:0"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "8623:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "9021:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9047:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "9039:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "9064:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "9056:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9056:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9038:37:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "9100:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9100:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9099:6:0"
									},
									"scope": 699,
									"src": "9012:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "9832:328:0",
										"statements": [
											{
												"assignments": [
													352
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "9850:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "9842:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 351,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9842:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 353,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "9858:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9858:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9842:28:0"
											},
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "9888:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "9880:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 356,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9880:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 362,
												"initialValue": {
													"arguments": [
														{
															"id": 359,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "9917:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 360,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "9924:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 358,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "9907:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9907:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9880:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 364,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "9950:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 365,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "9970:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9950:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9987:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9942:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9942:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "9942:85:0"
											},
											{
												"id": 378,
												"nodeType": "UncheckedBlock",
												"src": "10037:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 371,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "10070:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 372,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "10077:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 373,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "10086:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 374,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "10105:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10086:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 370,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "10061:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10061:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 377,
														"nodeType": "ExpressionStatement",
														"src": "10061:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10149:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 350,
												"id": 380,
												"nodeType": "Return",
												"src": "10142:11:0"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "9252:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "9742:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9768:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "9760:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "9785:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "9777:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9759:42:0"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "9826:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9826:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9825:6:0"
									},
									"scope": 699,
									"src": "9733:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "10692:710:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "10710:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10726:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10718:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 394,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10718:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10718:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10710:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10730:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10702:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10702:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "10702:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "10788:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10802:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10794:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 404,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10794:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10794:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10788:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10806:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10780:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10780:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "10780:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "10876:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "10882:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "10886:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 412,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "10855:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10855:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "10855:38:0"
											},
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "10912:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "10904:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10904:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"baseExpression": {
														"id": 420,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "10926:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 422,
													"indexExpression": {
														"id": 421,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "10936:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10926:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10904:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 425,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "10959:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 426,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "10974:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10959:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10982:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10951:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "10951:72:0"
											},
											{
												"id": 445,
												"nodeType": "UncheckedBlock",
												"src": "11033:273:0",
												"statements": [
													{
														"expression": {
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 431,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "11057:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 433,
																"indexExpression": {
																	"id": 432,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "11067:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11057:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 434,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "11075:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 435,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "11089:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11075:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11057:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 438,
														"nodeType": "ExpressionStatement",
														"src": "11057:38:0"
													},
													{
														"expression": {
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 439,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "11272:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 441,
																"indexExpression": {
																	"id": 440,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "11282:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11272:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 442,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "11289:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11272:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 444,
														"nodeType": "ExpressionStatement",
														"src": "11272:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 447,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "11330:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "11336:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "11340:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "11321:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11321:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "EmitStatement",
												"src": "11316:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "11378:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "11384:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 455,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "11388:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "11358:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11358:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "11358:37:0"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "10166:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "10623:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10641:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "10633:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10655:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "10647:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10647:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10667:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "10659:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10659:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10632:42:0"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10692:0:0"
									},
									"scope": 699,
									"src": "10614:788:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "11743:470:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 468,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "11761:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11780:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11772:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11772:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11772:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11761:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11784:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11753:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11753:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "11753:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11858:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11850:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 478,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11850:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11850:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 482,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "11862:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "11871:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 477,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "11829:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11829:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "11829:49:0"
											},
											{
												"expression": {
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 486,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "11889:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 487,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "11905:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11889:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "11889:22:0"
											},
											{
												"id": 496,
												"nodeType": "UncheckedBlock",
												"src": "11921:175:0",
												"statements": [
													{
														"expression": {
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 490,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "12057:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 492,
																"indexExpression": {
																	"id": 491,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "12067:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12057:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 493,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "12079:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12057:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 495,
														"nodeType": "ExpressionStatement",
														"src": "12057:28:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12127:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12119:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 498,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12119:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12119:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "12131:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 503,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "12140:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 497,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "12110:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12110:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "EmitStatement",
												"src": "12105:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12186:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12178:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 507,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12178:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12178:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "12190:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "12199:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "12158:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12158:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "12158:48:0"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "11408:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "11687:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11701:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "11693:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11718:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "11710:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11692:33:0"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11743:0:0"
									},
									"scope": 699,
									"src": "11678:535:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "12598:594:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 525,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "12616:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12635:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12627:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 526,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12627:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12627:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12616:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12639:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 524,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12608:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12608:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "12608:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "12707:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12724:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12716:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12716:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12716:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "12728:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 534,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "12686:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12686:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "12686:49:0"
											},
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "12754:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 587,
														"src": "12746:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12746:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"baseExpression": {
														"id": 545,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "12771:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 547,
													"indexExpression": {
														"id": 546,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "12781:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12771:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12746:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 550,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "12807:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 551,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "12825:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12807:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12833:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 549,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12799:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12799:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "12799:71:0"
											},
											{
												"id": 568,
												"nodeType": "UncheckedBlock",
												"src": "12880:194:0",
												"statements": [
													{
														"expression": {
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 556,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "12904:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 558,
																"indexExpression": {
																	"id": 557,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "12914:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12904:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 559,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "12925:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 560,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "12942:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12925:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12904:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 563,
														"nodeType": "ExpressionStatement",
														"src": "12904:44:0"
													},
													{
														"expression": {
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 564,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "13041:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 565,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "13057:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13041:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 567,
														"nodeType": "ExpressionStatement",
														"src": "13041:22:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 570,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "13098:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13115:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13107:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 571,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13107:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13107:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "13119:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 569,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "13089:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13089:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "EmitStatement",
												"src": "13084:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 579,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "13157:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13174:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13166:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 580,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13166:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13166:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "13178:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 578,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "13137:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13137:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "13137:48:0"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "12219:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12542:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12556:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "12548:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12573:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "12565:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12547:33:0"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12598:0:0"
									},
									"scope": 699,
									"src": "12533:659:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "13698:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 599,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "13716:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13733:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13725:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 600,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13725:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13725:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13716:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13737:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13708:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13708:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "13708:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 609,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "13794:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13813:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13805:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 610,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13805:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13805:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13794:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13817:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13786:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13786:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "13786:68:0"
											},
											{
												"expression": {
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 618,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "13865:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 621,
															"indexExpression": {
																"id": 619,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "13877:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13865:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 622,
														"indexExpression": {
															"id": 620,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "13884:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13865:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 623,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "13895:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13865:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "13865:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 627,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "13925:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 628,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "13932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "13941:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "13916:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13916:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "EmitStatement",
												"src": "13911:37:0"
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "13198:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "13624:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13641:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "13633:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13656:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "13648:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13673:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "13665:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13632:48:0"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13698:0:0"
									},
									"scope": 699,
									"src": "13615:340:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "14326:321:0",
										"statements": [
											{
												"assignments": [
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "14344:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "14336:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14336:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 646,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "14373:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 647,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "14380:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 645,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "14363:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14363:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14336:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 650,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "14402:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14427:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 652,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "14427:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 651,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14422:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14422:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14436:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14422:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14402:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 674,
												"nodeType": "IfStatement",
												"src": "14398:243:0",
												"trueBody": {
													"id": 673,
													"nodeType": "Block",
													"src": "14441:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 658,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "14463:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 659,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 640,
																			"src": "14483:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14463:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14491:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 657,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "14455:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14455:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 663,
															"nodeType": "ExpressionStatement",
															"src": "14455:68:0"
														},
														{
															"id": 672,
															"nodeType": "UncheckedBlock",
															"src": "14537:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 665,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 636,
																				"src": "14574:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 666,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 638,
																				"src": "14581:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 669,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 667,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "14590:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 668,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 640,
																					"src": "14609:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14590:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 664,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "14565:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14565:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 671,
																	"nodeType": "ExpressionStatement",
																	"src": "14565:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "13961:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "14245:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14269:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "14261:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14284:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "14276:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14276:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14301:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "14293:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14260:48:0"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14326:0:0"
									},
									"scope": 699,
									"src": "14236:411:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "15320:2:0",
										"statements": []
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "14653:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15240:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15269:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "15261:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15283:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "15275:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15295:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "15287:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15260:42:0"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15320:0:0"
									},
									"scope": 699,
									"src": "15231:91:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "15998:2:0",
										"statements": []
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "15328:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "15919:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15947:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "15939:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15961:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "15953:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15953:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15973:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "15965:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15965:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15938:42:0"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15998:0:0"
									},
									"scope": 699,
									"src": "15910:90:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 700,
							"src": "4688:11314:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:15897:0"
				},
				"id": 0
			}
		}
	}
}