{
	"id": "3d06a961158ec5cff62da05ba54da841",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.22;\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract Token is ERC20(\"Proffesional\", \"PROFI\") {\n    address public owner;\n    address public tom;\n    address public max;\n    address public jack;\n\n    constructor() {\n        owner = msg.sender;\n        tom = 0xcB3a5467756F86692FB3336c58EC41c16B9BEBdF;\n        max = 0xbD0233D4cb7abE917F79f0E80DC7676F4cb818e1;\n        jack = 0x7CE4B5D0504EdF27ec43610F8679E84BDF81a0b8;\n\n        _mint(owner, 100_000 * 10**decimals());\n        _mint(tom, 200_000 * 10**decimals());\n        _mint(max, 300_000 * 10**decimals());\n        _mint(jack, 400_000 * 10**decimals());\n    }\n\n    function getRewrdCode() public {\n        _mint(msg.sender, 100 * 10 * decimals());\n    }\n\n    function transferToken(\n        address _from,\n        address _to,\n        uint256 _amount\n    ) public {\n        _transfer(_from, _to, _amount);\n    }\n\n    function decimals() public pure override returns (uint8) {\n        return 6;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Token.sol": {
				"Token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewrdCode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "jack",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "max",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tom",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Token.sol\":114:1023  contract Token is ERC20(\"Proffesional\", \"PROFI\") {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Token.sol\":269:681  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xa2, 0x141c9bd999995cda5bdb985b)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd8, 0x50524f4649)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n  pop\n    /* \"contracts/Token.sol\":293:298  owner */\n  0x05\n    /* \"contracts/Token.sol\":293:311  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"contracts/Token.sol\":301:311  msg.sender */\n  caller\n    /* \"contracts/Token.sol\":293:311  owner = msg.sender */\n  swap1\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/Token.sol\":321:324  tom */\n  0x06\n    /* \"contracts/Token.sol\":321:369  tom = 0xcB3a5467756F86692FB3336c58EC41c16B9BEBdF */\n  dup1\n  sload\n  dup3\n  and\n    /* \"contracts/Token.sol\":327:369  0xcB3a5467756F86692FB3336c58EC41c16B9BEBdF */\n  0xcb3a5467756f86692fb3336c58ec41c16b9bebdf\n    /* \"contracts/Token.sol\":321:369  tom = 0xcB3a5467756F86692FB3336c58EC41c16B9BEBdF */\n  or\n  swap1\n  sstore\n    /* \"contracts/Token.sol\":379:382  max */\n  0x07\n    /* \"contracts/Token.sol\":379:427  max = 0xbD0233D4cb7abE917F79f0E80DC7676F4cb818e1 */\n  dup1\n  sload\n  dup3\n  and\n    /* \"contracts/Token.sol\":385:427  0xbD0233D4cb7abE917F79f0E80DC7676F4cb818e1 */\n  0xbd0233d4cb7abe917f79f0e80dc7676f4cb818e1\n    /* \"contracts/Token.sol\":379:427  max = 0xbD0233D4cb7abE917F79f0E80DC7676F4cb818e1 */\n  or\n  swap1\n  sstore\n    /* \"contracts/Token.sol\":437:441  jack */\n  0x08\n    /* \"contracts/Token.sol\":437:486  jack = 0x7CE4B5D0504EdF27ec43610F8679E84BDF81a0b8 */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"contracts/Token.sol\":444:486  0x7CE4B5D0504EdF27ec43610F8679E84BDF81a0b8 */\n  0x7ce4b5d0504edf27ec43610f8679e84bdf81a0b8\n    /* \"contracts/Token.sol\":437:486  jack = 0x7CE4B5D0504EdF27ec43610F8679E84BDF81a0b8 */\n  or\n  swap1\n  sstore\n    /* \"contracts/Token.sol\":497:535  _mint(owner, 100_000 * 10**decimals()) */\n  tag_9\n  swap2\n  pop\n    /* \"contracts/Token.sol\":524:534  decimals() */\n  tag_10\n    /* \"contracts/Token.sol\":1013:1014  6 */\n  0x06\n  swap1\n    /* \"contracts/Token.sol\":939:1021  function decimals() public pure override returns (uint8) {... */\n  jump\n    /* \"contracts/Token.sol\":524:534  decimals() */\ntag_10:\n    /* \"contracts/Token.sol\":520:534  10**decimals() */\n  tag_12\n  swap1\n    /* \"contracts/Token.sol\":520:522  10 */\n  0x0a\n    /* \"contracts/Token.sol\":520:534  10**decimals() */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"contracts/Token.sol\":510:534  100_000 * 10**decimals() */\n  tag_14\n  swap1\n    /* \"contracts/Token.sol\":510:517  100_000 */\n  0x0186a0\n    /* \"contracts/Token.sol\":510:534  100_000 * 10**decimals() */\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"contracts/Token.sol\":497:502  _mint */\n  tag_16\n    /* \"contracts/Token.sol\":497:535  _mint(owner, 100_000 * 10**decimals()) */\n  jump\t// in\ntag_9:\n    /* \"contracts/Token.sol\":551:554  tom */\n  sload(0x06)\n    /* \"contracts/Token.sol\":545:581  _mint(tom, 200_000 * 10**decimals()) */\n  tag_17\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Token.sol\":551:554  tom */\n  and\n    /* \"contracts/Token.sol\":570:580  decimals() */\n  tag_18\n    /* \"contracts/Token.sol\":1013:1014  6 */\n  0x06\n  swap1\n    /* \"contracts/Token.sol\":939:1021  function decimals() public pure override returns (uint8) {... */\n  jump\n    /* \"contracts/Token.sol\":570:580  decimals() */\ntag_18:\n    /* \"contracts/Token.sol\":566:580  10**decimals() */\n  tag_19\n  swap1\n    /* \"contracts/Token.sol\":566:568  10 */\n  0x0a\n    /* \"contracts/Token.sol\":566:580  10**decimals() */\n  tag_13\n  jump\t// in\ntag_19:\n    /* \"contracts/Token.sol\":556:580  200_000 * 10**decimals() */\n  tag_14\n  swap1\n    /* \"contracts/Token.sol\":556:563  200_000 */\n  0x030d40\n    /* \"contracts/Token.sol\":556:580  200_000 * 10**decimals() */\n  tag_15\n  jump\t// in\n    /* \"contracts/Token.sol\":545:581  _mint(tom, 200_000 * 10**decimals()) */\ntag_17:\n    /* \"contracts/Token.sol\":597:600  max */\n  sload(0x07)\n    /* \"contracts/Token.sol\":591:627  _mint(max, 300_000 * 10**decimals()) */\n  tag_21\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Token.sol\":597:600  max */\n  and\n    /* \"contracts/Token.sol\":612:626  10**decimals() */\n  tag_23\n    /* \"contracts/Token.sol\":1013:1014  6 */\n  0x06\n    /* \"contracts/Token.sol\":612:614  10 */\n  0x0a\n    /* \"contracts/Token.sol\":612:626  10**decimals() */\n  tag_13\n  jump\t// in\ntag_23:\n    /* \"contracts/Token.sol\":602:626  300_000 * 10**decimals() */\n  tag_14\n  swap1\n    /* \"contracts/Token.sol\":602:609  300_000 */\n  0x0493e0\n    /* \"contracts/Token.sol\":602:626  300_000 * 10**decimals() */\n  tag_15\n  jump\t// in\n    /* \"contracts/Token.sol\":591:627  _mint(max, 300_000 * 10**decimals()) */\ntag_21:\n    /* \"contracts/Token.sol\":643:647  jack */\n  sload(0x08)\n    /* \"contracts/Token.sol\":637:674  _mint(jack, 400_000 * 10**decimals()) */\n  tag_25\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Token.sol\":643:647  jack */\n  and\n    /* \"contracts/Token.sol\":659:673  10**decimals() */\n  tag_27\n    /* \"contracts/Token.sol\":1013:1014  6 */\n  0x06\n    /* \"contracts/Token.sol\":659:661  10 */\n  0x0a\n    /* \"contracts/Token.sol\":659:673  10**decimals() */\n  tag_13\n  jump\t// in\ntag_27:\n    /* \"contracts/Token.sol\":649:673  400_000 * 10**decimals() */\n  tag_14\n  swap1\n    /* \"contracts/Token.sol\":649:656  400_000 */\n  0x061a80\n    /* \"contracts/Token.sol\":649:673  400_000 * 10**decimals() */\n  tag_15\n  jump\t// in\n    /* \"contracts/Token.sol\":637:674  _mint(jack, 400_000 * 10**decimals()) */\ntag_25:\n    /* \"contracts/Token.sol\":114:1023  contract Token is ERC20(\"Proffesional\", \"PROFI\") {... */\n  jump(tag_57)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_16:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4554:4605   */\n  mstore\n    /* \"#utility.yul\":4527:4545   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_35\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  tag_36\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  jump\t// in\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_36:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_41\n  swap1\n  pop\n  jump\ntag_38:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4966:4998   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4948:4999   */\n  mstore\n    /* \"#utility.yul\":5015:5033   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5008:5042   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5058:5076   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5051:5085   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":4921:4939   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_33\n    /* \"#utility.yul\":4746:5091   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_42:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_41:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_45\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_46)\ntag_45:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_46:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_47\n  swap2\n    /* \"#utility.yul\":5242:5267   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5230:5232   */\n  0x20\n    /* \"#utility.yul\":5215:5233   */\n  add\n  swap1\n    /* \"#utility.yul\":5096:5273   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\ntag_47:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_49:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_50:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_60:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_61:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1200   */\ntag_52:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1194   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":819:824   */\n  dup2\n    /* \"#utility.yul\":816:817   */\n  0x00\n    /* \"#utility.yul\":809:825   */\n  mstore\n    /* \"#utility.yul\":863:867   */\n  0x20\n    /* \"#utility.yul\":860:861   */\n  0x00\n    /* \"#utility.yul\":850:868   */\n  keccak256\n    /* \"#utility.yul\":933:935   */\n  0x1f\n    /* \"#utility.yul\":921:931   */\n  dup6\n    /* \"#utility.yul\":917:936   */\n  add\n    /* \"#utility.yul\":914:915   */\n  0x05\n    /* \"#utility.yul\":910:937   */\n  shr\n    /* \"#utility.yul\":904:908   */\n  dup2\n    /* \"#utility.yul\":900:938   */\n  add\n    /* \"#utility.yul\":969:973   */\n  0x20\n    /* \"#utility.yul\":957:967   */\n  dup7\n    /* \"#utility.yul\":954:974   */\n  lt\n    /* \"#utility.yul\":951:998   */\n  iszero\n  tag_65\n  jumpi\n  pop\n    /* \"#utility.yul\":992:996   */\n  dup1\n    /* \"#utility.yul\":951:998   */\ntag_65:\n    /* \"#utility.yul\":1047:1049   */\n  0x1f\n    /* \"#utility.yul\":1042:1045   */\n  dup6\n    /* \"#utility.yul\":1038:1050   */\n  add\n    /* \"#utility.yul\":1035:1036   */\n  0x05\n    /* \"#utility.yul\":1031:1051   */\n  shr\n    /* \"#utility.yul\":1025:1029   */\n  dup3\n    /* \"#utility.yul\":1021:1052   */\n  add\n    /* \"#utility.yul\":1011:1052   */\n  swap2\n  pop\n    /* \"#utility.yul\":1102:1184   */\ntag_66:\n    /* \"#utility.yul\":1120:1122   */\n  dup2\n    /* \"#utility.yul\":1113:1118   */\n  dup2\n    /* \"#utility.yul\":1110:1123   */\n  lt\n    /* \"#utility.yul\":1102:1184   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1165:1182   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1146:1147   */\n  0x01\n    /* \"#utility.yul\":1135:1148   */\n  add\n    /* \"#utility.yul\":1102:1184   */\n  jump(tag_66)\ntag_68:\n    /* \"#utility.yul\":1106:1109   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1194   */\ntag_64:\n    /* \"#utility.yul\":657:1200   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1376:2721   */\ntag_6:\n    /* \"#utility.yul\":1496:1506   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1518:1548   */\n  dup2\n  gt\n    /* \"#utility.yul\":1515:1571   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":1551:1569   */\n  tag_72\n  tag_49\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1580:1677   */\n  tag_73\n    /* \"#utility.yul\":1670:1676   */\n  dup2\n    /* \"#utility.yul\":1630:1668   */\n  tag_74\n    /* \"#utility.yul\":1662:1666   */\n  dup5\n    /* \"#utility.yul\":1656:1667   */\n  sload\n    /* \"#utility.yul\":1630:1668   */\n  tag_50\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1624:1628   */\n  dup5\n    /* \"#utility.yul\":1580:1677   */\n  tag_52\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1732:1736   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1789:1791   */\n  0x1f\n    /* \"#utility.yul\":1778:1792   */\n  dup4\n  gt\n    /* \"#utility.yul\":1806:1807   */\n  0x01\n    /* \"#utility.yul\":1801:2464   */\n  dup2\n  eq\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2508:2509   */\n  0x00\n    /* \"#utility.yul\":2525:2531   */\n  dup5\n    /* \"#utility.yul\":2522:2611   */\n  iszero\n  tag_77\n  jumpi\n  pop\n    /* \"#utility.yul\":2577:2596   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2571:2597   */\n  mload\n    /* \"#utility.yul\":2522:2611   */\ntag_77:\n  not(0x00)\n    /* \"#utility.yul\":1333:1334   */\n  0x03\n    /* \"#utility.yul\":1329:1340   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1325:1349   */\n  shr\n    /* \"#utility.yul\":1321:1350   */\n  not\n    /* \"#utility.yul\":1311:1351   */\n  and\n    /* \"#utility.yul\":1357:1358   */\n  0x01\n    /* \"#utility.yul\":1353:1364   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1308:1365   */\n  or\n    /* \"#utility.yul\":2624:2705   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1771:2715   */\n  jump(tag_68)\n    /* \"#utility.yul\":1801:2464   */\ntag_76:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1837:1857   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1955:2191   */\ntag_80:\n    /* \"#utility.yul\":1969:1976   */\n  dup3\n    /* \"#utility.yul\":1966:1967   */\n  dup2\n    /* \"#utility.yul\":1963:1977   */\n  lt\n    /* \"#utility.yul\":1955:2191   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":2058:2077   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2052:2078   */\n  mload\n    /* \"#utility.yul\":2037:2079   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2150:2177   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2118:2119   */\n  0x01\n    /* \"#utility.yul\":2106:2120   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1985:2004   */\n  dup5\n  add\n    /* \"#utility.yul\":1955:2191   */\n  jump(tag_80)\ntag_82:\n    /* \"#utility.yul\":1959:1962   */\n  pop\n    /* \"#utility.yul\":2219:2225   */\n  dup6\n    /* \"#utility.yul\":2210:2217   */\n  dup3\n    /* \"#utility.yul\":2207:2226   */\n  lt\n    /* \"#utility.yul\":2204:2405   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2280:2299   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2274:2300   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2363:2364   */\n  0x03\n    /* \"#utility.yul\":2359:2373   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2375:2378   */\n  0xf8\n    /* \"#utility.yul\":2355:2379   */\n  and\n    /* \"#utility.yul\":2351:2388   */\n  shr\n    /* \"#utility.yul\":2347:2389   */\n  not\n    /* \"#utility.yul\":2332:2390   */\n  and\n    /* \"#utility.yul\":2317:2391   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2204:2405   */\ntag_83:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2451:2452   */\n  0x01\n    /* \"#utility.yul\":2435:2449   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2431:2453   */\n  add\n    /* \"#utility.yul\":2418:2454   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1376:2721   */\n  jump\t// out\n    /* \"#utility.yul\":2726:2853   */\ntag_54:\n    /* \"#utility.yul\":2787:2797   */\n  0x4e487b71\n    /* \"#utility.yul\":2782:2785   */\n  0xe0\n    /* \"#utility.yul\":2778:2798   */\n  shl\n    /* \"#utility.yul\":2775:2776   */\n  0x00\n    /* \"#utility.yul\":2768:2799   */\n  mstore\n    /* \"#utility.yul\":2818:2822   */\n  0x11\n    /* \"#utility.yul\":2815:2816   */\n  0x04\n    /* \"#utility.yul\":2808:2823   */\n  mstore\n    /* \"#utility.yul\":2842:2846   */\n  0x24\n    /* \"#utility.yul\":2839:2840   */\n  0x00\n    /* \"#utility.yul\":2832:2847   */\n  revert\n    /* \"#utility.yul\":2858:3274   */\ntag_55:\n    /* \"#utility.yul\":2947:2948   */\n  0x01\n    /* \"#utility.yul\":2984:2989   */\n  dup2\n    /* \"#utility.yul\":2947:2948   */\n  dup2\n    /* \"#utility.yul\":2998:3268   */\ntag_86:\n    /* \"#utility.yul\":3019:3026   */\n  dup1\n    /* \"#utility.yul\":3009:3017   */\n  dup6\n    /* \"#utility.yul\":3006:3027   */\n  gt\n    /* \"#utility.yul\":2998:3268   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":3078:3082   */\n  dup2\n    /* \"#utility.yul\":3074:3075   */\n  0x00\n    /* \"#utility.yul\":3070:3076   */\n  not\n    /* \"#utility.yul\":3066:3083   */\n  div\n    /* \"#utility.yul\":3060:3064   */\n  dup3\n    /* \"#utility.yul\":3057:3084   */\n  gt\n    /* \"#utility.yul\":3054:3107   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":3087:3105   */\n  tag_90\n  tag_54\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3137:3144   */\n  dup1\n    /* \"#utility.yul\":3127:3135   */\n  dup6\n    /* \"#utility.yul\":3123:3145   */\n  and\n    /* \"#utility.yul\":3120:3175   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":3157:3173   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3120:3175   */\ntag_91:\n    /* \"#utility.yul\":3236:3258   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3196:3211   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":2998:3268   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":3002:3005   */\n  pop\n    /* \"#utility.yul\":2858:3274   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3279:4085   */\ntag_56:\n    /* \"#utility.yul\":3328:3333   */\n  0x00\n    /* \"#utility.yul\":3358:3366   */\n  dup3\n    /* \"#utility.yul\":3348:3428   */\n  tag_93\n  jumpi\n  pop\n    /* \"#utility.yul\":3399:3400   */\n  0x01\n    /* \"#utility.yul\":3413:3418   */\n  jump(tag_92)\n    /* \"#utility.yul\":3348:3428   */\ntag_93:\n    /* \"#utility.yul\":3447:3451   */\n  dup2\n    /* \"#utility.yul\":3437:3513   */\n  tag_94\n  jumpi\n  pop\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3498:3503   */\n  jump(tag_92)\n    /* \"#utility.yul\":3437:3513   */\ntag_94:\n    /* \"#utility.yul\":3529:3533   */\n  dup2\n    /* \"#utility.yul\":3547:3548   */\n  0x01\n    /* \"#utility.yul\":3542:3601   */\n  dup2\n  eq\n  tag_96\n  jumpi\n    /* \"#utility.yul\":3615:3616   */\n  0x02\n    /* \"#utility.yul\":3610:3740   */\n  dup2\n  eq\n  tag_97\n  jumpi\n    /* \"#utility.yul\":3522:3740   */\n  jump(tag_95)\n    /* \"#utility.yul\":3542:3601   */\ntag_96:\n    /* \"#utility.yul\":3572:3573   */\n  0x01\n    /* \"#utility.yul\":3563:3573   */\n  swap2\n  pop\n    /* \"#utility.yul\":3586:3591   */\n  pop\n  jump(tag_92)\n    /* \"#utility.yul\":3610:3740   */\ntag_97:\n    /* \"#utility.yul\":3647:3650   */\n  0xff\n    /* \"#utility.yul\":3637:3645   */\n  dup5\n    /* \"#utility.yul\":3634:3651   */\n  gt\n    /* \"#utility.yul\":3631:3674   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":3654:3672   */\n  tag_99\n  tag_54\n  jump\t// in\ntag_99:\n  pop\n  pop\n    /* \"#utility.yul\":3710:3711   */\n  0x01\n    /* \"#utility.yul\":3696:3712   */\n  dup3\n  shl\n    /* \"#utility.yul\":3725:3730   */\n  jump(tag_92)\n    /* \"#utility.yul\":3522:3740   */\ntag_95:\n  pop\n    /* \"#utility.yul\":3824:3826   */\n  0x20\n    /* \"#utility.yul\":3814:3822   */\n  dup4\n    /* \"#utility.yul\":3811:3827   */\n  lt\n    /* \"#utility.yul\":3805:3808   */\n  0x0133\n    /* \"#utility.yul\":3799:3803   */\n  dup4\n    /* \"#utility.yul\":3796:3809   */\n  lt\n    /* \"#utility.yul\":3792:3828   */\n  and\n    /* \"#utility.yul\":3786:3788   */\n  0x4e\n    /* \"#utility.yul\":3776:3784   */\n  dup5\n    /* \"#utility.yul\":3773:3789   */\n  lt\n    /* \"#utility.yul\":3768:3770   */\n  0x0b\n    /* \"#utility.yul\":3762:3766   */\n  dup5\n    /* \"#utility.yul\":3759:3771   */\n  lt\n    /* \"#utility.yul\":3755:3790   */\n  and\n    /* \"#utility.yul\":3752:3829   */\n  or\n    /* \"#utility.yul\":3749:3908   */\n  iszero\n  tag_100\n  jumpi\n  pop\n    /* \"#utility.yul\":3861:3880   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":3893:3898   */\n  jump(tag_92)\n    /* \"#utility.yul\":3749:3908   */\ntag_100:\n    /* \"#utility.yul\":3940:3974   */\n  tag_101\n    /* \"#utility.yul\":3965:3973   */\n  dup4\n    /* \"#utility.yul\":3959:3963   */\n  dup4\n    /* \"#utility.yul\":3940:3974   */\n  tag_55\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4010:4016   */\n  dup1\n    /* \"#utility.yul\":4006:4007   */\n  0x00\n    /* \"#utility.yul\":4002:4008   */\n  not\n    /* \"#utility.yul\":3998:4017   */\n  div\n    /* \"#utility.yul\":3989:3996   */\n  dup3\n    /* \"#utility.yul\":3986:4018   */\n  gt\n    /* \"#utility.yul\":3983:4041   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4021:4039   */\n  tag_103\n  tag_54\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4059:4079   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3279:4085   */\ntag_92:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4090:4230   */\ntag_13:\n    /* \"#utility.yul\":4148:4153   */\n  0x00\n    /* \"#utility.yul\":4177:4224   */\n  tag_105\n    /* \"#utility.yul\":4218:4222   */\n  0xff\n    /* \"#utility.yul\":4208:4216   */\n  dup5\n    /* \"#utility.yul\":4204:4223   */\n  and\n    /* \"#utility.yul\":4198:4202   */\n  dup4\n    /* \"#utility.yul\":4177:4224   */\n  tag_56\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4168:4224   */\n  swap4\n    /* \"#utility.yul\":4090:4230   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4235:4403   */\ntag_15:\n    /* \"#utility.yul\":4308:4317   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4339:4348   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4356:4371   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4350:4372   */\n  dup5\n  eq\n    /* \"#utility.yul\":4336:4373   */\n  or\n    /* \"#utility.yul\":4326:4397   */\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4377:4395   */\n  tag_92\n  tag_54\n  jump\t// in\n    /* \"#utility.yul\":4616:4741   */\ntag_40:\n    /* \"#utility.yul\":4681:4690   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4702:4712   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4699:4735   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4715:4733   */\n  tag_92\n  tag_54\n  jump\t// in\n    /* \"#utility.yul\":5096:5273   */\ntag_57:\n    /* \"contracts/Token.sol\":114:1023  contract Token is ERC20(\"Proffesional\", \"PROFI\") {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Token.sol\":114:1023  contract Token is ERC20(\"Proffesional\", \"PROFI\") {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6ac5db19\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xce266af8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf5537ede\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x6ac5db19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x18160ddd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5cd07ee6\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x05417143\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Token.sol\":243:262  address public jack */\n    tag_3:\n      sload(0x08)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_21:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Token.sol\":243:262  address public jack */\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":1377:1391   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1370:1392   */\n      iszero\n        /* \"#utility.yul\":1352:1393   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1340:1342   */\n      0x20\n        /* \"#utility.yul\":1325:1343   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_23\n        /* \"#utility.yul\":1212:1399   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":1550:1575   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1538:1540   */\n      0x20\n        /* \"#utility.yul\":1523:1541   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      tag_23\n        /* \"#utility.yul\":1404:1581   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_29\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n        /* \"contracts/Token.sol\":939:1021  function decimals() public pure override returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \"contracts/Token.sol\":1013:1014  6 */\n      0x06\n        /* \"#utility.yul\":2061:2097   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2049:2051   */\n      0x20\n        /* \"#utility.yul\":2034:2052   */\n      add\n        /* \"contracts/Token.sol\":939:1021  function decimals() public pure override returns (uint8) {... */\n      tag_23\n        /* \"#utility.yul\":1919:2103   */\n      jump\n        /* \"contracts/Token.sol\":687:775  function getRewrdCode() public {... */\n    tag_9:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/Token.sol\":219:237  address public max */\n    tag_10:\n      sload(0x07)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_35\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/Token.sol\":169:189  address public owner */\n    tag_12:\n      sload(0x05)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_25\n      tag_62\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_14:\n      tag_29\n      tag_65\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"contracts/Token.sol\":195:213  address public tom */\n    tag_15:\n      sload(0x06)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_35\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/Token.sol\":781:933  function transferToken(... */\n    tag_17:\n      tag_48\n      tag_77\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_82\n      swap1\n      tag_81\n      jump\t// in\n    tag_82:\n      dup1\n      iszero\n      tag_83\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_84\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_83)\n    tag_84:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_85:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_85\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_89\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_86:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_96:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Token.sol\":687:775  function getRewrdCode() public {... */\n    tag_49:\n        /* \"contracts/Token.sol\":728:768  _mint(msg.sender, 100 * 10 * decimals()) */\n      tag_100\n        /* \"contracts/Token.sol\":734:744  msg.sender */\n      caller\n        /* \"contracts/Token.sol\":746:767  100 * 10 * decimals() */\n      tag_102\n        /* \"contracts/Token.sol\":1013:1014  6 */\n      0x06\n        /* \"contracts/Token.sol\":746:754  100 * 10 */\n      0x03e8\n        /* \"contracts/Token.sol\":746:767  100 * 10 * decimals() */\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"contracts/Token.sol\":728:768  _mint(msg.sender, 100 * 10 * decimals()) */\n      0xffff\n      and\n        /* \"contracts/Token.sol\":728:733  _mint */\n      tag_104\n        /* \"contracts/Token.sol\":728:768  _mint(msg.sender, 100 * 10 * decimals()) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/Token.sol\":687:775  function getRewrdCode() public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_89\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/Token.sol\":781:933  function transferToken(... */\n    tag_78:\n        /* \"contracts/Token.sol\":896:926  _transfer(_from, _to, _amount) */\n      tag_117\n        /* \"contracts/Token.sol\":906:911  _from */\n      dup4\n        /* \"contracts/Token.sol\":913:916  _to */\n      dup4\n        /* \"contracts/Token.sol\":918:925  _amount */\n      dup4\n        /* \"contracts/Token.sol\":896:905  _transfer */\n      tag_97\n        /* \"contracts/Token.sol\":896:926  _transfer(_from, _to, _amount) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/Token.sol\":781:933  function transferToken(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3551:3583   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3533:3584   */\n      mstore\n        /* \"#utility.yul\":3600:3618   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3593:3627   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3643:3661   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3636:3670   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3506:3524   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_126\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_126\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      tag_126\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_126\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_141:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_126\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_146\n      swap2\n        /* \"#utility.yul\":1550:1575   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1538:1540   */\n      0x20\n        /* \"#utility.yul\":1523:1541   */\n      add\n      swap1\n        /* \"#utility.yul\":1404:1581   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_151\n      swap1\n      pop\n      jump\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_152\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3551:3583   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3533:3584   */\n      mstore\n        /* \"#utility.yul\":3600:3618   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3593:3627   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3643:3661   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3636:3670   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3506:3524   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_126\n        /* \"#utility.yul\":3331:3676   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_151:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_154\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_155)\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_156\n      swap2\n        /* \"#utility.yul\":1550:1575   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1538:1540   */\n      0x20\n        /* \"#utility.yul\":1523:1541   */\n      add\n      swap1\n        /* \"#utility.yul\":1404:1581   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:770   */\n    tag_28:\n        /* \"#utility.yul\":334:338   */\n      0x00\n        /* \"#utility.yul\":363:365   */\n      0x20\n        /* \"#utility.yul\":392:394   */\n      dup1\n        /* \"#utility.yul\":381:390   */\n      dup4\n        /* \"#utility.yul\":374:395   */\n      mstore\n        /* \"#utility.yul\":424:430   */\n      dup4\n        /* \"#utility.yul\":418:431   */\n      mload\n        /* \"#utility.yul\":467:473   */\n      dup1\n        /* \"#utility.yul\":462:464   */\n      0x20\n        /* \"#utility.yul\":451:460   */\n      dup6\n        /* \"#utility.yul\":447:465   */\n      add\n        /* \"#utility.yul\":440:474   */\n      mstore\n        /* \"#utility.yul\":492:493   */\n      0x00\n        /* \"#utility.yul\":502:642   */\n    tag_162:\n        /* \"#utility.yul\":516:522   */\n      dup2\n        /* \"#utility.yul\":513:514   */\n      dup2\n        /* \"#utility.yul\":510:523   */\n      lt\n        /* \"#utility.yul\":502:642   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":611:625   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":607:630   */\n      dup4\n      add\n        /* \"#utility.yul\":601:631   */\n      mload\n        /* \"#utility.yul\":577:594   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":596:598   */\n      0x40\n        /* \"#utility.yul\":573:599   */\n      add\n        /* \"#utility.yul\":566:632   */\n      mstore\n        /* \"#utility.yul\":531:541   */\n      dup3\n      add\n        /* \"#utility.yul\":502:642   */\n      jump(tag_162)\n    tag_164:\n        /* \"#utility.yul\":506:509   */\n      pop\n        /* \"#utility.yul\":691:692   */\n      0x00\n        /* \"#utility.yul\":686:688   */\n      0x40\n        /* \"#utility.yul\":677:683   */\n      dup3\n        /* \"#utility.yul\":666:675   */\n      dup7\n        /* \"#utility.yul\":662:684   */\n      add\n        /* \"#utility.yul\":658:689   */\n      add\n        /* \"#utility.yul\":651:693   */\n      mstore\n        /* \"#utility.yul\":761:763   */\n      0x40\n        /* \"#utility.yul\":754:756   */\n      0x1f\n        /* \"#utility.yul\":750:757   */\n      not\n        /* \"#utility.yul\":745:747   */\n      0x1f\n        /* \"#utility.yul\":737:743   */\n      dup4\n        /* \"#utility.yul\":733:748   */\n      add\n        /* \"#utility.yul\":729:758   */\n      and\n        /* \"#utility.yul\":718:727   */\n      dup6\n        /* \"#utility.yul\":714:759   */\n      add\n        /* \"#utility.yul\":710:764   */\n      add\n        /* \"#utility.yul\":702:764   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":222:770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":775:948   */\n    tag_157:\n        /* \"#utility.yul\":843:863   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":892:923   */\n      dup2\n      and\n        /* \"#utility.yul\":882:924   */\n      dup2\n      eq\n        /* \"#utility.yul\":872:942   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":938:939   */\n      0x00\n        /* \"#utility.yul\":935:936   */\n      dup1\n        /* \"#utility.yul\":928:940   */\n      revert\n        /* \"#utility.yul\":872:942   */\n    tag_166:\n        /* \"#utility.yul\":775:948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":953:1207   */\n    tag_31:\n        /* \"#utility.yul\":1021:1027   */\n      0x00\n        /* \"#utility.yul\":1029:1035   */\n      dup1\n        /* \"#utility.yul\":1082:1084   */\n      0x40\n        /* \"#utility.yul\":1070:1079   */\n      dup4\n        /* \"#utility.yul\":1061:1068   */\n      dup6\n        /* \"#utility.yul\":1057:1080   */\n      sub\n        /* \"#utility.yul\":1053:1085   */\n      slt\n        /* \"#utility.yul\":1050:1102   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":1098:1099   */\n      0x00\n        /* \"#utility.yul\":1095:1096   */\n      dup1\n        /* \"#utility.yul\":1088:1100   */\n      revert\n        /* \"#utility.yul\":1050:1102   */\n    tag_168:\n        /* \"#utility.yul\":1121:1150   */\n      tag_169\n        /* \"#utility.yul\":1140:1149   */\n      dup4\n        /* \"#utility.yul\":1121:1150   */\n      tag_157\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1111:1150   */\n      swap5\n        /* \"#utility.yul\":1197:1199   */\n      0x20\n        /* \"#utility.yul\":1182:1200   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1169:1201   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":953:1207   */\n      jump\t// out\n        /* \"#utility.yul\":1586:1914   */\n    tag_41:\n        /* \"#utility.yul\":1663:1669   */\n      0x00\n        /* \"#utility.yul\":1671:1677   */\n      dup1\n        /* \"#utility.yul\":1679:1685   */\n      0x00\n        /* \"#utility.yul\":1732:1734   */\n      0x60\n        /* \"#utility.yul\":1720:1729   */\n      dup5\n        /* \"#utility.yul\":1711:1718   */\n      dup7\n        /* \"#utility.yul\":1707:1730   */\n      sub\n        /* \"#utility.yul\":1703:1735   */\n      slt\n        /* \"#utility.yul\":1700:1752   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":1748:1749   */\n      0x00\n        /* \"#utility.yul\":1745:1746   */\n      dup1\n        /* \"#utility.yul\":1738:1750   */\n      revert\n        /* \"#utility.yul\":1700:1752   */\n    tag_173:\n        /* \"#utility.yul\":1771:1800   */\n      tag_174\n        /* \"#utility.yul\":1790:1799   */\n      dup5\n        /* \"#utility.yul\":1771:1800   */\n      tag_157\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1761:1800   */\n      swap3\n      pop\n        /* \"#utility.yul\":1819:1857   */\n      tag_175\n        /* \"#utility.yul\":1853:1855   */\n      0x20\n        /* \"#utility.yul\":1842:1851   */\n      dup6\n        /* \"#utility.yul\":1838:1856   */\n      add\n        /* \"#utility.yul\":1819:1857   */\n      tag_157\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":1809:1857   */\n      swap2\n      pop\n        /* \"#utility.yul\":1904:1906   */\n      0x40\n        /* \"#utility.yul\":1893:1902   */\n      dup5\n        /* \"#utility.yul\":1889:1907   */\n      add\n        /* \"#utility.yul\":1876:1908   */\n      calldataload\n        /* \"#utility.yul\":1866:1908   */\n      swap1\n      pop\n        /* \"#utility.yul\":1586:1914   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2108:2294   */\n    tag_55:\n        /* \"#utility.yul\":2167:2173   */\n      0x00\n        /* \"#utility.yul\":2220:2222   */\n      0x20\n        /* \"#utility.yul\":2208:2217   */\n      dup3\n        /* \"#utility.yul\":2199:2206   */\n      dup5\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_178:\n        /* \"#utility.yul\":2259:2288   */\n      tag_179\n        /* \"#utility.yul\":2278:2287   */\n      dup3\n        /* \"#utility.yul\":2259:2288   */\n      tag_157\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2249:2288   */\n      swap4\n        /* \"#utility.yul\":2108:2294   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2299:2559   */\n    tag_73:\n        /* \"#utility.yul\":2367:2373   */\n      0x00\n        /* \"#utility.yul\":2375:2381   */\n      dup1\n        /* \"#utility.yul\":2428:2430   */\n      0x40\n        /* \"#utility.yul\":2416:2425   */\n      dup4\n        /* \"#utility.yul\":2407:2414   */\n      dup6\n        /* \"#utility.yul\":2403:2426   */\n      sub\n        /* \"#utility.yul\":2399:2431   */\n      slt\n        /* \"#utility.yul\":2396:2448   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":2444:2445   */\n      0x00\n        /* \"#utility.yul\":2441:2442   */\n      dup1\n        /* \"#utility.yul\":2434:2446   */\n      revert\n        /* \"#utility.yul\":2396:2448   */\n    tag_181:\n        /* \"#utility.yul\":2467:2496   */\n      tag_182\n        /* \"#utility.yul\":2486:2495   */\n      dup4\n        /* \"#utility.yul\":2467:2496   */\n      tag_157\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2457:2496   */\n      swap2\n      pop\n        /* \"#utility.yul\":2515:2553   */\n      tag_183\n        /* \"#utility.yul\":2549:2551   */\n      0x20\n        /* \"#utility.yul\":2538:2547   */\n      dup5\n        /* \"#utility.yul\":2534:2552   */\n      add\n        /* \"#utility.yul\":2515:2553   */\n      tag_157\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2505:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2299:2559   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2564:2944   */\n    tag_81:\n        /* \"#utility.yul\":2643:2644   */\n      0x01\n        /* \"#utility.yul\":2639:2651   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2686:2698   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2707:2768   */\n      tag_185\n      jumpi\n        /* \"#utility.yul\":2761:2765   */\n      0x7f\n        /* \"#utility.yul\":2753:2759   */\n      dup3\n        /* \"#utility.yul\":2749:2766   */\n      and\n        /* \"#utility.yul\":2739:2766   */\n      swap2\n      pop\n        /* \"#utility.yul\":2707:2768   */\n    tag_185:\n        /* \"#utility.yul\":2814:2816   */\n      0x20\n        /* \"#utility.yul\":2806:2812   */\n      dup3\n        /* \"#utility.yul\":2803:2817   */\n      lt\n        /* \"#utility.yul\":2783:2801   */\n      dup2\n        /* \"#utility.yul\":2780:2818   */\n      sub\n        /* \"#utility.yul\":2777:2938   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":2860:2870   */\n      0x4e487b71\n        /* \"#utility.yul\":2855:2858   */\n      0xe0\n        /* \"#utility.yul\":2851:2871   */\n      shl\n        /* \"#utility.yul\":2848:2849   */\n      0x00\n        /* \"#utility.yul\":2841:2872   */\n      mstore\n        /* \"#utility.yul\":2895:2899   */\n      0x22\n        /* \"#utility.yul\":2892:2893   */\n      0x04\n        /* \"#utility.yul\":2885:2900   */\n      mstore\n        /* \"#utility.yul\":2923:2927   */\n      0x24\n        /* \"#utility.yul\":2920:2921   */\n      0x00\n        /* \"#utility.yul\":2913:2928   */\n      revert\n        /* \"#utility.yul\":2777:2938   */\n    tag_186:\n      pop\n        /* \"#utility.yul\":2564:2944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2949:3076   */\n    tag_158:\n        /* \"#utility.yul\":3010:3020   */\n      0x4e487b71\n        /* \"#utility.yul\":3005:3008   */\n      0xe0\n        /* \"#utility.yul\":3001:3021   */\n      shl\n        /* \"#utility.yul\":2998:2999   */\n      0x00\n        /* \"#utility.yul\":2991:3022   */\n      mstore\n        /* \"#utility.yul\":3041:3045   */\n      0x11\n        /* \"#utility.yul\":3038:3039   */\n      0x04\n        /* \"#utility.yul\":3031:3046   */\n      mstore\n        /* \"#utility.yul\":3065:3069   */\n      0x24\n        /* \"#utility.yul\":3062:3063   */\n      0x00\n        /* \"#utility.yul\":3055:3070   */\n      revert\n        /* \"#utility.yul\":3081:3326   */\n    tag_103:\n        /* \"#utility.yul\":3152:3158   */\n      0xffff\n        /* \"#utility.yul\":3190:3200   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":3202:3212   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":3186:3213   */\n      mul\n        /* \"#utility.yul\":3233:3253   */\n      dup1\n      dup3\n      and\n      swap2\n        /* \"#utility.yul\":3152:3158   */\n      swap1\n        /* \"#utility.yul\":3272:3296   */\n      dup3\n      dup2\n      eq\n        /* \"#utility.yul\":3262:3320   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":3300:3318   */\n      tag_190\n      tag_158\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3262:3320   */\n      pop\n      pop\n        /* \"#utility.yul\":3081:3326   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3681:3806   */\n    tag_150:\n        /* \"#utility.yul\":3746:3755   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3767:3777   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3764:3800   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":3780:3798   */\n      tag_86\n      tag_158\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220f80a2837375bcd8ceced36d5046a8d3b12012704fdd411655155109e5c65013364736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_853": {
									"entryPoint": null,
									"id": 853,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 434,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 500,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_893": {
									"entryPoint": null,
									"id": 893,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5275:6",
										"nodeType": "YulBlock",
										"src": "0:5275:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:6",
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:6",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:6",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:6",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nativeSrc": "66:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nativeSrc": "56:31:6",
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nativeSrc": "56:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:6",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:6",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nativeSrc": "96:15:6",
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nativeSrc": "96:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:6",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:6",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nativeSrc": "120:15:6",
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nativeSrc": "120:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nativeSrc": "201:325:6",
													"nodeType": "YulBlock",
													"src": "201:325:6",
													"statements": [
														{
															"nativeSrc": "211:22:6",
															"nodeType": "YulAssignment",
															"src": "211:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:6",
																		"nodeType": "YulLiteral",
																		"src": "225:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:6"
																},
																"nativeSrc": "221:12:6",
																"nodeType": "YulFunctionCall",
																"src": "221:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:6"
																}
															]
														},
														{
															"nativeSrc": "242:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:6",
																		"nodeType": "YulLiteral",
																		"src": "278:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:6"
																},
																"nativeSrc": "268:12:6",
																"nodeType": "YulFunctionCall",
																"src": "268:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:6",
																	"nodeType": "YulTypedName",
																	"src": "246:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:6",
																"nodeType": "YulBlock",
																"src": "319:31:6",
																"statements": [
																	{
																		"nativeSrc": "321:27:6",
																		"nodeType": "YulAssignment",
																		"src": "321:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:6",
																					"nodeType": "YulLiteral",
																					"src": "343:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:6"
																			},
																			"nativeSrc": "331:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:6"
																},
																"nativeSrc": "292:26:6",
																"nodeType": "YulFunctionCall",
																"src": "292:26:6"
															},
															"nativeSrc": "289:61:6",
															"nodeType": "YulIf",
															"src": "289:61:6"
														},
														{
															"body": {
																"nativeSrc": "409:111:6",
																"nodeType": "YulBlock",
																"src": "409:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:6",
																					"nodeType": "YulLiteral",
																					"src": "430:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:6",
																							"nodeType": "YulLiteral",
																							"src": "437:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:6",
																							"nodeType": "YulLiteral",
																							"src": "442:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:6"
																					},
																					"nativeSrc": "433:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:6"
																			},
																			"nativeSrc": "423:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:6"
																		},
																		"nativeSrc": "423:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:6",
																					"nodeType": "YulLiteral",
																					"src": "474:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:6",
																					"nodeType": "YulLiteral",
																					"src": "477:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:6"
																			},
																			"nativeSrc": "467:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:6"
																		},
																		"nativeSrc": "467:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:6",
																					"nodeType": "YulLiteral",
																					"src": "502:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:6",
																					"nodeType": "YulLiteral",
																					"src": "505:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:6"
																			},
																			"nativeSrc": "495:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:6"
																		},
																		"nativeSrc": "495:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:6",
																				"nodeType": "YulLiteral",
																				"src": "396:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:6"
																		},
																		"nativeSrc": "385:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:6"
																},
																"nativeSrc": "362:38:6",
																"nodeType": "YulFunctionCall",
																"src": "362:38:6"
															},
															"nativeSrc": "359:161:6",
															"nodeType": "YulIf",
															"src": "359:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:6",
														"nodeType": "YulTypedName",
														"src": "181:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:6",
														"nodeType": "YulTypedName",
														"src": "190:6:6",
														"type": ""
													}
												],
												"src": "146:380:6"
											},
											{
												"body": {
													"nativeSrc": "587:65:6",
													"nodeType": "YulBlock",
													"src": "587:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:6",
																		"nodeType": "YulLiteral",
																		"src": "604:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:6"
																},
																"nativeSrc": "597:14:6",
																"nodeType": "YulFunctionCall",
																"src": "597:14:6"
															},
															"nativeSrc": "597:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:6"
														},
														{
															"nativeSrc": "620:26:6",
															"nodeType": "YulAssignment",
															"src": "620:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:6",
																		"nodeType": "YulLiteral",
																		"src": "638:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:6",
																		"nodeType": "YulLiteral",
																		"src": "641:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:6"
																},
																"nativeSrc": "628:18:6",
																"nodeType": "YulFunctionCall",
																"src": "628:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:6",
														"nodeType": "YulTypedName",
														"src": "570:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:6",
														"nodeType": "YulTypedName",
														"src": "578:4:6",
														"type": ""
													}
												],
												"src": "531:121:6"
											},
											{
												"body": {
													"nativeSrc": "738:462:6",
													"nodeType": "YulBlock",
													"src": "738:462:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:423:6",
																"nodeType": "YulBlock",
																"src": "771:423:6",
																"statements": [
																	{
																		"nativeSrc": "785:11:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "795:1:6",
																			"nodeType": "YulLiteral",
																			"src": "795:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "789:2:6",
																				"nodeType": "YulTypedName",
																				"src": "789:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "816:1:6",
																					"nodeType": "YulLiteral",
																					"src": "816:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "819:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "819:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "809:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:6"
																			},
																			"nativeSrc": "809:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "809:16:6"
																		},
																		"nativeSrc": "809:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "809:16:6"
																	},
																	{
																		"nativeSrc": "838:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "838:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "860:1:6",
																					"nodeType": "YulLiteral",
																					"src": "860:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "863:4:6",
																					"nodeType": "YulLiteral",
																					"src": "863:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "850:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "850:9:6"
																			},
																			"nativeSrc": "850:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "850:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "842:4:6",
																				"nodeType": "YulTypedName",
																				"src": "842:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "881:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "881:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "904:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "904:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "914:1:6",
																							"nodeType": "YulLiteral",
																							"src": "914:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "921:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "921:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "933:2:6",
																									"nodeType": "YulLiteral",
																									"src": "933:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "917:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "917:3:6"
																							},
																							"nativeSrc": "917:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "917:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "910:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "910:3:6"
																					},
																					"nativeSrc": "910:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "910:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "900:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "900:3:6"
																			},
																			"nativeSrc": "900:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "900:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "885:11:6",
																				"nodeType": "YulTypedName",
																				"src": "885:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "975:23:6",
																			"nodeType": "YulBlock",
																			"src": "975:23:6",
																			"statements": [
																				{
																					"nativeSrc": "977:19:6",
																					"nodeType": "YulAssignment",
																					"src": "977:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "992:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "992:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "977:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "977:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "957:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "957:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "969:4:6",
																					"nodeType": "YulLiteral",
																					"src": "969:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "954:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "954:2:6"
																			},
																			"nativeSrc": "954:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "954:20:6"
																		},
																		"nativeSrc": "951:47:6",
																		"nodeType": "YulIf",
																		"src": "951:47:6"
																	},
																	{
																		"nativeSrc": "1011:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1011:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1025:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1025:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1035:1:6",
																							"nodeType": "YulLiteral",
																							"src": "1035:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1042:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1042:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1047:2:6",
																									"nodeType": "YulLiteral",
																									"src": "1047:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1038:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1038:3:6"
																							},
																							"nativeSrc": "1038:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1038:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1031:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1031:3:6"
																					},
																					"nativeSrc": "1031:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1031:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1021:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1021:3:6"
																			},
																			"nativeSrc": "1021:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1021:31:6"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "1015:2:6",
																				"nodeType": "YulTypedName",
																				"src": "1015:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1065:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1065:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1078:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "1078:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1069:5:6",
																				"nodeType": "YulTypedName",
																				"src": "1069:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1163:21:6",
																			"nodeType": "YulBlock",
																			"src": "1163:21:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1172:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1172:5:6"
																							},
																							{
																								"name": "_1",
																								"nativeSrc": "1179:2:6",
																								"nodeType": "YulIdentifier",
																								"src": "1179:2:6"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1165:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "1165:6:6"
																						},
																						"nativeSrc": "1165:17:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1165:17:6"
																					},
																					"nativeSrc": "1165:17:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "1165:17:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1113:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1113:5:6"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "1120:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1120:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1110:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1110:2:6"
																			},
																			"nativeSrc": "1110:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1110:13:6"
																		},
																		"nativeSrc": "1102:82:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1124:26:6",
																			"nodeType": "YulBlock",
																			"src": "1124:26:6",
																			"statements": [
																				{
																					"nativeSrc": "1126:22:6",
																					"nodeType": "YulAssignment",
																					"src": "1126:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1139:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1139:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1146:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1146:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1135:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1135:3:6"
																						},
																						"nativeSrc": "1135:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1135:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1126:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "1126:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1106:3:6",
																			"nodeType": "YulBlock",
																			"src": "1106:3:6",
																			"statements": []
																		},
																		"src": "1102:82:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:6",
																		"nodeType": "YulLiteral",
																		"src": "759:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:6"
																},
																"nativeSrc": "751:11:6",
																"nodeType": "YulFunctionCall",
																"src": "751:11:6"
															},
															"nativeSrc": "748:446:6",
															"nodeType": "YulIf",
															"src": "748:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:6",
														"nodeType": "YulTypedName",
														"src": "710:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:6",
														"nodeType": "YulTypedName",
														"src": "717:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:6",
														"nodeType": "YulTypedName",
														"src": "722:10:6",
														"type": ""
													}
												],
												"src": "657:543:6"
											},
											{
												"body": {
													"nativeSrc": "1290:81:6",
													"nodeType": "YulBlock",
													"src": "1290:81:6",
													"statements": [
														{
															"nativeSrc": "1300:65:6",
															"nodeType": "YulAssignment",
															"src": "1300:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1315:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1315:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1333:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1333:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1336:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "1336:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1329:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1329:3:6"
																								},
																								"nativeSrc": "1329:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1329:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1346:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1346:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1342:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1342:3:6"
																								},
																								"nativeSrc": "1342:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1342:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1325:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1325:3:6"
																						},
																						"nativeSrc": "1325:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1325:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1321:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1321:3:6"
																				},
																				"nativeSrc": "1321:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1321:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1311:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:6"
																		},
																		"nativeSrc": "1311:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1311:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1357:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1357:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1360:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1360:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1353:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1353:3:6"
																		},
																		"nativeSrc": "1353:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1353:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1308:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1308:2:6"
																},
																"nativeSrc": "1308:57:6",
																"nodeType": "YulFunctionCall",
																"src": "1308:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1300:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1300:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1205:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1267:4:6",
														"nodeType": "YulTypedName",
														"src": "1267:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1273:3:6",
														"nodeType": "YulTypedName",
														"src": "1273:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1281:4:6",
														"nodeType": "YulTypedName",
														"src": "1281:4:6",
														"type": ""
													}
												],
												"src": "1205:166:6"
											},
											{
												"body": {
													"nativeSrc": "1472:1249:6",
													"nodeType": "YulBlock",
													"src": "1472:1249:6",
													"statements": [
														{
															"nativeSrc": "1482:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1482:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1502:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1502:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1496:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1496:5:6"
																},
																"nativeSrc": "1496:10:6",
																"nodeType": "YulFunctionCall",
																"src": "1496:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1486:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1486:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1549:22:6",
																"nodeType": "YulBlock",
																"src": "1549:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1551:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1551:16:6"
																			},
																			"nativeSrc": "1551:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1551:18:6"
																		},
																		"nativeSrc": "1551:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1551:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1521:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1521:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1537:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1537:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1541:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1541:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1533:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1533:3:6"
																				},
																				"nativeSrc": "1533:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1533:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1545:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1545:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1529:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:6"
																		},
																		"nativeSrc": "1529:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1529:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1518:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1518:2:6"
																},
																"nativeSrc": "1518:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1518:30:6"
															},
															"nativeSrc": "1515:56:6",
															"nodeType": "YulIf",
															"src": "1515:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1624:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1624:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1662:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "1662:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1656:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1656:5:6"
																				},
																				"nativeSrc": "1656:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1656:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1630:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "1630:25:6"
																		},
																		"nativeSrc": "1630:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1670:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1580:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1580:43:6"
																},
																"nativeSrc": "1580:97:6",
																"nodeType": "YulFunctionCall",
																"src": "1580:97:6"
															},
															"nativeSrc": "1580:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "1580:97:6"
														},
														{
															"nativeSrc": "1686:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1686:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1703:1:6",
																"nodeType": "YulLiteral",
																"src": "1703:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1690:9:6",
																	"nodeType": "YulTypedName",
																	"src": "1690:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1713:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1713:23:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1732:4:6",
																"nodeType": "YulLiteral",
																"src": "1732:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1717:11:6",
																	"nodeType": "YulTypedName",
																	"src": "1717:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1745:17:6",
															"nodeType": "YulAssignment",
															"src": "1745:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1758:4:6",
																"nodeType": "YulLiteral",
																"src": "1758:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1745:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1745:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1808:656:6",
																		"nodeType": "YulBlock",
																		"src": "1808:656:6",
																		"statements": [
																			{
																				"nativeSrc": "1822:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1822:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1841:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "1841:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1853:2:6",
																									"nodeType": "YulLiteral",
																									"src": "1853:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1849:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1849:3:6"
																							},
																							"nativeSrc": "1849:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1849:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1837:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1837:3:6"
																					},
																					"nativeSrc": "1837:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1837:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1826:7:6",
																						"nodeType": "YulTypedName",
																						"src": "1826:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1870:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1870:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1914:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "1914:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1884:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "1884:29:6"
																					},
																					"nativeSrc": "1884:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1884:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1874:6:6",
																						"nodeType": "YulTypedName",
																						"src": "1874:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1932:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1932:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1941:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1941:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1936:1:6",
																						"nodeType": "YulTypedName",
																						"src": "1936:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2019:172:6",
																					"nodeType": "YulBlock",
																					"src": "2019:172:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2044:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2044:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2062:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "2062:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2067:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "2067:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2058:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "2058:3:6"
																												},
																												"nativeSrc": "2058:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "2058:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2052:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "2052:5:6"
																										},
																										"nativeSrc": "2052:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2052:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2037:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2037:6:6"
																								},
																								"nativeSrc": "2037:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2037:42:6"
																							},
																							"nativeSrc": "2037:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "2037:42:6"
																						},
																						{
																							"nativeSrc": "2096:24:6",
																							"nodeType": "YulAssignment",
																							"src": "2096:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2110:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2110:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2118:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2118:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2106:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2106:3:6"
																								},
																								"nativeSrc": "2106:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2106:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2096:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2096:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2137:40:6",
																							"nodeType": "YulAssignment",
																							"src": "2137:40:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2154:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "2154:9:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2165:11:6",
																										"nodeType": "YulIdentifier",
																										"src": "2165:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2150:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2150:3:6"
																								},
																								"nativeSrc": "2150:27:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2150:27:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2137:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "2137:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1966:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "1966:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1969:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "1969:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1963:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "1963:2:6"
																					},
																					"nativeSrc": "1963:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1963:14:6"
																				},
																				"nativeSrc": "1955:236:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1978:28:6",
																					"nodeType": "YulBlock",
																					"src": "1978:28:6",
																					"statements": [
																						{
																							"nativeSrc": "1980:24:6",
																							"nodeType": "YulAssignment",
																							"src": "1980:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1989:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "1989:1:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "1992:11:6",
																										"nodeType": "YulIdentifier",
																										"src": "1992:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1985:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1985:3:6"
																								},
																								"nativeSrc": "1985:19:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1985:19:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1980:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "1980:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1959:3:6",
																					"nodeType": "YulBlock",
																					"src": "1959:3:6",
																					"statements": []
																				},
																				"src": "1955:236:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "2239:166:6",
																					"nodeType": "YulBlock",
																					"src": "2239:166:6",
																					"statements": [
																						{
																							"nativeSrc": "2257:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2257:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2284:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "2284:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2289:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2289:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2280:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2280:3:6"
																										},
																										"nativeSrc": "2280:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2280:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2274:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2274:5:6"
																								},
																								"nativeSrc": "2274:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2274:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2261:9:6",
																									"nodeType": "YulTypedName",
																									"src": "2261:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2324:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2324:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2336:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2336:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2363:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "2363:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2366:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "2366:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2359:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "2359:3:6"
																																		},
																																		"nativeSrc": "2359:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2359:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2375:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "2375:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2355:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "2355:3:6"
																																},
																																"nativeSrc": "2355:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "2355:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2385:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "2385:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2381:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "2381:3:6"
																																},
																																"nativeSrc": "2381:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "2381:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2351:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "2351:3:6"
																														},
																														"nativeSrc": "2351:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "2351:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2347:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "2347:3:6"
																												},
																												"nativeSrc": "2347:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "2347:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2332:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2332:3:6"
																										},
																										"nativeSrc": "2332:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2332:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2317:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2317:6:6"
																								},
																								"nativeSrc": "2317:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2317:74:6"
																							},
																							"nativeSrc": "2317:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "2317:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2210:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "2210:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2219:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2219:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2207:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "2207:2:6"
																					},
																					"nativeSrc": "2207:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2207:19:6"
																				},
																				"nativeSrc": "2204:201:6",
																				"nodeType": "YulIf",
																				"src": "2204:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2425:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2425:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2439:1:6",
																											"nodeType": "YulLiteral",
																											"src": "2439:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2442:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "2442:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2435:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "2435:3:6"
																									},
																									"nativeSrc": "2435:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "2435:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2451:1:6",
																									"nodeType": "YulLiteral",
																									"src": "2451:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2431:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2431:3:6"
																							},
																							"nativeSrc": "2431:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2431:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2418:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2418:6:6"
																					},
																					"nativeSrc": "2418:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2418:36:6"
																				},
																				"nativeSrc": "2418:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2418:36:6"
																			}
																		]
																	},
																	"nativeSrc": "1801:663:6",
																	"nodeType": "YulCase",
																	"src": "1801:663:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1806:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1806:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2481:234:6",
																		"nodeType": "YulBlock",
																		"src": "2481:234:6",
																		"statements": [
																			{
																				"nativeSrc": "2495:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2495:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2508:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2508:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2499:5:6",
																						"nodeType": "YulTypedName",
																						"src": "2499:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2544:67:6",
																					"nodeType": "YulBlock",
																					"src": "2544:67:6",
																					"statements": [
																						{
																							"nativeSrc": "2562:35:6",
																							"nodeType": "YulAssignment",
																							"src": "2562:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2581:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "2581:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2586:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2586:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2577:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2577:3:6"
																										},
																										"nativeSrc": "2577:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2577:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2571:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:6"
																								},
																								"nativeSrc": "2571:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2571:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2562:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2562:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2525:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2525:6:6"
																				},
																				"nativeSrc": "2522:89:6",
																				"nodeType": "YulIf",
																				"src": "2522:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2631:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2631:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2690:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2690:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2697:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2697:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2637:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "2637:52:6"
																							},
																							"nativeSrc": "2637:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2637:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2624:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2624:6:6"
																					},
																					"nativeSrc": "2624:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2624:81:6"
																				},
																				"nativeSrc": "2624:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2624:81:6"
																			}
																		]
																	},
																	"nativeSrc": "2473:242:6",
																	"nodeType": "YulCase",
																	"src": "2473:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1781:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1781:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1789:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1789:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1778:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1778:2:6"
																},
																"nativeSrc": "1778:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1778:14:6"
															},
															"nativeSrc": "1771:944:6",
															"nodeType": "YulSwitch",
															"src": "1771:944:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1376:1345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1457:4:6",
														"nodeType": "YulTypedName",
														"src": "1457:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1463:3:6",
														"nodeType": "YulTypedName",
														"src": "1463:3:6",
														"type": ""
													}
												],
												"src": "1376:1345:6"
											},
											{
												"body": {
													"nativeSrc": "2758:95:6",
													"nodeType": "YulBlock",
													"src": "2758:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2775:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2775:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2782:3:6",
																				"nodeType": "YulLiteral",
																				"src": "2782:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2787:10:6",
																				"nodeType": "YulLiteral",
																				"src": "2787:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2778:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2778:3:6"
																		},
																		"nativeSrc": "2778:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2778:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2768:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2768:6:6"
																},
																"nativeSrc": "2768:31:6",
																"nodeType": "YulFunctionCall",
																"src": "2768:31:6"
															},
															"nativeSrc": "2768:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "2768:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2815:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2815:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2818:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2818:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2808:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2808:6:6"
																},
																"nativeSrc": "2808:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2808:15:6"
															},
															"nativeSrc": "2808:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2808:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2842:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2842:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2832:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2832:6:6"
																},
																"nativeSrc": "2832:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2832:15:6"
															},
															"nativeSrc": "2832:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2832:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2726:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2726:127:6"
											},
											{
												"body": {
													"nativeSrc": "2922:352:6",
													"nodeType": "YulBlock",
													"src": "2922:352:6",
													"statements": [
														{
															"nativeSrc": "2932:16:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2932:16:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2947:1:6",
																"nodeType": "YulLiteral",
																"src": "2947:1:6",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "2936:7:6",
																	"nodeType": "YulTypedName",
																	"src": "2936:7:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2957:10:6",
															"nodeType": "YulAssignment",
															"src": "2957:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2966:1:6",
																"nodeType": "YulLiteral",
																"src": "2966:1:6",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2957:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2957:5:6"
																}
															]
														},
														{
															"nativeSrc": "2976:13:6",
															"nodeType": "YulAssignment",
															"src": "2976:13:6",
															"value": {
																"name": "_base",
																"nativeSrc": "2984:5:6",
																"nodeType": "YulIdentifier",
																"src": "2984:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "2976:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2976:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3040:228:6",
																"nodeType": "YulBlock",
																"src": "3040:228:6",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "3085:22:6",
																			"nodeType": "YulBlock",
																			"src": "3085:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "3087:16:6",
																							"nodeType": "YulIdentifier",
																							"src": "3087:16:6"
																						},
																						"nativeSrc": "3087:18:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3087:18:6"
																					},
																					"nativeSrc": "3087:18:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "3087:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3060:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "3060:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3074:1:6",
																									"nodeType": "YulLiteral",
																									"src": "3074:1:6",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3070:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "3070:3:6"
																							},
																							"nativeSrc": "3070:6:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3070:6:6"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "3078:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3078:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "3066:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3066:3:6"
																					},
																					"nativeSrc": "3066:17:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3066:17:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "3057:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "3057:2:6"
																			},
																			"nativeSrc": "3057:27:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3057:27:6"
																		},
																		"nativeSrc": "3054:53:6",
																		"nodeType": "YulIf",
																		"src": "3054:53:6"
																	},
																	{
																		"body": {
																			"nativeSrc": "3146:29:6",
																			"nodeType": "YulBlock",
																			"src": "3146:29:6",
																			"statements": [
																				{
																					"nativeSrc": "3148:25:6",
																					"nodeType": "YulAssignment",
																					"src": "3148:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3161:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "3161:5:6"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3168:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "3168:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3157:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3157:3:6"
																						},
																						"nativeSrc": "3157:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3157:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3148:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "3148:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3127:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "3127:8:6"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "3137:7:6",
																					"nodeType": "YulIdentifier",
																					"src": "3137:7:6"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3123:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3123:3:6"
																			},
																			"nativeSrc": "3123:22:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3123:22:6"
																		},
																		"nativeSrc": "3120:55:6",
																		"nodeType": "YulIf",
																		"src": "3120:55:6"
																	},
																	{
																		"nativeSrc": "3188:23:6",
																		"nodeType": "YulAssignment",
																		"src": "3188:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3200:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "3200:4:6"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3206:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "3206:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3196:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3196:3:6"
																			},
																			"nativeSrc": "3196:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3196:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3188:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3188:4:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3224:34:6",
																		"nodeType": "YulAssignment",
																		"src": "3224:34:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "3240:7:6",
																					"nodeType": "YulIdentifier",
																					"src": "3240:7:6"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3249:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "3249:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "3236:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3236:3:6"
																			},
																			"nativeSrc": "3236:22:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3236:22:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3224:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "3224:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3009:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3009:8:6"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "3019:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "3019:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3006:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3006:2:6"
																},
																"nativeSrc": "3006:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3006:21:6"
															},
															"nativeSrc": "2998:270:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3028:3:6",
																"nodeType": "YulBlock",
																"src": "3028:3:6",
																"statements": []
															},
															"pre": {
																"nativeSrc": "3002:3:6",
																"nodeType": "YulBlock",
																"src": "3002:3:6",
																"statements": []
															},
															"src": "2998:270:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "2858:416:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "2886:5:6",
														"nodeType": "YulTypedName",
														"src": "2886:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2893:8:6",
														"nodeType": "YulTypedName",
														"src": "2893:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2906:5:6",
														"nodeType": "YulTypedName",
														"src": "2906:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "2913:4:6",
														"nodeType": "YulTypedName",
														"src": "2913:4:6",
														"type": ""
													}
												],
												"src": "2858:416:6"
											},
											{
												"body": {
													"nativeSrc": "3338:747:6",
													"nodeType": "YulBlock",
													"src": "3338:747:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3376:52:6",
																"nodeType": "YulBlock",
																"src": "3376:52:6",
																"statements": [
																	{
																		"nativeSrc": "3390:10:6",
																		"nodeType": "YulAssignment",
																		"src": "3390:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3399:1:6",
																			"nodeType": "YulLiteral",
																			"src": "3399:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3390:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3390:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3413:5:6",
																		"nodeType": "YulLeave",
																		"src": "3413:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3358:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3358:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3351:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3351:6:6"
																},
																"nativeSrc": "3351:16:6",
																"nodeType": "YulFunctionCall",
																"src": "3351:16:6"
															},
															"nativeSrc": "3348:80:6",
															"nodeType": "YulIf",
															"src": "3348:80:6"
														},
														{
															"body": {
																"nativeSrc": "3461:52:6",
																"nodeType": "YulBlock",
																"src": "3461:52:6",
																"statements": [
																	{
																		"nativeSrc": "3475:10:6",
																		"nodeType": "YulAssignment",
																		"src": "3475:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3484:1:6",
																			"nodeType": "YulLiteral",
																			"src": "3484:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3475:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3475:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3498:5:6",
																		"nodeType": "YulLeave",
																		"src": "3498:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3447:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3447:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3440:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3440:6:6"
																},
																"nativeSrc": "3440:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3440:12:6"
															},
															"nativeSrc": "3437:76:6",
															"nodeType": "YulIf",
															"src": "3437:76:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3549:52:6",
																		"nodeType": "YulBlock",
																		"src": "3549:52:6",
																		"statements": [
																			{
																				"nativeSrc": "3563:10:6",
																				"nodeType": "YulAssignment",
																				"src": "3563:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3572:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3572:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3563:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3563:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3586:5:6",
																				"nodeType": "YulLeave",
																				"src": "3586:5:6"
																			}
																		]
																	},
																	"nativeSrc": "3542:59:6",
																	"nodeType": "YulCase",
																	"src": "3542:59:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3547:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3547:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3617:123:6",
																		"nodeType": "YulBlock",
																		"src": "3617:123:6",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "3652:22:6",
																					"nodeType": "YulBlock",
																					"src": "3652:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "3654:16:6",
																									"nodeType": "YulIdentifier",
																									"src": "3654:16:6"
																								},
																								"nativeSrc": "3654:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3654:18:6"
																							},
																							"nativeSrc": "3654:18:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "3654:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3637:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "3637:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3647:3:6",
																							"nodeType": "YulLiteral",
																							"src": "3647:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "3634:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "3634:2:6"
																					},
																					"nativeSrc": "3634:17:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3634:17:6"
																				},
																				"nativeSrc": "3631:43:6",
																				"nodeType": "YulIf",
																				"src": "3631:43:6"
																			},
																			{
																				"nativeSrc": "3687:25:6",
																				"nodeType": "YulAssignment",
																				"src": "3687:25:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3700:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "3700:8:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3710:1:6",
																							"nodeType": "YulLiteral",
																							"src": "3710:1:6",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3696:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3696:3:6"
																					},
																					"nativeSrc": "3696:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3696:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3687:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3687:5:6"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3725:5:6",
																				"nodeType": "YulLeave",
																				"src": "3725:5:6"
																			}
																		]
																	},
																	"nativeSrc": "3610:130:6",
																	"nodeType": "YulCase",
																	"src": "3610:130:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3615:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3615:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "3529:4:6",
																"nodeType": "YulIdentifier",
																"src": "3529:4:6"
															},
															"nativeSrc": "3522:218:6",
															"nodeType": "YulSwitch",
															"src": "3522:218:6"
														},
														{
															"body": {
																"nativeSrc": "3838:70:6",
																"nodeType": "YulBlock",
																"src": "3838:70:6",
																"statements": [
																	{
																		"nativeSrc": "3852:28:6",
																		"nodeType": "YulAssignment",
																		"src": "3852:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3865:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "3865:4:6"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3871:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "3871:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "3861:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3861:3:6"
																			},
																			"nativeSrc": "3861:19:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3861:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3852:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3852:5:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3893:5:6",
																		"nodeType": "YulLeave",
																		"src": "3893:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3762:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3762:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3768:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3768:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3759:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "3759:2:6"
																				},
																				"nativeSrc": "3759:12:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3759:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3776:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "3776:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3786:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3786:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3773:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "3773:2:6"
																				},
																				"nativeSrc": "3773:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3773:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3755:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3755:3:6"
																		},
																		"nativeSrc": "3755:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3755:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3799:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3799:4:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3805:3:6",
																						"nodeType": "YulLiteral",
																						"src": "3805:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3796:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "3796:2:6"
																				},
																				"nativeSrc": "3796:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3796:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3814:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "3814:8:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3824:2:6",
																						"nodeType": "YulLiteral",
																						"src": "3824:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3811:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "3811:2:6"
																				},
																				"nativeSrc": "3811:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3811:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3792:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3792:3:6"
																		},
																		"nativeSrc": "3792:36:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3792:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3752:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3752:2:6"
																},
																"nativeSrc": "3752:77:6",
																"nodeType": "YulFunctionCall",
																"src": "3752:77:6"
															},
															"nativeSrc": "3749:159:6",
															"nodeType": "YulIf",
															"src": "3749:159:6"
														},
														{
															"nativeSrc": "3917:57:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3917:57:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3959:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3959:4:6"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "3965:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3965:8:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "3940:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3940:18:6"
																},
																"nativeSrc": "3940:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3940:34:6"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "3921:7:6",
																	"nodeType": "YulTypedName",
																	"src": "3921:7:6",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "3930:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3930:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4019:22:6",
																"nodeType": "YulBlock",
																"src": "4019:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4021:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4021:16:6"
																			},
																			"nativeSrc": "4021:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4021:18:6"
																		},
																		"nativeSrc": "4021:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4021:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "3989:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "3989:7:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4006:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4006:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4002:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:6"
																				},
																				"nativeSrc": "4002:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4002:6:6"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "4010:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3998:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:6"
																		},
																		"nativeSrc": "3998:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3998:19:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3986:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3986:2:6"
																},
																"nativeSrc": "3986:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3986:32:6"
															},
															"nativeSrc": "3983:58:6",
															"nodeType": "YulIf",
															"src": "3983:58:6"
														},
														{
															"nativeSrc": "4050:29:6",
															"nodeType": "YulAssignment",
															"src": "4050:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4063:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "4063:7:6"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "4072:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4072:6:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4059:3:6"
																},
																"nativeSrc": "4059:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4059:20:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4050:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4050:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "3279:806:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3309:4:6",
														"nodeType": "YulTypedName",
														"src": "3309:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3315:8:6",
														"nodeType": "YulTypedName",
														"src": "3315:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3328:5:6",
														"nodeType": "YulTypedName",
														"src": "3328:5:6",
														"type": ""
													}
												],
												"src": "3279:806:6"
											},
											{
												"body": {
													"nativeSrc": "4158:72:6",
													"nodeType": "YulBlock",
													"src": "4158:72:6",
													"statements": [
														{
															"nativeSrc": "4168:56:6",
															"nodeType": "YulAssignment",
															"src": "4168:56:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4198:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4198:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4208:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "4208:8:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4218:4:6",
																				"nodeType": "YulLiteral",
																				"src": "4218:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4204:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4204:3:6"
																		},
																		"nativeSrc": "4204:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4204:19:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4177:20:6",
																	"nodeType": "YulIdentifier",
																	"src": "4177:20:6"
																},
																"nativeSrc": "4177:47:6",
																"nodeType": "YulFunctionCall",
																"src": "4177:47:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4168:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4168:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "4090:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4129:4:6",
														"nodeType": "YulTypedName",
														"src": "4129:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4135:8:6",
														"nodeType": "YulTypedName",
														"src": "4135:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4148:5:6",
														"nodeType": "YulTypedName",
														"src": "4148:5:6",
														"type": ""
													}
												],
												"src": "4090:140:6"
											},
											{
												"body": {
													"nativeSrc": "4287:116:6",
													"nodeType": "YulBlock",
													"src": "4287:116:6",
													"statements": [
														{
															"nativeSrc": "4297:20:6",
															"nodeType": "YulAssignment",
															"src": "4297:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4312:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4312:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4315:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4315:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4308:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4308:3:6"
																},
																"nativeSrc": "4308:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4308:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4297:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4297:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4375:22:6",
																"nodeType": "YulBlock",
																"src": "4375:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4377:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4377:16:6"
																			},
																			"nativeSrc": "4377:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4377:18:6"
																		},
																		"nativeSrc": "4377:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4377:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4346:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "4346:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4339:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4339:6:6"
																				},
																				"nativeSrc": "4339:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4339:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4353:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "4353:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4360:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "4360:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4369:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "4369:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4356:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4356:3:6"
																						},
																						"nativeSrc": "4356:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4356:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4350:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "4350:2:6"
																				},
																				"nativeSrc": "4350:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4350:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4336:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4336:2:6"
																		},
																		"nativeSrc": "4336:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4336:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4329:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4329:6:6"
																},
																"nativeSrc": "4329:45:6",
																"nodeType": "YulFunctionCall",
																"src": "4329:45:6"
															},
															"nativeSrc": "4326:71:6",
															"nodeType": "YulIf",
															"src": "4326:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4235:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4266:1:6",
														"nodeType": "YulTypedName",
														"src": "4266:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4269:1:6",
														"nodeType": "YulTypedName",
														"src": "4269:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4275:7:6",
														"nodeType": "YulTypedName",
														"src": "4275:7:6",
														"type": ""
													}
												],
												"src": "4235:168:6"
											},
											{
												"body": {
													"nativeSrc": "4509:102:6",
													"nodeType": "YulBlock",
													"src": "4509:102:6",
													"statements": [
														{
															"nativeSrc": "4519:26:6",
															"nodeType": "YulAssignment",
															"src": "4519:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4531:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4531:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4542:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4542:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4527:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4527:3:6"
																},
																"nativeSrc": "4527:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4527:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4519:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4519:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4561:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4561:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4576:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4576:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4592:3:6",
																								"nodeType": "YulLiteral",
																								"src": "4592:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4597:1:6",
																								"nodeType": "YulLiteral",
																								"src": "4597:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4588:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4588:3:6"
																						},
																						"nativeSrc": "4588:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4588:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4601:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4601:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4584:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4584:3:6"
																				},
																				"nativeSrc": "4584:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4584:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4572:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4572:3:6"
																		},
																		"nativeSrc": "4572:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4572:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4554:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4554:6:6"
																},
																"nativeSrc": "4554:51:6",
																"nodeType": "YulFunctionCall",
																"src": "4554:51:6"
															},
															"nativeSrc": "4554:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "4554:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4408:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4478:9:6",
														"nodeType": "YulTypedName",
														"src": "4478:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4489:6:6",
														"nodeType": "YulTypedName",
														"src": "4489:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4500:4:6",
														"nodeType": "YulTypedName",
														"src": "4500:4:6",
														"type": ""
													}
												],
												"src": "4408:203:6"
											},
											{
												"body": {
													"nativeSrc": "4664:77:6",
													"nodeType": "YulBlock",
													"src": "4664:77:6",
													"statements": [
														{
															"nativeSrc": "4674:16:6",
															"nodeType": "YulAssignment",
															"src": "4674:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4685:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4685:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4688:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4688:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4681:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:6"
																},
																"nativeSrc": "4681:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4681:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4674:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4674:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4713:22:6",
																"nodeType": "YulBlock",
																"src": "4713:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4715:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4715:16:6"
																			},
																			"nativeSrc": "4715:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4715:18:6"
																		},
																		"nativeSrc": "4715:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4715:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4705:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4705:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4708:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4708:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4702:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4702:2:6"
																},
																"nativeSrc": "4702:10:6",
																"nodeType": "YulFunctionCall",
																"src": "4702:10:6"
															},
															"nativeSrc": "4699:36:6",
															"nodeType": "YulIf",
															"src": "4699:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4616:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4647:1:6",
														"nodeType": "YulTypedName",
														"src": "4647:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4650:1:6",
														"nodeType": "YulTypedName",
														"src": "4650:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4656:3:6",
														"nodeType": "YulTypedName",
														"src": "4656:3:6",
														"type": ""
													}
												],
												"src": "4616:125:6"
											},
											{
												"body": {
													"nativeSrc": "4903:188:6",
													"nodeType": "YulBlock",
													"src": "4903:188:6",
													"statements": [
														{
															"nativeSrc": "4913:26:6",
															"nodeType": "YulAssignment",
															"src": "4913:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4925:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4925:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4936:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4936:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4921:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4921:3:6"
																},
																"nativeSrc": "4921:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4921:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4913:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4913:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4955:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4955:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4970:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4970:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4986:3:6",
																								"nodeType": "YulLiteral",
																								"src": "4986:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4991:1:6",
																								"nodeType": "YulLiteral",
																								"src": "4991:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4982:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4982:3:6"
																						},
																						"nativeSrc": "4982:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4982:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4995:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4995:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4978:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4978:3:6"
																				},
																				"nativeSrc": "4978:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4978:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4966:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4966:3:6"
																		},
																		"nativeSrc": "4966:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4966:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4948:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4948:6:6"
																},
																"nativeSrc": "4948:51:6",
																"nodeType": "YulFunctionCall",
																"src": "4948:51:6"
															},
															"nativeSrc": "4948:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "4948:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5019:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5019:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5030:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5030:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5015:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5015:3:6"
																		},
																		"nativeSrc": "5015:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5015:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5035:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5035:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5008:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5008:6:6"
																},
																"nativeSrc": "5008:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5008:34:6"
															},
															"nativeSrc": "5008:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "5008:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5062:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5062:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5073:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5073:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5058:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5058:3:6"
																		},
																		"nativeSrc": "5058:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5058:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5078:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5078:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5051:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5051:6:6"
																},
																"nativeSrc": "5051:34:6",
																"nodeType": "YulFunctionCall",
																"src": "5051:34:6"
															},
															"nativeSrc": "5051:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "5051:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4746:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4856:9:6",
														"nodeType": "YulTypedName",
														"src": "4856:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4867:6:6",
														"nodeType": "YulTypedName",
														"src": "4867:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4875:6:6",
														"nodeType": "YulTypedName",
														"src": "4875:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4883:6:6",
														"nodeType": "YulTypedName",
														"src": "4883:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4894:4:6",
														"nodeType": "YulTypedName",
														"src": "4894:4:6",
														"type": ""
													}
												],
												"src": "4746:345:6"
											},
											{
												"body": {
													"nativeSrc": "5197:76:6",
													"nodeType": "YulBlock",
													"src": "5197:76:6",
													"statements": [
														{
															"nativeSrc": "5207:26:6",
															"nodeType": "YulAssignment",
															"src": "5207:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5219:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5219:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5230:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5230:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5215:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5215:3:6"
																},
																"nativeSrc": "5215:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5215:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5207:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5207:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5249:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5249:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5260:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5260:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5242:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5242:6:6"
																},
																"nativeSrc": "5242:25:6",
																"nodeType": "YulFunctionCall",
																"src": "5242:25:6"
															},
															"nativeSrc": "5242:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "5242:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5096:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5166:9:6",
														"nodeType": "YulTypedName",
														"src": "5166:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5177:6:6",
														"nodeType": "YulTypedName",
														"src": "5177:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5188:4:6",
														"nodeType": "YulTypedName",
														"src": "5188:4:6",
														"type": ""
													}
												],
												"src": "5096:177:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600c81526020016b141c9bd999995cda5bdb985b60a21b8152506040518060400160405280600581526020016450524f464960d81b8152508160039081620000669190620003ce565b506004620000758282620003ce565b5050600580546001600160a01b03199081163390811790925560068054821673cb3a5467756f86692fb3336c58ec41c16b9bebdf17905560078054821673bd0233d4cb7abe917f79f0e80dc7676f4cb818e117905560088054909116737ce4b5d0504edf27ec43610f8679e84bdf81a0b81790556200011a9150620000f8600690565b6200010590600a620005af565b6200011490620186a0620005c7565b620001b2565b60065462000150906001600160a01b031662000134600690565b6200014190600a620005af565b620001149062030d40620005c7565b6007546200017e906001600160a01b03166200016f6006600a620005af565b6200011490620493e0620005c7565b600854620001ac906001600160a01b03166200019d6006600a620005af565b620001149062061a80620005c7565b620005f7565b6001600160a01b038216620001e25760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b620001f060008383620001f4565b5050565b6001600160a01b03831662000223578060026000828254620002179190620005e1565b90915550620002979050565b6001600160a01b03831660009081526020819052604090205481811015620002785760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620001d9565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620002b557600280548290039055620002d4565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200031a91815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200035257607f821691505b6020821081036200037357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003c9576000816000526020600020601f850160051c81016020861015620003a45750805b601f850160051c820191505b81811015620003c557828155600101620003b0565b5050505b505050565b81516001600160401b03811115620003ea57620003ea62000327565b6200040281620003fb84546200033d565b8462000379565b602080601f8311600181146200043a5760008415620004215750858301515b600019600386901b1c1916600185901b178555620003c5565b600085815260208120601f198616915b828110156200046b578886015182559484019460019091019084016200044a565b50858210156200048a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620004f1578160001904821115620004d557620004d56200049a565b80851615620004e357918102915b93841c9390800290620004b5565b509250929050565b6000826200050a57506001620005a9565b816200051957506000620005a9565b81600181146200053257600281146200053d576200055d565b6001915050620005a9565b60ff8411156200055157620005516200049a565b50506001821b620005a9565b5060208310610133831016604e8410600b841016171562000582575081810a620005a9565b6200058e8383620004b0565b8060001904821115620005a557620005a56200049a565b0290505b92915050565b6000620005c060ff841683620004f9565b9392505050565b8082028115828204841417620005a957620005a96200049a565b80820180821115620005a957620005a96200049a565b61088f80620006076000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636ac5db1911610097578063a9059cbb11610066578063a9059cbb146101f7578063ce266af81461020a578063dd62ed3e1461021d578063f5537ede1461025657600080fd5b80636ac5db19146101a057806370a08231146101b35780638da5cb5b146101dc57806395d89b41146101ef57600080fd5b806318160ddd116100d357806318160ddd1461016257806323b872dd14610174578063313ce567146101875780635cd07ee61461019657600080fd5b806305417143146100fa57806306fdde031461012a578063095ea7b31461013f575b600080fd5b60085461010d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610132610269565b60405161012191906106aa565b61015261014d366004610715565b6102fb565b6040519015158152602001610121565b6002545b604051908152602001610121565b61015261018236600461073f565b610315565b60405160068152602001610121565b61019e610339565b005b60075461010d906001600160a01b031681565b6101666101c136600461077b565b6001600160a01b031660009081526020819052604090205490565b60055461010d906001600160a01b031681565b610132610355565b610152610205366004610715565b610364565b60065461010d906001600160a01b031681565b61016661022b36600461079d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61019e61026436600461073f565b610372565b606060038054610278906107d0565b80601f01602080910402602001604051908101604052809291908181526020018280546102a4906107d0565b80156102f15780601f106102c6576101008083540402835291602001916102f1565b820191906000526020600020905b8154815290600101906020018083116102d457829003601f168201915b5050505050905090565b600033610309818585610382565b60019150505b92915050565b60003361032385828561038f565b61032e858585610412565b506001949350505050565b6103533361034a60066103e8610820565b61ffff16610471565b565b606060048054610278906107d0565b600033610309818585610412565b61037d838383610412565b505050565b61037d83838360016104ab565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461040c57818110156103fd57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61040c848484840360006104ab565b50505050565b6001600160a01b03831661043c57604051634b637e8f60e11b8152600060048201526024016103f4565b6001600160a01b0382166104665760405163ec442f0560e01b8152600060048201526024016103f4565b61037d838383610580565b6001600160a01b03821661049b5760405163ec442f0560e01b8152600060048201526024016103f4565b6104a760008383610580565b5050565b6001600160a01b0384166104d55760405163e602df0560e01b8152600060048201526024016103f4565b6001600160a01b0383166104ff57604051634a1406b160e11b8152600060048201526024016103f4565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561040c57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161057291815260200190565b60405180910390a350505050565b6001600160a01b0383166105ab5780600260008282546105a09190610846565b9091555061061d9050565b6001600160a01b038316600090815260208190526040902054818110156105fe5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103f4565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661063957600280548290039055610658565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161069d91815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b818110156106d8578581018301518582016040015282016106bc565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461071057600080fd5b919050565b6000806040838503121561072857600080fd5b610731836106f9565b946020939093013593505050565b60008060006060848603121561075457600080fd5b61075d846106f9565b925061076b602085016106f9565b9150604084013590509250925092565b60006020828403121561078d57600080fd5b610796826106f9565b9392505050565b600080604083850312156107b057600080fd5b6107b9836106f9565b91506107c7602084016106f9565b90509250929050565b600181811c908216806107e457607f821691505b60208210810361080457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b61ffff81811683821602808216919082811461083e5761083e61080a565b505092915050565b8082018082111561030f5761030f61080a56fea2646970667358221220f80a2837375bcd8ceced36d5046a8d3b12012704fdd411655155109e5c65013364736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x141C9BD999995CDA5BDB985B PUSH1 0xA2 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x50524F4649 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x66 SWAP2 SWAP1 PUSH3 0x3CE JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x75 DUP3 DUP3 PUSH3 0x3CE JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x6 DUP1 SLOAD DUP3 AND PUSH20 0xCB3A5467756F86692FB3336C58EC41C16B9BEBDF OR SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD DUP3 AND PUSH20 0xBD0233D4CB7ABE917F79F0E80DC7676F4CB818E1 OR SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0x7CE4B5D0504EDF27EC43610F8679E84BDF81A0B8 OR SWAP1 SSTORE PUSH3 0x11A SWAP2 POP PUSH3 0xF8 PUSH1 0x6 SWAP1 JUMP JUMPDEST PUSH3 0x105 SWAP1 PUSH1 0xA PUSH3 0x5AF JUMP JUMPDEST PUSH3 0x114 SWAP1 PUSH3 0x186A0 PUSH3 0x5C7 JUMP JUMPDEST PUSH3 0x1B2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH3 0x150 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x134 PUSH1 0x6 SWAP1 JUMP JUMPDEST PUSH3 0x141 SWAP1 PUSH1 0xA PUSH3 0x5AF JUMP JUMPDEST PUSH3 0x114 SWAP1 PUSH3 0x30D40 PUSH3 0x5C7 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH3 0x17E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x16F PUSH1 0x6 PUSH1 0xA PUSH3 0x5AF JUMP JUMPDEST PUSH3 0x114 SWAP1 PUSH3 0x493E0 PUSH3 0x5C7 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH3 0x1AC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x19D PUSH1 0x6 PUSH1 0xA PUSH3 0x5AF JUMP JUMPDEST PUSH3 0x114 SWAP1 PUSH3 0x61A80 PUSH3 0x5C7 JUMP JUMPDEST PUSH3 0x5F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x1E2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1F0 PUSH1 0x0 DUP4 DUP4 PUSH3 0x1F4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x223 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x217 SWAP2 SWAP1 PUSH3 0x5E1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x297 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x278 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0x1D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2B5 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x2D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x31A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x352 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x373 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x3C9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x3A4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3C5 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3B0 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x3EA JUMPI PUSH3 0x3EA PUSH3 0x327 JUMP JUMPDEST PUSH3 0x402 DUP2 PUSH3 0x3FB DUP5 SLOAD PUSH3 0x33D JUMP JUMPDEST DUP5 PUSH3 0x379 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x43A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x421 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x3C5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x46B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x44A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x48A JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x4F1 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x4D5 JUMPI PUSH3 0x4D5 PUSH3 0x49A JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x4E3 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x4B5 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x50A JUMPI POP PUSH1 0x1 PUSH3 0x5A9 JUMP JUMPDEST DUP2 PUSH3 0x519 JUMPI POP PUSH1 0x0 PUSH3 0x5A9 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x532 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x53D JUMPI PUSH3 0x55D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x5A9 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x551 JUMPI PUSH3 0x551 PUSH3 0x49A JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x5A9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x582 JUMPI POP DUP2 DUP2 EXP PUSH3 0x5A9 JUMP JUMPDEST PUSH3 0x58E DUP4 DUP4 PUSH3 0x4B0 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x5A5 JUMPI PUSH3 0x5A5 PUSH3 0x49A JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5C0 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x4F9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x5A9 JUMPI PUSH3 0x5A9 PUSH3 0x49A JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x5A9 JUMPI PUSH3 0x5A9 PUSH3 0x49A JUMP JUMPDEST PUSH2 0x88F DUP1 PUSH3 0x607 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6AC5DB19 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xCE266AF8 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xF5537EDE EQ PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6AC5DB19 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x5CD07EE6 EQ PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5417143 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x269 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x152 PUSH2 0x14D CALLDATASIZE PUSH1 0x4 PUSH2 0x715 JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x152 PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x339 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x166 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x355 JUMP JUMPDEST PUSH2 0x152 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x715 JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x166 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x79D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x278 SWAP1 PUSH2 0x7D0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2A4 SWAP1 PUSH2 0x7D0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x309 DUP2 DUP6 DUP6 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x323 DUP6 DUP3 DUP6 PUSH2 0x38F JUMP JUMPDEST PUSH2 0x32E DUP6 DUP6 DUP6 PUSH2 0x412 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x353 CALLER PUSH2 0x34A PUSH1 0x6 PUSH2 0x3E8 PUSH2 0x820 JUMP JUMPDEST PUSH2 0xFFFF AND PUSH2 0x471 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x278 SWAP1 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x309 DUP2 DUP6 DUP6 PUSH2 0x412 JUMP JUMPDEST PUSH2 0x37D DUP4 DUP4 DUP4 PUSH2 0x412 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x37D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x40C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40C DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x4AB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x37D DUP4 DUP4 DUP4 PUSH2 0x580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x4A7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x580 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x40C JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x572 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5AB JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x61D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x639 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x658 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x69D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6D8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6BC JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x710 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x731 DUP4 PUSH2 0x6F9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75D DUP5 PUSH2 0x6F9 JUMP JUMPDEST SWAP3 POP PUSH2 0x76B PUSH1 0x20 DUP6 ADD PUSH2 0x6F9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x796 DUP3 PUSH2 0x6F9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B9 DUP4 PUSH2 0x6F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x7C7 PUSH1 0x20 DUP5 ADD PUSH2 0x6F9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7E4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x804 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xFFFF DUP2 DUP2 AND DUP4 DUP3 AND MUL DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP2 EQ PUSH2 0x83E JUMPI PUSH2 0x83E PUSH2 0x80A JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x30F JUMPI PUSH2 0x30F PUSH2 0x80A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 EXP 0x28 CALLDATACOPY CALLDATACOPY JUMPDEST 0xCD DUP13 0xEC 0xED CALLDATASIZE 0xD5 DIV PUSH11 0x8D3B12012704FDD4116551 SSTORE LT SWAP15 0x5C PUSH6 0x13364736F6C PUSH4 0x43000816 STOP CALLER ",
							"sourceMap": "114:909:5:-:0;;;269:412;;;;;;;;;;1896:113:1;;;;;;;;;;;;;-1:-1:-1;;;1896:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:1;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:1;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;293:5:5;:18;;-1:-1:-1;;;;;;293:18:5;;;301:10;293:18;;;;;;321:3;:48;;;;327:42;321:48;;;379:3;:48;;;;385:42;379:48;;;437:4;:49;;;;;444:42;437:49;;;497:38;;-1:-1:-1;524:10:5;1013:1;;939:82;524:10;520:14;;:2;:14;:::i;:::-;510:24;;:7;:24;:::i;:::-;497:5;:38::i;:::-;551:3;;545:36;;-1:-1:-1;;;;;551:3:5;570:10;1013:1;;939:82;570:10;566:14;;:2;:14;:::i;:::-;556:24;;:7;:24;:::i;545:36::-;597:3;;591:36;;-1:-1:-1;;;;;597:3:5;612:14;1013:1;612:2;:14;:::i;:::-;602:24;;:7;:24;:::i;591:36::-;643:4;;637:37;;-1:-1:-1;;;;;643:4:5;659:14;1013:1;659:2;:14;:::i;:::-;649:24;;:7;:24;:::i;637:37::-;114:909;;7721:208:1;-1:-1:-1;;;;;7791:21:1;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:1;;7864:1;7835:32;;;4554:51:6;4527:18;;7835:32:1;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:1;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:1;;-1:-1:-1;6356:540:1;;-1:-1:-1;;;;;6570:15:1;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:1;;-1:-1:-1;;;;;4966:32:6;;6649:50:1;;;4948:51:6;5015:18;;;5008:34;;;5058:18;;;5051:34;;;4921:18;;6649:50:1;4746:345:6;6599:115:1;-1:-1:-1;;;;;6834:15:1;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:1;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:1;7355:4;-1:-1:-1;;;;;7346:25:1;;7365:5;7346:25;;;;5242::6;;5230:2;5215:18;;5096:177;7346:25:1;;;;;;;;6271:1107;;;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:543::-;759:2;754:3;751:11;748:446;;;795:1;819:5;816:1;809:16;863:4;860:1;850:18;933:2;921:10;917:19;914:1;910:27;904:4;900:38;969:4;957:10;954:20;951:47;;;-1:-1:-1;992:4:6;951:47;1047:2;1042:3;1038:12;1035:1;1031:20;1025:4;1021:31;1011:41;;1102:82;1120:2;1113:5;1110:13;1102:82;;;1165:17;;;1146:1;1135:13;1102:82;;;1106:3;;;748:446;657:543;;;:::o;1376:1345::-;1496:10;;-1:-1:-1;;;;;1518:30:6;;1515:56;;;1551:18;;:::i;:::-;1580:97;1670:6;1630:38;1662:4;1656:11;1630:38;:::i;:::-;1624:4;1580:97;:::i;:::-;1732:4;;1789:2;1778:14;;1806:1;1801:663;;;;2508:1;2525:6;2522:89;;;-1:-1:-1;2577:19:6;;;2571:26;2522:89;-1:-1:-1;;1333:1:6;1329:11;;;1325:24;1321:29;1311:40;1357:1;1353:11;;;1308:57;2624:81;;1771:944;;1801:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1837:20:6;;;1955:236;1969:7;1966:1;1963:14;1955:236;;;2058:19;;;2052:26;2037:42;;2150:27;;;;2118:1;2106:14;;;;1985:19;;1955:236;;;1959:3;2219:6;2210:7;2207:19;2204:201;;;2280:19;;;2274:26;-1:-1:-1;;2363:1:6;2359:14;;;2375:3;2355:24;2351:37;2347:42;2332:58;2317:74;;2204:201;-1:-1:-1;;;;;2451:1:6;2435:14;;;2431:22;2418:36;;-1:-1:-1;1376:1345:6:o;2726:127::-;2787:10;2782:3;2778:20;2775:1;2768:31;2818:4;2815:1;2808:15;2842:4;2839:1;2832:15;2858:416;2947:1;2984:5;2947:1;2998:270;3019:7;3009:8;3006:21;2998:270;;;3078:4;3074:1;3070:6;3066:17;3060:4;3057:27;3054:53;;;3087:18;;:::i;:::-;3137:7;3127:8;3123:22;3120:55;;;3157:16;;;;3120:55;3236:22;;;;3196:15;;;;2998:270;;;3002:3;2858:416;;;;;:::o;3279:806::-;3328:5;3358:8;3348:80;;-1:-1:-1;3399:1:6;3413:5;;3348:80;3447:4;3437:76;;-1:-1:-1;3484:1:6;3498:5;;3437:76;3529:4;3547:1;3542:59;;;;3615:1;3610:130;;;;3522:218;;3542:59;3572:1;3563:10;;3586:5;;;3610:130;3647:3;3637:8;3634:17;3631:43;;;3654:18;;:::i;:::-;-1:-1:-1;;3710:1:6;3696:16;;3725:5;;3522:218;;3824:2;3814:8;3811:16;3805:3;3799:4;3796:13;3792:36;3786:2;3776:8;3773:16;3768:2;3762:4;3759:12;3755:35;3752:77;3749:159;;;-1:-1:-1;3861:19:6;;;3893:5;;3749:159;3940:34;3965:8;3959:4;3940:34;:::i;:::-;4010:6;4006:1;4002:6;3998:19;3989:7;3986:32;3983:58;;;4021:18;;:::i;:::-;4059:20;;-1:-1:-1;3279:806:6;;;;;:::o;4090:140::-;4148:5;4177:47;4218:4;4208:8;4204:19;4198:4;4177:47;:::i;:::-;4168:56;4090:140;-1:-1:-1;;;4090:140:6:o;4235:168::-;4308:9;;;4339;;4356:15;;;4350:22;;4336:37;4326:71;;4377:18;;:::i;4616:125::-;4681:9;;;4702:10;;;4699:36;;;4715:18;;:::i;5096:177::-;114:909:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 898,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 1195,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 1137,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 911,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 1042,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 1408,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": null,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 763,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_893": {
									"entryPoint": null,
									"id": 893,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRewrdCode_868": {
									"entryPoint": 825,
									"id": 868,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@jack_792": {
									"entryPoint": null,
									"id": 792,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@max_790": {
									"entryPoint": null,
									"id": 790,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_197": {
									"entryPoint": 617,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_786": {
									"entryPoint": null,
									"id": 786,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_206": {
									"entryPoint": 853,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tom_788": {
									"entryPoint": null,
									"id": 788,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 789,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferToken_884": {
									"entryPoint": 882,
									"id": 884,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transfer_261": {
									"entryPoint": 868,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint16": {
									"entryPoint": 2080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2058,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3808:6",
										"nodeType": "YulBlock",
										"src": "0:3808:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:6",
													"nodeType": "YulBlock",
													"src": "115:102:6",
													"statements": [
														{
															"nativeSrc": "125:26:6",
															"nodeType": "YulAssignment",
															"src": "125:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:6",
																		"nodeType": "YulLiteral",
																		"src": "148:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:6"
																},
																"nativeSrc": "133:18:6",
																"nodeType": "YulFunctionCall",
																"src": "133:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:6",
																								"nodeType": "YulLiteral",
																								"src": "198:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:6",
																								"nodeType": "YulLiteral",
																								"src": "203:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:6"
																						},
																						"nativeSrc": "194:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:6",
																						"nodeType": "YulLiteral",
																						"src": "207:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:6"
																				},
																				"nativeSrc": "190:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:6"
																		},
																		"nativeSrc": "178:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:6"
																},
																"nativeSrc": "160:51:6",
																"nodeType": "YulFunctionCall",
																"src": "160:51:6"
															},
															"nativeSrc": "160:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:6",
														"nodeType": "YulTypedName",
														"src": "84:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:6",
														"nodeType": "YulTypedName",
														"src": "95:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:6",
														"nodeType": "YulTypedName",
														"src": "106:4:6",
														"type": ""
													}
												],
												"src": "14:203:6"
											},
											{
												"body": {
													"nativeSrc": "343:427:6",
													"nodeType": "YulBlock",
													"src": "343:427:6",
													"statements": [
														{
															"nativeSrc": "353:12:6",
															"nodeType": "YulVariableDeclaration",
															"src": "353:12:6",
															"value": {
																"kind": "number",
																"nativeSrc": "363:2:6",
																"nodeType": "YulLiteral",
																"src": "363:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "357:2:6",
																	"nodeType": "YulTypedName",
																	"src": "357:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "381:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "381:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "392:2:6",
																		"nodeType": "YulLiteral",
																		"src": "392:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "374:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:6"
																},
																"nativeSrc": "374:21:6",
																"nodeType": "YulFunctionCall",
																"src": "374:21:6"
															},
															"nativeSrc": "374:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "374:21:6"
														},
														{
															"nativeSrc": "404:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "404:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "424:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "424:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "418:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "418:5:6"
																},
																"nativeSrc": "418:13:6",
																"nodeType": "YulFunctionCall",
																"src": "418:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "408:6:6",
																	"nodeType": "YulTypedName",
																	"src": "408:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "451:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "451:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "462:2:6",
																				"nodeType": "YulLiteral",
																				"src": "462:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "447:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:6"
																		},
																		"nativeSrc": "447:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "447:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "467:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "467:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "440:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "440:6:6"
																},
																"nativeSrc": "440:34:6",
																"nodeType": "YulFunctionCall",
																"src": "440:34:6"
															},
															"nativeSrc": "440:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "440:34:6"
														},
														{
															"nativeSrc": "483:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "483:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "492:1:6",
																"nodeType": "YulLiteral",
																"src": "492:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "487:1:6",
																	"nodeType": "YulTypedName",
																	"src": "487:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "552:90:6",
																"nodeType": "YulBlock",
																"src": "552:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "581:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "581:9:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "592:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "592:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "577:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "577:3:6"
																							},
																							"nativeSrc": "577:17:6",
																							"nodeType": "YulFunctionCall",
																							"src": "577:17:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "596:2:6",
																							"nodeType": "YulLiteral",
																							"src": "596:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "573:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "573:3:6"
																					},
																					"nativeSrc": "573:26:6",
																					"nodeType": "YulFunctionCall",
																					"src": "573:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "615:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "615:6:6"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "623:1:6",
																											"nodeType": "YulIdentifier",
																											"src": "623:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "611:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "611:3:6"
																									},
																									"nativeSrc": "611:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "611:14:6"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "627:2:6",
																									"nodeType": "YulIdentifier",
																									"src": "627:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "607:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "607:3:6"
																							},
																							"nativeSrc": "607:23:6",
																							"nodeType": "YulFunctionCall",
																							"src": "607:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "601:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "601:5:6"
																					},
																					"nativeSrc": "601:30:6",
																					"nodeType": "YulFunctionCall",
																					"src": "601:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "566:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "566:6:6"
																			},
																			"nativeSrc": "566:66:6",
																			"nodeType": "YulFunctionCall",
																			"src": "566:66:6"
																		},
																		"nativeSrc": "566:66:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "566:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "513:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "513:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "516:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "516:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "510:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "510:2:6"
																},
																"nativeSrc": "510:13:6",
																"nodeType": "YulFunctionCall",
																"src": "510:13:6"
															},
															"nativeSrc": "502:140:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "524:19:6",
																"nodeType": "YulBlock",
																"src": "524:19:6",
																"statements": [
																	{
																		"nativeSrc": "526:15:6",
																		"nodeType": "YulAssignment",
																		"src": "526:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "535:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "535:1:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "538:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "538:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "531:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "531:3:6"
																			},
																			"nativeSrc": "531:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "531:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "526:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "526:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "506:3:6",
																"nodeType": "YulBlock",
																"src": "506:3:6",
																"statements": []
															},
															"src": "502:140:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "666:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "666:9:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "677:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "677:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "662:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "662:3:6"
																				},
																				"nativeSrc": "662:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "662:22:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "686:2:6",
																				"nodeType": "YulLiteral",
																				"src": "686:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "658:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:6"
																		},
																		"nativeSrc": "658:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "658:31:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "691:1:6",
																		"nodeType": "YulLiteral",
																		"src": "691:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "651:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "651:6:6"
																},
																"nativeSrc": "651:42:6",
																"nodeType": "YulFunctionCall",
																"src": "651:42:6"
															},
															"nativeSrc": "651:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "651:42:6"
														},
														{
															"nativeSrc": "702:62:6",
															"nodeType": "YulAssignment",
															"src": "702:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "718:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "718:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "737:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "737:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "745:2:6",
																								"nodeType": "YulLiteral",
																								"src": "745:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "733:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "733:3:6"
																						},
																						"nativeSrc": "733:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "733:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "754:2:6",
																								"nodeType": "YulLiteral",
																								"src": "754:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "750:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "750:3:6"
																						},
																						"nativeSrc": "750:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "750:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "729:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "729:3:6"
																				},
																				"nativeSrc": "729:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "729:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "714:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:6"
																		},
																		"nativeSrc": "714:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "714:45:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "761:2:6",
																		"nodeType": "YulLiteral",
																		"src": "761:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "710:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "710:3:6"
																},
																"nativeSrc": "710:54:6",
																"nodeType": "YulFunctionCall",
																"src": "710:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "702:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "702:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "222:548:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "312:9:6",
														"nodeType": "YulTypedName",
														"src": "312:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "323:6:6",
														"nodeType": "YulTypedName",
														"src": "323:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "334:4:6",
														"nodeType": "YulTypedName",
														"src": "334:4:6",
														"type": ""
													}
												],
												"src": "222:548:6"
											},
											{
												"body": {
													"nativeSrc": "824:124:6",
													"nodeType": "YulBlock",
													"src": "824:124:6",
													"statements": [
														{
															"nativeSrc": "834:29:6",
															"nodeType": "YulAssignment",
															"src": "834:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "856:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "856:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "843:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "843:12:6"
																},
																"nativeSrc": "843:20:6",
																"nodeType": "YulFunctionCall",
																"src": "843:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "834:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "834:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "926:16:6",
																"nodeType": "YulBlock",
																"src": "926:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "935:1:6",
																					"nodeType": "YulLiteral",
																					"src": "935:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "938:1:6",
																					"nodeType": "YulLiteral",
																					"src": "938:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "928:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "928:6:6"
																			},
																			"nativeSrc": "928:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "928:12:6"
																		},
																		"nativeSrc": "928:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "928:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "885:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "885:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "896:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "896:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "911:3:6",
																										"nodeType": "YulLiteral",
																										"src": "911:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "916:1:6",
																										"nodeType": "YulLiteral",
																										"src": "916:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "907:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "907:3:6"
																								},
																								"nativeSrc": "907:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "907:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "920:1:6",
																								"nodeType": "YulLiteral",
																								"src": "920:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "903:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "903:3:6"
																						},
																						"nativeSrc": "903:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "903:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "892:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "892:3:6"
																				},
																				"nativeSrc": "892:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "892:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "882:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "882:2:6"
																		},
																		"nativeSrc": "882:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "882:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "875:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "875:6:6"
																},
																"nativeSrc": "875:50:6",
																"nodeType": "YulFunctionCall",
																"src": "875:50:6"
															},
															"nativeSrc": "872:70:6",
															"nodeType": "YulIf",
															"src": "872:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "775:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "803:6:6",
														"nodeType": "YulTypedName",
														"src": "803:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "814:5:6",
														"nodeType": "YulTypedName",
														"src": "814:5:6",
														"type": ""
													}
												],
												"src": "775:173:6"
											},
											{
												"body": {
													"nativeSrc": "1040:167:6",
													"nodeType": "YulBlock",
													"src": "1040:167:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1086:16:6",
																"nodeType": "YulBlock",
																"src": "1086:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1095:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1095:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1098:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1098:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1088:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1088:6:6"
																			},
																			"nativeSrc": "1088:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1088:12:6"
																		},
																		"nativeSrc": "1088:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1088:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1061:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1061:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1070:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1070:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1057:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1057:3:6"
																		},
																		"nativeSrc": "1057:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1057:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1082:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1082:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1053:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1053:3:6"
																},
																"nativeSrc": "1053:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1053:32:6"
															},
															"nativeSrc": "1050:52:6",
															"nodeType": "YulIf",
															"src": "1050:52:6"
														},
														{
															"nativeSrc": "1111:39:6",
															"nodeType": "YulAssignment",
															"src": "1111:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1140:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1140:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1121:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1121:18:6"
																},
																"nativeSrc": "1121:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1121:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1111:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1111:6:6"
																}
															]
														},
														{
															"nativeSrc": "1159:42:6",
															"nodeType": "YulAssignment",
															"src": "1159:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1186:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1186:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1197:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1197:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1182:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1182:3:6"
																		},
																		"nativeSrc": "1182:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1182:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1169:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1169:12:6"
																},
																"nativeSrc": "1169:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1169:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1159:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "953:254:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "998:9:6",
														"nodeType": "YulTypedName",
														"src": "998:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1009:7:6",
														"nodeType": "YulTypedName",
														"src": "1009:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1021:6:6",
														"nodeType": "YulTypedName",
														"src": "1021:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1029:6:6",
														"nodeType": "YulTypedName",
														"src": "1029:6:6",
														"type": ""
													}
												],
												"src": "953:254:6"
											},
											{
												"body": {
													"nativeSrc": "1307:92:6",
													"nodeType": "YulBlock",
													"src": "1307:92:6",
													"statements": [
														{
															"nativeSrc": "1317:26:6",
															"nodeType": "YulAssignment",
															"src": "1317:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1329:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1329:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1340:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1340:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1325:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1325:3:6"
																},
																"nativeSrc": "1325:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1325:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1317:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1317:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1359:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1359:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1384:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1384:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1377:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1377:6:6"
																				},
																				"nativeSrc": "1377:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1377:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1370:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1370:6:6"
																		},
																		"nativeSrc": "1370:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1370:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1352:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:6"
																},
																"nativeSrc": "1352:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1352:41:6"
															},
															"nativeSrc": "1352:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "1352:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1212:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1276:9:6",
														"nodeType": "YulTypedName",
														"src": "1276:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1287:6:6",
														"nodeType": "YulTypedName",
														"src": "1287:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1298:4:6",
														"nodeType": "YulTypedName",
														"src": "1298:4:6",
														"type": ""
													}
												],
												"src": "1212:187:6"
											},
											{
												"body": {
													"nativeSrc": "1505:76:6",
													"nodeType": "YulBlock",
													"src": "1505:76:6",
													"statements": [
														{
															"nativeSrc": "1515:26:6",
															"nodeType": "YulAssignment",
															"src": "1515:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1527:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1527:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1538:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1538:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1523:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1523:3:6"
																},
																"nativeSrc": "1523:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1523:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1515:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1515:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1557:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1557:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1568:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1568:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1550:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1550:6:6"
																},
																"nativeSrc": "1550:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1550:25:6"
															},
															"nativeSrc": "1550:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1550:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1404:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1474:9:6",
														"nodeType": "YulTypedName",
														"src": "1474:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1485:6:6",
														"nodeType": "YulTypedName",
														"src": "1485:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1496:4:6",
														"nodeType": "YulTypedName",
														"src": "1496:4:6",
														"type": ""
													}
												],
												"src": "1404:177:6"
											},
											{
												"body": {
													"nativeSrc": "1690:224:6",
													"nodeType": "YulBlock",
													"src": "1690:224:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1736:16:6",
																"nodeType": "YulBlock",
																"src": "1736:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1745:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1745:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1748:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1748:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1738:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1738:6:6"
																			},
																			"nativeSrc": "1738:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1738:12:6"
																		},
																		"nativeSrc": "1738:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1738:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1711:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1711:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1720:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1720:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1707:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1707:3:6"
																		},
																		"nativeSrc": "1707:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1707:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1703:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1703:3:6"
																},
																"nativeSrc": "1703:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1703:32:6"
															},
															"nativeSrc": "1700:52:6",
															"nodeType": "YulIf",
															"src": "1700:52:6"
														},
														{
															"nativeSrc": "1761:39:6",
															"nodeType": "YulAssignment",
															"src": "1761:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1790:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1790:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1771:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1771:18:6"
																},
																"nativeSrc": "1771:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1771:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1761:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1761:6:6"
																}
															]
														},
														{
															"nativeSrc": "1809:48:6",
															"nodeType": "YulAssignment",
															"src": "1809:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1842:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1842:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1853:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1838:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1838:3:6"
																		},
																		"nativeSrc": "1838:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1838:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1819:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1819:18:6"
																},
																"nativeSrc": "1819:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1819:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1809:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1809:6:6"
																}
															]
														},
														{
															"nativeSrc": "1866:42:6",
															"nodeType": "YulAssignment",
															"src": "1866:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1893:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1893:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1904:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1904:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1889:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1889:3:6"
																		},
																		"nativeSrc": "1889:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1889:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1876:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1876:12:6"
																},
																"nativeSrc": "1876:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1876:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1866:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1866:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1586:328:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1640:9:6",
														"nodeType": "YulTypedName",
														"src": "1640:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1651:7:6",
														"nodeType": "YulTypedName",
														"src": "1651:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1663:6:6",
														"nodeType": "YulTypedName",
														"src": "1663:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1671:6:6",
														"nodeType": "YulTypedName",
														"src": "1671:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1679:6:6",
														"nodeType": "YulTypedName",
														"src": "1679:6:6",
														"type": ""
													}
												],
												"src": "1586:328:6"
											},
											{
												"body": {
													"nativeSrc": "2016:87:6",
													"nodeType": "YulBlock",
													"src": "2016:87:6",
													"statements": [
														{
															"nativeSrc": "2026:26:6",
															"nodeType": "YulAssignment",
															"src": "2026:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2038:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2038:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2049:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2049:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2034:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2034:3:6"
																},
																"nativeSrc": "2034:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2034:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2026:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2026:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2068:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2068:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2083:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2083:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2091:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2091:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2079:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2079:3:6"
																		},
																		"nativeSrc": "2079:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2079:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2061:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2061:6:6"
																},
																"nativeSrc": "2061:36:6",
																"nodeType": "YulFunctionCall",
																"src": "2061:36:6"
															},
															"nativeSrc": "2061:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "2061:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1919:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1985:9:6",
														"nodeType": "YulTypedName",
														"src": "1985:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1996:6:6",
														"nodeType": "YulTypedName",
														"src": "1996:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2007:4:6",
														"nodeType": "YulTypedName",
														"src": "2007:4:6",
														"type": ""
													}
												],
												"src": "1919:184:6"
											},
											{
												"body": {
													"nativeSrc": "2178:116:6",
													"nodeType": "YulBlock",
													"src": "2178:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2224:16:6",
																"nodeType": "YulBlock",
																"src": "2224:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2233:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2236:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2226:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:6"
																			},
																			"nativeSrc": "2226:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:6"
																		},
																		"nativeSrc": "2226:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2199:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2208:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2195:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:6"
																		},
																		"nativeSrc": "2195:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2220:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2191:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:6"
																},
																"nativeSrc": "2191:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2191:32:6"
															},
															"nativeSrc": "2188:52:6",
															"nodeType": "YulIf",
															"src": "2188:52:6"
														},
														{
															"nativeSrc": "2249:39:6",
															"nodeType": "YulAssignment",
															"src": "2249:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2278:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2259:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:6"
																},
																"nativeSrc": "2259:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2259:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2249:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2108:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2144:9:6",
														"nodeType": "YulTypedName",
														"src": "2144:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2155:7:6",
														"nodeType": "YulTypedName",
														"src": "2155:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2167:6:6",
														"nodeType": "YulTypedName",
														"src": "2167:6:6",
														"type": ""
													}
												],
												"src": "2108:186:6"
											},
											{
												"body": {
													"nativeSrc": "2386:173:6",
													"nodeType": "YulBlock",
													"src": "2386:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2432:16:6",
																"nodeType": "YulBlock",
																"src": "2432:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2441:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2441:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2444:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2444:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2434:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2434:6:6"
																			},
																			"nativeSrc": "2434:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2434:12:6"
																		},
																		"nativeSrc": "2434:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2434:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2407:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2407:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2416:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2416:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2403:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2403:3:6"
																		},
																		"nativeSrc": "2403:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2403:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2428:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2428:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2399:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2399:3:6"
																},
																"nativeSrc": "2399:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2399:32:6"
															},
															"nativeSrc": "2396:52:6",
															"nodeType": "YulIf",
															"src": "2396:52:6"
														},
														{
															"nativeSrc": "2457:39:6",
															"nodeType": "YulAssignment",
															"src": "2457:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2486:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2486:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2467:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2467:18:6"
																},
																"nativeSrc": "2467:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2467:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2457:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2457:6:6"
																}
															]
														},
														{
															"nativeSrc": "2505:48:6",
															"nodeType": "YulAssignment",
															"src": "2505:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2538:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2538:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2549:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2549:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2534:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2534:3:6"
																		},
																		"nativeSrc": "2534:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2534:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2515:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2515:18:6"
																},
																"nativeSrc": "2515:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2515:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2505:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2505:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2299:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2344:9:6",
														"nodeType": "YulTypedName",
														"src": "2344:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2355:7:6",
														"nodeType": "YulTypedName",
														"src": "2355:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2367:6:6",
														"nodeType": "YulTypedName",
														"src": "2367:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2375:6:6",
														"nodeType": "YulTypedName",
														"src": "2375:6:6",
														"type": ""
													}
												],
												"src": "2299:260:6"
											},
											{
												"body": {
													"nativeSrc": "2619:325:6",
													"nodeType": "YulBlock",
													"src": "2619:325:6",
													"statements": [
														{
															"nativeSrc": "2629:22:6",
															"nodeType": "YulAssignment",
															"src": "2629:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2643:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2643:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2646:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2646:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2639:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2639:3:6"
																},
																"nativeSrc": "2639:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2639:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2629:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2629:6:6"
																}
															]
														},
														{
															"nativeSrc": "2660:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2660:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2690:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2690:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2696:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2696:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2686:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2686:3:6"
																},
																"nativeSrc": "2686:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2686:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2664:18:6",
																	"nodeType": "YulTypedName",
																	"src": "2664:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2737:31:6",
																"nodeType": "YulBlock",
																"src": "2737:31:6",
																"statements": [
																	{
																		"nativeSrc": "2739:27:6",
																		"nodeType": "YulAssignment",
																		"src": "2739:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2753:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2753:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2761:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2761:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2749:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2749:3:6"
																			},
																			"nativeSrc": "2749:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2749:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2739:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2739:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2717:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2717:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2710:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2710:6:6"
																},
																"nativeSrc": "2710:26:6",
																"nodeType": "YulFunctionCall",
																"src": "2710:26:6"
															},
															"nativeSrc": "2707:61:6",
															"nodeType": "YulIf",
															"src": "2707:61:6"
														},
														{
															"body": {
																"nativeSrc": "2827:111:6",
																"nodeType": "YulBlock",
																"src": "2827:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2848:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2848:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2855:3:6",
																							"nodeType": "YulLiteral",
																							"src": "2855:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2860:10:6",
																							"nodeType": "YulLiteral",
																							"src": "2860:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2851:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2851:3:6"
																					},
																					"nativeSrc": "2851:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2851:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2841:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2841:6:6"
																			},
																			"nativeSrc": "2841:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2841:31:6"
																		},
																		"nativeSrc": "2841:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2841:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2892:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2892:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2895:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2895:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2885:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2885:6:6"
																			},
																			"nativeSrc": "2885:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2885:15:6"
																		},
																		"nativeSrc": "2885:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2885:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2920:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2920:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2923:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2923:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2913:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2913:6:6"
																			},
																			"nativeSrc": "2913:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2913:15:6"
																		},
																		"nativeSrc": "2913:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2913:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2783:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2783:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2806:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2814:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2814:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2803:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2803:2:6"
																		},
																		"nativeSrc": "2803:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2803:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2780:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:6"
																},
																"nativeSrc": "2780:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2780:38:6"
															},
															"nativeSrc": "2777:161:6",
															"nodeType": "YulIf",
															"src": "2777:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2564:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2599:4:6",
														"nodeType": "YulTypedName",
														"src": "2599:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2608:6:6",
														"nodeType": "YulTypedName",
														"src": "2608:6:6",
														"type": ""
													}
												],
												"src": "2564:380:6"
											},
											{
												"body": {
													"nativeSrc": "2981:95:6",
													"nodeType": "YulBlock",
													"src": "2981:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2998:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2998:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3005:3:6",
																				"nodeType": "YulLiteral",
																				"src": "3005:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3010:10:6",
																				"nodeType": "YulLiteral",
																				"src": "3010:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3001:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3001:3:6"
																		},
																		"nativeSrc": "3001:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3001:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2991:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2991:6:6"
																},
																"nativeSrc": "2991:31:6",
																"nodeType": "YulFunctionCall",
																"src": "2991:31:6"
															},
															"nativeSrc": "2991:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "2991:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3038:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3038:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3041:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3041:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3031:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3031:6:6"
																},
																"nativeSrc": "3031:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3031:15:6"
															},
															"nativeSrc": "3031:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3031:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3062:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3062:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3065:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3065:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3055:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:6"
																},
																"nativeSrc": "3055:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3055:15:6"
															},
															"nativeSrc": "3055:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "3055:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2949:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2949:127:6"
											},
											{
												"body": {
													"nativeSrc": "3132:194:6",
													"nodeType": "YulBlock",
													"src": "3132:194:6",
													"statements": [
														{
															"nativeSrc": "3142:16:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3142:16:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3152:6:6",
																"nodeType": "YulLiteral",
																"src": "3152:6:6",
																"type": "",
																"value": "0xffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3146:2:6",
																	"nodeType": "YulTypedName",
																	"src": "3146:2:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3167:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3167:46:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3194:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "3194:1:6"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3197:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "3197:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3190:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3190:3:6"
																		},
																		"nativeSrc": "3190:10:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3190:10:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "3206:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "3206:1:6"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3209:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "3209:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3202:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3202:3:6"
																		},
																		"nativeSrc": "3202:10:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3202:10:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3186:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3186:3:6"
																},
																"nativeSrc": "3186:27:6",
																"nodeType": "YulFunctionCall",
																"src": "3186:27:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "3171:11:6",
																	"nodeType": "YulTypedName",
																	"src": "3171:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3222:31:6",
															"nodeType": "YulAssignment",
															"src": "3222:31:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "3237:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "3237:11:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3250:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "3250:2:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:6"
																},
																"nativeSrc": "3233:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3233:20:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3222:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3222:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3298:22:6",
																"nodeType": "YulBlock",
																"src": "3298:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3300:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3300:16:6"
																			},
																			"nativeSrc": "3300:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3300:18:6"
																		},
																		"nativeSrc": "3300:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3300:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "product",
																				"nativeSrc": "3275:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3275:7:6"
																			},
																			{
																				"name": "product_raw",
																				"nativeSrc": "3284:11:6",
																				"nodeType": "YulIdentifier",
																				"src": "3284:11:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3272:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3272:2:6"
																		},
																		"nativeSrc": "3272:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3272:24:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3265:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3265:6:6"
																},
																"nativeSrc": "3265:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3265:32:6"
															},
															"nativeSrc": "3262:58:6",
															"nodeType": "YulIf",
															"src": "3262:58:6"
														}
													]
												},
												"name": "checked_mul_t_uint16",
												"nativeSrc": "3081:245:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3111:1:6",
														"nodeType": "YulTypedName",
														"src": "3111:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3114:1:6",
														"nodeType": "YulTypedName",
														"src": "3114:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3120:7:6",
														"nodeType": "YulTypedName",
														"src": "3120:7:6",
														"type": ""
													}
												],
												"src": "3081:245:6"
											},
											{
												"body": {
													"nativeSrc": "3488:188:6",
													"nodeType": "YulBlock",
													"src": "3488:188:6",
													"statements": [
														{
															"nativeSrc": "3498:26:6",
															"nodeType": "YulAssignment",
															"src": "3498:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3510:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3510:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3521:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3506:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3506:3:6"
																},
																"nativeSrc": "3506:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3506:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3498:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3498:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3540:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3540:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3555:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3555:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3571:3:6",
																								"nodeType": "YulLiteral",
																								"src": "3571:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3576:1:6",
																								"nodeType": "YulLiteral",
																								"src": "3576:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3567:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3567:3:6"
																						},
																						"nativeSrc": "3567:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3567:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3580:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3580:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3563:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3563:3:6"
																				},
																				"nativeSrc": "3563:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3563:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3551:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3551:3:6"
																		},
																		"nativeSrc": "3551:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3551:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3533:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3533:6:6"
																},
																"nativeSrc": "3533:51:6",
																"nodeType": "YulFunctionCall",
																"src": "3533:51:6"
															},
															"nativeSrc": "3533:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "3533:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3604:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3604:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3615:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3615:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3600:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3600:3:6"
																		},
																		"nativeSrc": "3600:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3600:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3620:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3620:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3593:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3593:6:6"
																},
																"nativeSrc": "3593:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3593:34:6"
															},
															"nativeSrc": "3593:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3593:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3647:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3647:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3658:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3658:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3643:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3643:3:6"
																		},
																		"nativeSrc": "3643:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3643:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3663:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3636:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3636:6:6"
																},
																"nativeSrc": "3636:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3636:34:6"
															},
															"nativeSrc": "3636:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3636:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3331:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3441:9:6",
														"nodeType": "YulTypedName",
														"src": "3441:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3452:6:6",
														"nodeType": "YulTypedName",
														"src": "3452:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3460:6:6",
														"nodeType": "YulTypedName",
														"src": "3460:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3468:6:6",
														"nodeType": "YulTypedName",
														"src": "3468:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3479:4:6",
														"nodeType": "YulTypedName",
														"src": "3479:4:6",
														"type": ""
													}
												],
												"src": "3331:345:6"
											},
											{
												"body": {
													"nativeSrc": "3729:77:6",
													"nodeType": "YulBlock",
													"src": "3729:77:6",
													"statements": [
														{
															"nativeSrc": "3739:16:6",
															"nodeType": "YulAssignment",
															"src": "3739:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3750:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3750:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3753:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3753:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3746:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3746:3:6"
																},
																"nativeSrc": "3746:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3746:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3739:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3739:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3778:22:6",
																"nodeType": "YulBlock",
																"src": "3778:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3780:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3780:16:6"
																			},
																			"nativeSrc": "3780:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3780:18:6"
																		},
																		"nativeSrc": "3780:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3780:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3770:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3770:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3773:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3773:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3767:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3767:2:6"
																},
																"nativeSrc": "3767:10:6",
																"nodeType": "YulFunctionCall",
																"src": "3767:10:6"
															},
															"nativeSrc": "3764:36:6",
															"nodeType": "YulIf",
															"src": "3764:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3681:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3712:1:6",
														"nodeType": "YulTypedName",
														"src": "3712:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3715:1:6",
														"nodeType": "YulTypedName",
														"src": "3715:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3721:3:6",
														"nodeType": "YulTypedName",
														"src": "3721:3:6",
														"type": ""
													}
												],
												"src": "3681:125:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint16(x, y) -> product\n    {\n        let _1 := 0xffff\n        let product_raw := mul(and(x, _1), and(y, _1))\n        product := and(product_raw, _1)\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c80636ac5db1911610097578063a9059cbb11610066578063a9059cbb146101f7578063ce266af81461020a578063dd62ed3e1461021d578063f5537ede1461025657600080fd5b80636ac5db19146101a057806370a08231146101b35780638da5cb5b146101dc57806395d89b41146101ef57600080fd5b806318160ddd116100d357806318160ddd1461016257806323b872dd14610174578063313ce567146101875780635cd07ee61461019657600080fd5b806305417143146100fa57806306fdde031461012a578063095ea7b31461013f575b600080fd5b60085461010d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610132610269565b60405161012191906106aa565b61015261014d366004610715565b6102fb565b6040519015158152602001610121565b6002545b604051908152602001610121565b61015261018236600461073f565b610315565b60405160068152602001610121565b61019e610339565b005b60075461010d906001600160a01b031681565b6101666101c136600461077b565b6001600160a01b031660009081526020819052604090205490565b60055461010d906001600160a01b031681565b610132610355565b610152610205366004610715565b610364565b60065461010d906001600160a01b031681565b61016661022b36600461079d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61019e61026436600461073f565b610372565b606060038054610278906107d0565b80601f01602080910402602001604051908101604052809291908181526020018280546102a4906107d0565b80156102f15780601f106102c6576101008083540402835291602001916102f1565b820191906000526020600020905b8154815290600101906020018083116102d457829003601f168201915b5050505050905090565b600033610309818585610382565b60019150505b92915050565b60003361032385828561038f565b61032e858585610412565b506001949350505050565b6103533361034a60066103e8610820565b61ffff16610471565b565b606060048054610278906107d0565b600033610309818585610412565b61037d838383610412565b505050565b61037d83838360016104ab565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461040c57818110156103fd57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61040c848484840360006104ab565b50505050565b6001600160a01b03831661043c57604051634b637e8f60e11b8152600060048201526024016103f4565b6001600160a01b0382166104665760405163ec442f0560e01b8152600060048201526024016103f4565b61037d838383610580565b6001600160a01b03821661049b5760405163ec442f0560e01b8152600060048201526024016103f4565b6104a760008383610580565b5050565b6001600160a01b0384166104d55760405163e602df0560e01b8152600060048201526024016103f4565b6001600160a01b0383166104ff57604051634a1406b160e11b8152600060048201526024016103f4565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561040c57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161057291815260200190565b60405180910390a350505050565b6001600160a01b0383166105ab5780600260008282546105a09190610846565b9091555061061d9050565b6001600160a01b038316600090815260208190526040902054818110156105fe5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103f4565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661063957600280548290039055610658565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161069d91815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b818110156106d8578581018301518582016040015282016106bc565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461071057600080fd5b919050565b6000806040838503121561072857600080fd5b610731836106f9565b946020939093013593505050565b60008060006060848603121561075457600080fd5b61075d846106f9565b925061076b602085016106f9565b9150604084013590509250925092565b60006020828403121561078d57600080fd5b610796826106f9565b9392505050565b600080604083850312156107b057600080fd5b6107b9836106f9565b91506107c7602084016106f9565b90509250929050565b600181811c908216806107e457607f821691505b60208210810361080457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b61ffff81811683821602808216919082811461083e5761083e61080a565b505092915050565b8082018082111561030f5761030f61080a56fea2646970667358221220f80a2837375bcd8ceced36d5046a8d3b12012704fdd411655155109e5c65013364736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6AC5DB19 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xCE266AF8 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xF5537EDE EQ PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6AC5DB19 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x5CD07EE6 EQ PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5417143 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x269 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x152 PUSH2 0x14D CALLDATASIZE PUSH1 0x4 PUSH2 0x715 JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x152 PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x339 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x166 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x355 JUMP JUMPDEST PUSH2 0x152 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x715 JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x10D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x166 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x79D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x278 SWAP1 PUSH2 0x7D0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2A4 SWAP1 PUSH2 0x7D0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x309 DUP2 DUP6 DUP6 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x323 DUP6 DUP3 DUP6 PUSH2 0x38F JUMP JUMPDEST PUSH2 0x32E DUP6 DUP6 DUP6 PUSH2 0x412 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x353 CALLER PUSH2 0x34A PUSH1 0x6 PUSH2 0x3E8 PUSH2 0x820 JUMP JUMPDEST PUSH2 0xFFFF AND PUSH2 0x471 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x278 SWAP1 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x309 DUP2 DUP6 DUP6 PUSH2 0x412 JUMP JUMPDEST PUSH2 0x37D DUP4 DUP4 DUP4 PUSH2 0x412 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x37D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x40C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40C DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x4AB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x37D DUP4 DUP4 DUP4 PUSH2 0x580 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x4A7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x580 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x40C JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x572 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5AB JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x846 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x61D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x5FE JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x639 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x658 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x69D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6D8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6BC JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x710 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x731 DUP4 PUSH2 0x6F9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75D DUP5 PUSH2 0x6F9 JUMP JUMPDEST SWAP3 POP PUSH2 0x76B PUSH1 0x20 DUP6 ADD PUSH2 0x6F9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x796 DUP3 PUSH2 0x6F9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B9 DUP4 PUSH2 0x6F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x7C7 PUSH1 0x20 DUP5 ADD PUSH2 0x6F9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7E4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x804 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xFFFF DUP2 DUP2 AND DUP4 DUP3 AND MUL DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP2 EQ PUSH2 0x83E JUMPI PUSH2 0x83E PUSH2 0x80A JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x30F JUMPI PUSH2 0x30F PUSH2 0x80A JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 EXP 0x28 CALLDATACOPY CALLDATACOPY JUMPDEST 0xCD DUP13 0xEC 0xED CALLDATASIZE 0xD5 DIV PUSH11 0x8D3B12012704FDD4116551 SSTORE LT SWAP15 0x5C PUSH6 0x13364736F6C PUSH4 0x43000816 STOP CALLER ",
							"sourceMap": "114:909:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;243:19;;;;;-1:-1:-1;;;;;243:19:5;;;;;;-1:-1:-1;;;;;178:32:6;;;160:51;;148:2;133:18;243:19:5;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;4293:186::-;;;;;;:::i;:::-;;:::i;:::-;;;1377:14:6;;1370:22;1352:41;;1340:2;1325:18;4293:186:1;1212:187:6;3144:97:1;3222:12;;3144:97;;;1550:25:6;;;1538:2;1523:18;3144:97:1;1404:177:6;5039:244:1;;;;;;:::i;:::-;;:::i;939:82:5:-;;;1013:1;2061:36:6;;2049:2;2034:18;939:82:5;1919:184:6;687:88:5;;;:::i;:::-;;219:18;;;;;-1:-1:-1;;;;;219:18:5;;;3299:116:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:1;3364:7;3390:18;;;;;;;;;;;;3299:116;169:20:5;;;;;-1:-1:-1;;;;;169:20:5;;;2276:93:1;;;:::i;3610:178::-;;;;;;:::i;:::-;;:::i;195:18:5:-;;;;;-1:-1:-1;;;;;195:18:5;;;3846:140:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:1;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;781:152:5;;;;;;:::i;:::-;;:::i;2074:89:1:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:4;4420:31:1;735:10:4;4436:7:1;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:4;5182:37:1;5198:4;735:10:4;5213:5:1;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:1;;5039:244;-1:-1:-1;;;;5039:244:1:o;687:88:5:-;728:40;734:10;746:21;1013:1;746:8;:21;:::i;:::-;728:40;;:5;:40::i;:::-;687:88::o;2276:93:1:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:4;3733:27:1;735:10:4;3750:2:1;3754:5;3733:9;:27::i;781:152:5:-;896:30;906:5;913:3;918:7;896:9;:30::i;:::-;781:152;;;:::o;8989:128:1:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;10663:477::-;-1:-1:-1;;;;;3952:18:1;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:1;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:1;;-1:-1:-1;;;;;3551:32:6;;10936:60:1;;;3533:51:6;3600:18;;;3593:34;;;3643:18;;;3636:34;;;3506:18;;10936:60:1;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:1;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:1;;5807:1;5780:30;;;160:51:6;133:18;;5780:30:1;14:203:6;5735:86:1;-1:-1:-1;;;;;5834:16:1;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:1;;5902:1;5873:32;;;160:51:6;133:18;;5873:32:1;14:203:6;5830:86:1;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;7721:208::-;-1:-1:-1;;;;;7791:21:1;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:1;;7864:1;7835:32;;;160:51:6;133:18;;7835:32:1;14:203:6;7787:91:1;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;9949:432::-;-1:-1:-1;;;;;10061:19:1;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:1;;10132:1;10103:32;;;160:51:6;133:18;;10103:32:1;14:203:6;10057:89:1;-1:-1:-1;;;;;10159:21:1;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:1;;10231:1;10203:31;;;160:51:6;133:18;;10203:31:1;14:203:6;10155:90:1;-1:-1:-1;;;;;10254:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:1;10342:5;-1:-1:-1;;;;;10333:31:1;;10358:5;10333:31;;;;1550:25:6;;1538:2;1523:18;;1404:177;10333:31:1;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:1;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:1;;-1:-1:-1;6356:540:1;;-1:-1:-1;;;;;6570:15:1;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:1;;-1:-1:-1;;;;;3551:32:6;;6649:50:1;;;3533:51:6;3600:18;;;3593:34;;;3643:18;;;3636:34;;;3506:18;;6649:50:1;3331:345:6;6599:115:1;-1:-1:-1;;;;;6834:15:1;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:1;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:1;7355:4;-1:-1:-1;;;;;7346:25:1;;7365:5;7346:25;;;;1550::6;;1538:2;1523:18;;1404:177;7346:25:1;;;;;;;;6271:1107;;;:::o;222:548:6:-;334:4;363:2;392;381:9;374:21;424:6;418:13;467:6;462:2;451:9;447:18;440:34;492:1;502:140;516:6;513:1;510:13;502:140;;;611:14;;;607:23;;601:30;577:17;;;596:2;573:26;566:66;531:10;;502:140;;;506:3;691:1;686:2;677:6;666:9;662:22;658:31;651:42;761:2;754;750:7;745:2;737:6;733:15;729:29;718:9;714:45;710:54;702:62;;;;222:548;;;;:::o;775:173::-;843:20;;-1:-1:-1;;;;;892:31:6;;882:42;;872:70;;938:1;935;928:12;872:70;775:173;;;:::o;953:254::-;1021:6;1029;1082:2;1070:9;1061:7;1057:23;1053:32;1050:52;;;1098:1;1095;1088:12;1050:52;1121:29;1140:9;1121:29;:::i;:::-;1111:39;1197:2;1182:18;;;;1169:32;;-1:-1:-1;;;953:254:6:o;1586:328::-;1663:6;1671;1679;1732:2;1720:9;1711:7;1707:23;1703:32;1700:52;;;1748:1;1745;1738:12;1700:52;1771:29;1790:9;1771:29;:::i;:::-;1761:39;;1819:38;1853:2;1842:9;1838:18;1819:38;:::i;:::-;1809:48;;1904:2;1893:9;1889:18;1876:32;1866:42;;1586:328;;;;;:::o;2108:186::-;2167:6;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;2108:186;-1:-1:-1;;;2108:186:6:o;2299:260::-;2367:6;2375;2428:2;2416:9;2407:7;2403:23;2399:32;2396:52;;;2444:1;2441;2434:12;2396:52;2467:29;2486:9;2467:29;:::i;:::-;2457:39;;2515:38;2549:2;2538:9;2534:18;2515:38;:::i;:::-;2505:48;;2299:260;;;;;:::o;2564:380::-;2643:1;2639:12;;;;2686;;;2707:61;;2761:4;2753:6;2749:17;2739:27;;2707:61;2814:2;2806:6;2803:14;2783:18;2780:38;2777:161;;2860:10;2855:3;2851:20;2848:1;2841:31;2895:4;2892:1;2885:15;2923:4;2920:1;2913:15;2777:161;;2564:380;;;:::o;2949:127::-;3010:10;3005:3;3001:20;2998:1;2991:31;3041:4;3038:1;3031:15;3065:4;3062:1;3055:15;3081:245;3152:6;3190:10;;;3202;;;3186:27;3233:20;;;;3152:6;3272:24;;;3262:58;;3300:18;;:::i;:::-;3262:58;;3081:245;;;;:::o;3681:125::-;3746:9;;;3767:10;;;3764:36;;;3780:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "438200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24784",
								"balanceOf(address)": "2585",
								"decimals()": "244",
								"getRewrdCode()": "51005",
								"jack()": "2350",
								"max()": "2349",
								"name()": "infinite",
								"owner()": "2393",
								"symbol()": "infinite",
								"tom()": "2370",
								"totalSupply()": "2304",
								"transfer(address,uint256)": "51244",
								"transferFrom(address,address,uint256)": "infinite",
								"transferToken(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 114,
									"end": 1023,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 114,
									"end": 1023,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 114,
									"end": 1023,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 269,
									"end": 681,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 269,
									"end": 681,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 269,
									"end": 681,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 269,
									"end": 681,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 269,
									"end": 681,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 269,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 269,
									"end": 681,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 269,
									"end": 681,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 269,
									"end": 681,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 269,
									"end": 681,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 269,
									"end": 681,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "C"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "141C9BD999995CDA5BDB985B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50524F4649"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 293,
									"end": 298,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 293,
									"end": 311,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 293,
									"end": 311,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 293,
									"end": 311,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 293,
									"end": 311,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 293,
									"end": 311,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 301,
									"end": 311,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 293,
									"end": 311,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 293,
									"end": 311,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 293,
									"end": 311,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 293,
									"end": 311,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 293,
									"end": 311,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 293,
									"end": 311,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 321,
									"end": 324,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 321,
									"end": 369,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 321,
									"end": 369,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 321,
									"end": 369,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 321,
									"end": 369,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 327,
									"end": 369,
									"name": "PUSH",
									"source": 5,
									"value": "CB3A5467756F86692FB3336C58EC41C16B9BEBDF"
								},
								{
									"begin": 321,
									"end": 369,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 321,
									"end": 369,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 321,
									"end": 369,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 379,
									"end": 382,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 379,
									"end": 427,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 379,
									"end": 427,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 379,
									"end": 427,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 379,
									"end": 427,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 385,
									"end": 427,
									"name": "PUSH",
									"source": 5,
									"value": "BD0233D4CB7ABE917F79F0E80DC7676F4CB818E1"
								},
								{
									"begin": 379,
									"end": 427,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 379,
									"end": 427,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 379,
									"end": 427,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 437,
									"end": 441,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 437,
									"end": 486,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 437,
									"end": 486,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 437,
									"end": 486,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 437,
									"end": 486,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 437,
									"end": 486,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 444,
									"end": 486,
									"name": "PUSH",
									"source": 5,
									"value": "7CE4B5D0504EDF27EC43610F8679E84BDF81A0B8"
								},
								{
									"begin": 437,
									"end": 486,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 437,
									"end": 486,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 437,
									"end": 486,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 497,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 497,
									"end": 535,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 524,
									"end": 534,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1013,
									"end": 1014,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1013,
									"end": 1014,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1021,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 524,
									"end": 534,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 524,
									"end": 534,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 520,
									"end": 534,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 520,
									"end": 534,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 520,
									"end": 522,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 520,
									"end": 534,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 520,
									"end": 534,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 520,
									"end": 534,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 520,
									"end": 534,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 510,
									"end": 534,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 510,
									"end": 534,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 510,
									"end": 517,
									"name": "PUSH",
									"source": 5,
									"value": "186A0"
								},
								{
									"begin": 510,
									"end": 534,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 510,
									"end": 534,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 510,
									"end": 534,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 510,
									"end": 534,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 497,
									"end": 502,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 497,
									"end": 535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 497,
									"end": 535,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 497,
									"end": 535,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 551,
									"end": 554,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 551,
									"end": 554,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 545,
									"end": 581,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 545,
									"end": 581,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 551,
									"end": 554,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 570,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1013,
									"end": 1014,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1013,
									"end": 1014,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 939,
									"end": 1021,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 570,
									"end": 580,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 570,
									"end": 580,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 566,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 566,
									"end": 580,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 566,
									"end": 568,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 566,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 566,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 566,
									"end": 580,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 566,
									"end": 580,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 556,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 556,
									"end": 580,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 556,
									"end": 563,
									"name": "PUSH",
									"source": 5,
									"value": "30D40"
								},
								{
									"begin": 556,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 556,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 545,
									"end": 581,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 545,
									"end": 581,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 597,
									"end": 600,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 597,
									"end": 600,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 591,
									"end": 627,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 591,
									"end": 627,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 597,
									"end": 600,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 612,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 1013,
									"end": 1014,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 612,
									"end": 614,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 612,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 612,
									"end": 626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 612,
									"end": 626,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 612,
									"end": 626,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 602,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 602,
									"end": 626,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 602,
									"end": 609,
									"name": "PUSH",
									"source": 5,
									"value": "493E0"
								},
								{
									"begin": 602,
									"end": 626,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 602,
									"end": 626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 591,
									"end": 627,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 591,
									"end": 627,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 643,
									"end": 647,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 643,
									"end": 647,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 637,
									"end": 674,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 637,
									"end": 674,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 643,
									"end": 647,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 659,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1013,
									"end": 1014,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 659,
									"end": 661,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 659,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 659,
									"end": 673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 659,
									"end": 673,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 659,
									"end": 673,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 649,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 649,
									"end": 673,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 649,
									"end": 656,
									"name": "PUSH",
									"source": 5,
									"value": "61A80"
								},
								{
									"begin": 649,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 649,
									"end": 673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 637,
									"end": 674,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 637,
									"end": 674,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 114,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 114,
									"end": 1023,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4605,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4527,
									"end": 4545,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4527,
									"end": 4545,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4966,
									"end": 4998,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4966,
									"end": 4998,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4948,
									"end": 4999,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5015,
									"end": 5033,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 5015,
									"end": 5033,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5015,
									"end": 5033,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5008,
									"end": 5042,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5008,
									"end": 5042,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5008,
									"end": 5042,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5058,
									"end": 5076,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 5058,
									"end": 5076,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5058,
									"end": 5076,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5051,
									"end": 5085,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5051,
									"end": 5085,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5051,
									"end": 5085,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4921,
									"end": 4939,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 4921,
									"end": 4939,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 4746,
									"end": 5091,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5242,
									"end": 5267,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5242,
									"end": 5267,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5230,
									"end": 5232,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5215,
									"end": 5233,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5215,
									"end": 5233,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5096,
									"end": 5273,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 819,
									"end": 824,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 816,
									"end": 817,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 825,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 863,
									"end": 867,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 860,
									"end": 861,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 850,
									"end": 868,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 933,
									"end": 935,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 921,
									"end": 931,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 917,
									"end": 936,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 914,
									"end": 915,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 910,
									"end": 937,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 904,
									"end": 908,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 900,
									"end": 938,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 969,
									"end": 973,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 957,
									"end": 967,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 954,
									"end": 974,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 951,
									"end": 998,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 951,
									"end": 998,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 951,
									"end": 998,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 992,
									"end": 996,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 951,
									"end": 998,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 951,
									"end": 998,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1047,
									"end": 1049,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1042,
									"end": 1045,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1038,
									"end": 1050,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1035,
									"end": 1036,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1031,
									"end": 1051,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1025,
									"end": 1029,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 1052,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1052,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1052,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1120,
									"end": 1122,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1110,
									"end": 1123,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1182,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1182,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1182,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1146,
									"end": 1147,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1135,
									"end": 1148,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1106,
									"end": 1109,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1106,
									"end": 1109,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1106,
									"end": 1109,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1200,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1376,
									"end": 2721,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1376,
									"end": 2721,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1496,
									"end": 1506,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1496,
									"end": 1506,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1518,
									"end": 1548,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1518,
									"end": 1548,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1515,
									"end": 1571,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1515,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 1515,
									"end": 1571,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1551,
									"end": 1569,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 1551,
									"end": 1569,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1551,
									"end": 1569,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1551,
									"end": 1569,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 1551,
									"end": 1569,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1580,
									"end": 1677,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1630,
									"end": 1668,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1667,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1630,
									"end": 1668,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1630,
									"end": 1668,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1630,
									"end": 1668,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 1630,
									"end": 1668,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1624,
									"end": 1628,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1580,
									"end": 1677,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1580,
									"end": 1677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1580,
									"end": 1677,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1580,
									"end": 1677,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1732,
									"end": 1736,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1736,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1789,
									"end": 1791,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1778,
									"end": 1792,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1778,
									"end": 1792,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1806,
									"end": 1807,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2508,
									"end": 2509,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2577,
									"end": 2596,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2577,
									"end": 2596,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2577,
									"end": 2596,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2571,
									"end": 2597,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1333,
									"end": 1334,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1329,
									"end": 1340,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1340,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1340,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1325,
									"end": 1349,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1321,
									"end": 1350,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1351,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1357,
									"end": 1358,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1353,
									"end": 1364,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1364,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1364,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1308,
									"end": 1365,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2705,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2705,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 2715,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 1771,
									"end": 2715,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1837,
									"end": 1857,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1837,
									"end": 1857,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1837,
									"end": 1857,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1969,
									"end": 1976,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 1967,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 1977,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2077,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2077,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2077,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2052,
									"end": 2078,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2037,
									"end": 2079,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2037,
									"end": 2079,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2150,
									"end": 2177,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2150,
									"end": 2177,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2150,
									"end": 2177,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2150,
									"end": 2177,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2118,
									"end": 2119,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2106,
									"end": 2120,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2120,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2120,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2106,
									"end": 2120,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1985,
									"end": 2004,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1985,
									"end": 2004,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1959,
									"end": 1962,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2219,
									"end": 2225,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2210,
									"end": 2217,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2207,
									"end": 2226,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2280,
									"end": 2299,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2280,
									"end": 2299,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2280,
									"end": 2299,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2274,
									"end": 2300,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2363,
									"end": 2364,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2359,
									"end": 2373,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 2359,
									"end": 2373,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2359,
									"end": 2373,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2375,
									"end": 2378,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 2355,
									"end": 2379,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2351,
									"end": 2388,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2347,
									"end": 2389,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2332,
									"end": 2390,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2317,
									"end": 2391,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2317,
									"end": 2391,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2451,
									"end": 2452,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2435,
									"end": 2449,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2435,
									"end": 2449,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2435,
									"end": 2449,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2431,
									"end": 2453,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2454,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1376,
									"end": 2721,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2726,
									"end": 2853,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 2726,
									"end": 2853,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2787,
									"end": 2797,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 2782,
									"end": 2785,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 2778,
									"end": 2798,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2775,
									"end": 2776,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2768,
									"end": 2799,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2818,
									"end": 2822,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 2815,
									"end": 2816,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2808,
									"end": 2823,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2842,
									"end": 2846,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2839,
									"end": 2840,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2832,
									"end": 2847,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 3274,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2858,
									"end": 3274,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2947,
									"end": 2948,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2984,
									"end": 2989,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2947,
									"end": 2948,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2998,
									"end": 3268,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 2998,
									"end": 3268,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3019,
									"end": 3026,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3009,
									"end": 3017,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3006,
									"end": 3027,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2998,
									"end": 3268,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2998,
									"end": 3268,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 2998,
									"end": 3268,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3078,
									"end": 3082,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3074,
									"end": 3075,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3070,
									"end": 3076,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3066,
									"end": 3083,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3060,
									"end": 3064,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3057,
									"end": 3084,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3054,
									"end": 3107,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3054,
									"end": 3107,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 3054,
									"end": 3107,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3087,
									"end": 3105,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 3087,
									"end": 3105,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 3087,
									"end": 3105,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3087,
									"end": 3105,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 3087,
									"end": 3105,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3137,
									"end": 3144,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3135,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3123,
									"end": 3145,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3120,
									"end": 3175,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3120,
									"end": 3175,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 3120,
									"end": 3175,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3157,
									"end": 3173,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3157,
									"end": 3173,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3157,
									"end": 3173,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3157,
									"end": 3173,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3120,
									"end": 3175,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 3120,
									"end": 3175,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3258,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3258,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3258,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3258,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3196,
									"end": 3211,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3196,
									"end": 3211,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3196,
									"end": 3211,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3196,
									"end": 3211,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2998,
									"end": 3268,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 2998,
									"end": 3268,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2998,
									"end": 3268,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 2998,
									"end": 3268,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3002,
									"end": 3005,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 3274,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 3274,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 3274,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 3274,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 3274,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2858,
									"end": 3274,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3279,
									"end": 4085,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 3279,
									"end": 4085,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3328,
									"end": 3333,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3358,
									"end": 3366,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3348,
									"end": 3428,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 3348,
									"end": 3428,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3399,
									"end": 3400,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3413,
									"end": 3418,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3413,
									"end": 3418,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3348,
									"end": 3428,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 3348,
									"end": 3428,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3447,
									"end": 3451,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3437,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 3437,
									"end": 3513,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3498,
									"end": 3503,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3498,
									"end": 3503,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3437,
									"end": 3513,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 3437,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3529,
									"end": 3533,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3547,
									"end": 3548,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3542,
									"end": 3601,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3601,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3601,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 3542,
									"end": 3601,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3615,
									"end": 3616,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3610,
									"end": 3740,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3610,
									"end": 3740,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3610,
									"end": 3740,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 3610,
									"end": 3740,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3522,
									"end": 3740,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 3522,
									"end": 3740,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3542,
									"end": 3601,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 3542,
									"end": 3601,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3572,
									"end": 3573,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3563,
									"end": 3573,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3563,
									"end": 3573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3586,
									"end": 3591,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3586,
									"end": 3591,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3586,
									"end": 3591,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3610,
									"end": 3740,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 3610,
									"end": 3740,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3647,
									"end": 3650,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 3637,
									"end": 3645,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3634,
									"end": 3651,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3674,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3631,
									"end": 3674,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 3631,
									"end": 3674,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3654,
									"end": 3672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 3654,
									"end": 3672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 3654,
									"end": 3672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3654,
									"end": 3672,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 3654,
									"end": 3672,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3710,
									"end": 3711,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3696,
									"end": 3712,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3696,
									"end": 3712,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3725,
									"end": 3730,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3725,
									"end": 3730,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3522,
									"end": 3740,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 3522,
									"end": 3740,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3522,
									"end": 3740,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3824,
									"end": 3826,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3814,
									"end": 3822,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3811,
									"end": 3827,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3805,
									"end": 3808,
									"name": "PUSH",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 3799,
									"end": 3803,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3796,
									"end": 3809,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3792,
									"end": 3828,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3786,
									"end": 3788,
									"name": "PUSH",
									"source": 6,
									"value": "4E"
								},
								{
									"begin": 3776,
									"end": 3784,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3773,
									"end": 3789,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3768,
									"end": 3770,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 3762,
									"end": 3766,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3759,
									"end": 3771,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3790,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3752,
									"end": 3829,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3749,
									"end": 3908,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3749,
									"end": 3908,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3749,
									"end": 3908,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3861,
									"end": 3880,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3861,
									"end": 3880,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3861,
									"end": 3880,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 3893,
									"end": 3898,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3893,
									"end": 3898,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3749,
									"end": 3908,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 3749,
									"end": 3908,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3940,
									"end": 3974,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 3965,
									"end": 3973,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3959,
									"end": 3963,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3940,
									"end": 3974,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3940,
									"end": 3974,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3940,
									"end": 3974,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 3940,
									"end": 3974,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4010,
									"end": 4016,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4006,
									"end": 4007,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4002,
									"end": 4008,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3989,
									"end": 3996,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3986,
									"end": 4018,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3983,
									"end": 4041,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3983,
									"end": 4041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 3983,
									"end": 4041,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4021,
									"end": 4039,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 4021,
									"end": 4039,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 4021,
									"end": 4039,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4021,
									"end": 4039,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 4021,
									"end": 4039,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4059,
									"end": 4079,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4059,
									"end": 4079,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3279,
									"end": 4085,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3279,
									"end": 4085,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3279,
									"end": 4085,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3279,
									"end": 4085,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3279,
									"end": 4085,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3279,
									"end": 4085,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3279,
									"end": 4085,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4090,
									"end": 4230,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 4090,
									"end": 4230,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4148,
									"end": 4153,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4177,
									"end": 4224,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 4218,
									"end": 4222,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 4208,
									"end": 4216,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4204,
									"end": 4223,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4198,
									"end": 4202,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4177,
									"end": 4224,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 4177,
									"end": 4224,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4177,
									"end": 4224,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 4177,
									"end": 4224,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4168,
									"end": 4224,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 4090,
									"end": 4230,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4090,
									"end": 4230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4235,
									"end": 4403,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 4235,
									"end": 4403,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4308,
									"end": 4317,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4308,
									"end": 4317,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4308,
									"end": 4317,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4339,
									"end": 4348,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4339,
									"end": 4348,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4356,
									"end": 4371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4356,
									"end": 4371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4356,
									"end": 4371,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4350,
									"end": 4372,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4350,
									"end": 4372,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 4336,
									"end": 4373,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4326,
									"end": 4397,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 4326,
									"end": 4397,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4377,
									"end": 4395,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 4377,
									"end": 4395,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 4377,
									"end": 4395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4616,
									"end": 4741,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4616,
									"end": 4741,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4681,
									"end": 4690,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4681,
									"end": 4690,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4681,
									"end": 4690,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4702,
									"end": 4712,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4702,
									"end": 4712,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4702,
									"end": 4712,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4699,
									"end": 4735,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4699,
									"end": 4735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 4699,
									"end": 4735,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4715,
									"end": 4733,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 4715,
									"end": 4733,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 4715,
									"end": 4733,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5096,
									"end": 5273,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 5096,
									"end": 5273,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 114,
									"end": 1023,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 1023,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 114,
									"end": 1023,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 114,
									"end": 1023,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 1023,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 114,
									"end": 1023,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 114,
									"end": 1023,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f80a2837375bcd8ceced36d5046a8d3b12012704fdd411655155109e5c65013364736f6c63430008160033",
									".code": [
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "6AC5DB19"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "CE266AF8"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "F5537EDE"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "6AC5DB19"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "5CD07EE6"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "5417143"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 114,
											"end": 1023,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 243,
											"end": 262,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 243,
											"end": 262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 243,
											"end": 262,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 243,
											"end": 262,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 243,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 243,
											"end": 262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 243,
											"end": 262,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 243,
											"end": 262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 243,
											"end": 262,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 243,
											"end": 262,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 243,
											"end": 262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 243,
											"end": 262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 243,
											"end": 262,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 243,
											"end": 262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 243,
											"end": 262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 243,
											"end": 262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 243,
											"end": 262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 243,
											"end": 262,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 243,
											"end": 262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 243,
											"end": 262,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1391,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1391,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1392,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1352,
											"end": 1393,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1342,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1325,
											"end": 1343,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1212,
											"end": 1399,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1575,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1538,
											"end": 1540,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1404,
											"end": 1581,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1021,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 939,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1021,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 1021,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1013,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2061,
											"end": 2097,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2097,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2051,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2052,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1919,
											"end": 2103,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 687,
											"end": 775,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 687,
											"end": 775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 687,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 687,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 687,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 687,
											"end": 775,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 687,
											"end": 775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 687,
											"end": 775,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 219,
											"end": 237,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 219,
											"end": 237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 219,
											"end": 237,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 219,
											"end": 237,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 219,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 219,
											"end": 237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 219,
											"end": 237,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 219,
											"end": 237,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 219,
											"end": 237,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 169,
											"end": 189,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 169,
											"end": 189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 169,
											"end": 189,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 169,
											"end": 189,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 169,
											"end": 189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 169,
											"end": 189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 169,
											"end": 189,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 169,
											"end": 189,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 169,
											"end": 189,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 195,
											"end": 213,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 195,
											"end": 213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 195,
											"end": 213,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 195,
											"end": 213,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 195,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 195,
											"end": 213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 195,
											"end": 213,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 195,
											"end": 213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 195,
											"end": 213,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 933,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 781,
											"end": 933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 781,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 781,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 781,
											"end": 933,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 781,
											"end": 933,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 781,
											"end": 933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 781,
											"end": 933,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 781,
											"end": 933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 781,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 781,
											"end": 933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 687,
											"end": 775,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 687,
											"end": 775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 728,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 746,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1013,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 746,
											"end": 754,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 746,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 746,
											"end": 767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 746,
											"end": 767,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 746,
											"end": 767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 728,
											"end": 768,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF"
										},
										{
											"begin": 728,
											"end": 768,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 728,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 728,
											"end": 768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 728,
											"end": 768,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 728,
											"end": 768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 687,
											"end": 775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 933,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 781,
											"end": 933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 896,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 913,
											"end": 916,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 896,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 896,
											"end": 926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 896,
											"end": 926,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 896,
											"end": 926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 781,
											"end": 933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 781,
											"end": 933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 781,
											"end": 933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 781,
											"end": 933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3583,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3583,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3584,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3627,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3627,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3643,
											"end": 3661,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 3661,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3670,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3670,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1575,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1538,
											"end": 1540,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1581,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3583,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3583,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3584,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3600,
											"end": 3618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3627,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3627,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3643,
											"end": 3661,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 3661,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3670,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3636,
											"end": 3670,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3506,
											"end": 3524,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3331,
											"end": 3676,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1575,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1538,
											"end": 1540,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1581,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 222,
											"end": 770,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 222,
											"end": 770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 334,
											"end": 338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 365,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 392,
											"end": 394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 381,
											"end": 390,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 374,
											"end": 395,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 424,
											"end": 430,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 418,
											"end": 431,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 467,
											"end": 473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 464,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 451,
											"end": 460,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 447,
											"end": 465,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 440,
											"end": 474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 492,
											"end": 493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 642,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 502,
											"end": 642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 513,
											"end": 514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 510,
											"end": 523,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 502,
											"end": 642,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 502,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 502,
											"end": 642,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 611,
											"end": 625,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 611,
											"end": 625,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 630,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 607,
											"end": 630,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 601,
											"end": 631,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 577,
											"end": 594,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 577,
											"end": 594,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 577,
											"end": 594,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 596,
											"end": 598,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 599,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 566,
											"end": 632,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 531,
											"end": 541,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 531,
											"end": 541,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 502,
											"end": 642,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 502,
											"end": 642,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 502,
											"end": 642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 506,
											"end": 509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 691,
											"end": 692,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 688,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 677,
											"end": 683,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 666,
											"end": 675,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 662,
											"end": 684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 658,
											"end": 689,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 651,
											"end": 693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 761,
											"end": 763,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 750,
											"end": 757,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 745,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 737,
											"end": 743,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 733,
											"end": 748,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 729,
											"end": 758,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 718,
											"end": 727,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 714,
											"end": 759,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 710,
											"end": 764,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 702,
											"end": 764,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 702,
											"end": 764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 702,
											"end": 764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 702,
											"end": 764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 222,
											"end": 770,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 222,
											"end": 770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 222,
											"end": 770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 222,
											"end": 770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 222,
											"end": 770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 775,
											"end": 948,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 775,
											"end": 948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 843,
											"end": 863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 843,
											"end": 863,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 892,
											"end": 923,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 892,
											"end": 923,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 882,
											"end": 924,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 882,
											"end": 924,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 872,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 872,
											"end": 942,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 938,
											"end": 939,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 940,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 872,
											"end": 942,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 872,
											"end": 942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 775,
											"end": 948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 775,
											"end": 948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 775,
											"end": 948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 775,
											"end": 948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 953,
											"end": 1207,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 953,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1027,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1035,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1084,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1079,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1061,
											"end": 1068,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1080,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1053,
											"end": 1085,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1102,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1050,
											"end": 1102,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1099,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1096,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1100,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1102,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1050,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1140,
											"end": 1149,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1121,
											"end": 1150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1150,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1121,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1111,
											"end": 1150,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1199,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1182,
											"end": 1200,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1182,
											"end": 1200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1182,
											"end": 1200,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1182,
											"end": 1200,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1201,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1201,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 953,
											"end": 1207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1586,
											"end": 1914,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1586,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1663,
											"end": 1669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1677,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1720,
											"end": 1729,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1707,
											"end": 1730,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1735,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1700,
											"end": 1752,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1700,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1700,
											"end": 1752,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1748,
											"end": 1749,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1746,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1750,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1700,
											"end": 1752,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1700,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1790,
											"end": 1799,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1771,
											"end": 1800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1800,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1771,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1800,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1819,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1853,
											"end": 1855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1842,
											"end": 1851,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1819,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1819,
											"end": 1857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1819,
											"end": 1857,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1819,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1809,
											"end": 1857,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1809,
											"end": 1857,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1902,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1907,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1908,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1908,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1586,
											"end": 1914,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1586,
											"end": 1914,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1586,
											"end": 1914,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1586,
											"end": 1914,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1586,
											"end": 1914,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1586,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2294,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2108,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2294,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2381,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2430,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2426,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2431,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2442,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2486,
											"end": 2495,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2467,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2496,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2496,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2515,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2505,
											"end": 2553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2505,
											"end": 2553,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2644,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2765,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 2753,
											"end": 2759,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2766,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2766,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2739,
											"end": 2766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2816,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2806,
											"end": 2812,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2817,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2818,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2860,
											"end": 2870,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2855,
											"end": 2858,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2851,
											"end": 2871,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2872,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2899,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2892,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 2927,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2920,
											"end": 2921,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2928,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 3076,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2949,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3010,
											"end": 3020,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3005,
											"end": 3008,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3001,
											"end": 3021,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2998,
											"end": 2999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3045,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3038,
											"end": 3039,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3031,
											"end": 3046,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3069,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3070,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3081,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "PUSH",
											"source": 6,
											"value": "FFFF"
										},
										{
											"begin": 3190,
											"end": 3200,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3200,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3190,
											"end": 3200,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3186,
											"end": 3213,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3296,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3296,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3296,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3262,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3262,
											"end": 3320,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3300,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3300,
											"end": 3318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3318,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3300,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3262,
											"end": 3320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3262,
											"end": 3320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3326,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3326,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3806,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 3681,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3746,
											"end": 3755,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3746,
											"end": 3755,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3746,
											"end": 3755,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3777,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3777,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3800,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3764,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3764,
											"end": 3800,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3780,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3780,
											"end": 3798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getRewrdCode()": "5cd07ee6",
							"jack()": "05417143",
							"max()": "6ac5db19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"tom()": "ce266af8",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferToken(address,address,uint256)": "f5537ede"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewrdCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"jack\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"max\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tom\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Token.sol\":\"Token\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"contracts/Token.sol\":{\"keccak256\":\"0x79e2edc56eb92cfc4ed3e803c942ab50d7115033df34f916939536f3a5ef7c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a2e2ecdeec4db63dfc0a0a5a6f302c19437cbbc6888f4e8fbea1370a33f58b2\",\"dweb:/ipfs/QmURaP7cQre31AnqJnBMzm1U8Hvs62rG47jAzYRvEKA5qR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/Token.sol:Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/Token.sol:Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/Token.sol:Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/Token.sol:Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/Token.sol:Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 786,
								"contract": "contracts/Token.sol:Token",
								"label": "owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 788,
								"contract": "contracts/Token.sol:Token",
								"label": "tom",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 790,
								"contract": "contracts/Token.sol:Token",
								"label": "max",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 792,
								"contract": "contracts/Token.sol:Token",
								"label": "jack",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							777
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 778,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 777,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 777,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								777
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							777
						]
					},
					"id": 778,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 777,
							"linearizedBaseContracts": [
								777
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 777,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 777,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 778,
							"src": "624:235:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:4"
				},
				"id": 4
			},
			"contracts/Token.sol": {
				"ast": {
					"absolutePath": "contracts/Token.sol",
					"exportedSymbols": {
						"Context": [
							777
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"Token": [
							894
						]
					},
					"id": 895,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 779,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 895,
							"sourceUnit": 652,
							"src": "57:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"hexValue": "50726f66666573696f6e616c",
											"id": 782,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "138:14:5",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_a7940081ed8e773f1d8945e48159b72b4db7ce37fc7f9946c28efc3c7b9b6941",
												"typeString": "literal_string \"Proffesional\""
											},
											"value": "Proffesional"
										},
										{
											"hexValue": "50524f4649",
											"id": 783,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "string",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "154:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_stringliteral_1c0e351c1dc9258720bfb058e4530817ba474cd5ea4da98ec41a516d2fcc0ff8",
												"typeString": "literal_string \"PROFI\""
											},
											"value": "PROFI"
										}
									],
									"baseName": {
										"id": 781,
										"name": "ERC20",
										"nameLocations": [
											"132:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "132:5:5"
									},
									"id": 784,
									"nodeType": "InheritanceSpecifier",
									"src": "132:30:5"
								}
							],
							"canonicalName": "Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 894,
							"linearizedBaseContracts": [
								894,
								651,
								41,
								755,
								729,
								777
							],
							"name": "Token",
							"nameLocation": "123:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 786,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "184:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 894,
									"src": "169:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 785,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "169:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ce266af8",
									"id": 788,
									"mutability": "mutable",
									"name": "tom",
									"nameLocation": "210:3:5",
									"nodeType": "VariableDeclaration",
									"scope": 894,
									"src": "195:18:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 787,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "195:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6ac5db19",
									"id": 790,
									"mutability": "mutable",
									"name": "max",
									"nameLocation": "234:3:5",
									"nodeType": "VariableDeclaration",
									"scope": 894,
									"src": "219:18:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 789,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "219:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "05417143",
									"id": 792,
									"mutability": "mutable",
									"name": "jack",
									"nameLocation": "258:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 894,
									"src": "243:19:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 791,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "243:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "283:398:5",
										"statements": [
											{
												"expression": {
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 795,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "293:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 796,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "301:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "305:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "301:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "293:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "293:18:5"
											},
											{
												"expression": {
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 800,
														"name": "tom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "321:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307863423361353436373735364638363639324642333333366335384543343163313642394245426446",
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "327:42:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xcB3a5467756F86692FB3336c58EC41c16B9BEBdF"
													},
													"src": "321:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "321:48:5"
											},
											{
												"expression": {
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 804,
														"name": "max",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "379:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307862443032333344346362376162453931374637396630453830444337363736463463623831386531",
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "385:42:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xbD0233D4cb7abE917F79f0E80DC7676F4cb818e1"
													},
													"src": "379:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "379:48:5"
											},
											{
												"expression": {
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 808,
														"name": "jack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "437:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307837434534423544303530344564463237656334333631304638363739453834424446383161306238",
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "444:42:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x7CE4B5D0504EdF27ec43610F8679E84BDF81a0b8"
													},
													"src": "437:49:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "437:49:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 813,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "503:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130305f303030",
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "510:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000_by_1",
																	"typeString": "int_const 100000"
																},
																"value": "100_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "520:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 816,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			893
																		],
																		"referencedDeclaration": 893,
																		"src": "524:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint8_$",
																			"typeString": "function () pure returns (uint8)"
																		}
																	},
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "524:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "520:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "510:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 812,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "497:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "497:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "497:38:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 823,
															"name": "tom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "551:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3230305f303030",
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "556:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_200000_by_1",
																	"typeString": "int_const 200000"
																},
																"value": "200_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "566:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 826,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			893
																		],
																		"referencedDeclaration": 893,
																		"src": "570:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint8_$",
																			"typeString": "function () pure returns (uint8)"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "570:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "566:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "556:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 822,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "545:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "545:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "545:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 833,
															"name": "max",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "597:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3330305f303030",
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "602:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_300000_by_1",
																	"typeString": "int_const 300000"
																},
																"value": "300_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "612:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 836,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			893
																		],
																		"referencedDeclaration": 893,
																		"src": "616:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint8_$",
																			"typeString": "function () pure returns (uint8)"
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "616:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "612:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "602:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 832,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "591:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "591:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "591:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 843,
															"name": "jack",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "643:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3430305f303030",
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "649:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_400000_by_1",
																	"typeString": "int_const 400000"
																},
																"value": "400_000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "659:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 846,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			893
																		],
																		"referencedDeclaration": 893,
																		"src": "663:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint8_$",
																			"typeString": "function () pure returns (uint8)"
																		}
																	},
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "663:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "659:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "649:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 842,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "637:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "637:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "637:37:5"
											}
										]
									},
									"id": 853,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "280:2:5"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "283:0:5"
									},
									"scope": 894,
									"src": "269:412:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "718:57:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 857,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "734:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "738:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "734:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313030",
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "746:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "752:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "746:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 862,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		893
																	],
																	"referencedDeclaration": 893,
																	"src": "757:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint8_$",
																		"typeString": "function () pure returns (uint8)"
																	}
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "757:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "746:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 856,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "728:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "728:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "728:40:5"
											}
										]
									},
									"functionSelector": "5cd07ee6",
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewrdCode",
									"nameLocation": "696:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "708:2:5"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "718:0:5"
									},
									"scope": 894,
									"src": "687:88:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "886:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 878,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "906:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 879,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "913:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 880,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "918:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 877,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "896:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "896:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "896:30:5"
											}
										]
									},
									"functionSelector": "f5537ede",
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferToken",
									"nameLocation": "790:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "821:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "813:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "844:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "836:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "865:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "857:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:75:5"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "886:0:5"
									},
									"scope": 894,
									"src": "781:152:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										215
									],
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "996:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "36",
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1013:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6_by_1",
														"typeString": "int_const 6"
													},
													"value": "6"
												},
												"functionReturnParameters": 889,
												"id": 891,
												"nodeType": "Return",
												"src": "1006:8:5"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "948:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 886,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "971:8:5"
									},
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "956:2:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "989:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 887,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "989:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:7:5"
									},
									"scope": 894,
									"src": "939:82:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 895,
							"src": "114:909:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "32:992:5"
				},
				"id": 5
			}
		}
	}
}